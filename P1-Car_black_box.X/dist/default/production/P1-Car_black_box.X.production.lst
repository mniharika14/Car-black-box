

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Thu Nov 28 11:55:39 2024

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    55                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    56                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    57                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    58   000000                     
    59                           ; Version 2.20
    60                           ; Generated 12/02/2020 GMT
    61                           ; 
    62                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC18F4580 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93   000000                     
    94                           	psect	idataCOMRAM
    95   002BB2                     __pidataCOMRAM:
    96                           	callstack 0
    97                           
    98                           ;initializer for _star
    99   002BB2  0001               	dw	1
   100                           
   101                           ;initializer for _flag3
   102   002BB4  0001               	dw	1
   103                           
   104                           ;initializer for _flag1
   105   002BB6  0001               	dw	1
   106                           
   107                           	psect	idataBANK0
   108   0029AC                     __pidataBANK0:
   109                           	callstack 0
   110                           
   111                           ;initializer for main@F10508
   112   0029AC  4F                 	db	79
   113   0029AD  4E                 	db	78
   114   0029AE  00                 	db	0
   115   0029AF  47                 	db	71
   116   0029B0  4E                 	db	78
   117   0029B1  00                 	db	0
   118   0029B2  47                 	db	71
   119   0029B3  52                 	db	82
   120   0029B4  00                 	db	0
   121   0029B5  47                 	db	71
   122   0029B6  31                 	db	49
   123   0029B7  00                 	db	0
   124   0029B8  47                 	db	71
   125   0029B9  32                 	db	50
   126   0029BA  00                 	db	0
   127   0029BB  47                 	db	71
   128   0029BC  33                 	db	51
   129   0029BD  00                 	db	0
   130   0029BE  47                 	db	71
   131   0029BF  34                 	db	52
   132   0029C0  00                 	db	0
   133   0029C1  47                 	db	71
   134   0029C2  35                 	db	53
   135   0029C3  00                 	db	0
   136   0029C4  43                 	db	67
   137   0029C5  20                 	db	32
   138   0029C6  00                 	db	0
   139                           
   140                           ;initializer for main@F10534
   141   0029C7  4E                 	db	78
   142   0029C8  4F                 	db	79
   143   0029C9  2E                 	db	46
   144   0029CA  20                 	db	32
   145   0029CB  20                 	db	32
   146   0029CC  54                 	db	84
   147   0029CD  49                 	db	73
   148   0029CE  4D                 	db	77
   149   0029CF  45                 	db	69
   150   0029D0  20                 	db	32
   151   0029D1  20                 	db	32
   152   0029D2  20                 	db	32
   153   0029D3  45                 	db	69
   154   0029D4  56                 	db	86
   155   0029D5  20                 	db	32
   156   0029D6  53                 	db	83
   157   0029D7  50                 	db	80
   158   0029D8  00                 	db	0
   159                           
   160                           ;initializer for dash_board@flag
   161   0029D9  0001               	dw	1
   162                           
   163                           ;initializer for main@blink
   164   0029DB  0001               	dw	1
   165                           
   166                           ;initializer for main@stop_download
   167   0029DD  0001               	dw	1
   168                           
   169                           ;initializer for _stop
   170   0029DF  0001               	dw	1
   171                           
   172                           ;initializer for _set
   173   0029E1  0001               	dw	1
   174                           
   175                           ;initializer for _flag4
   176   0029E3  0001               	dw	1
   177                           
   178                           ;initializer for read_switches@once
   179   0029E5  01                 	db	1
   180   000000                     _RCREG	set	4014
   181   000000                     _TXREG	set	4013
   182   000000                     _SPBRG	set	4015
   183   000000                     _SSPADD	set	4040
   184   000000                     _SSPCON1	set	4038
   185   000000                     _ADRESL	set	4035
   186   000000                     _ADRESH	set	4036
   187   000000                     _BRG16	set	32195
   188   000000                     _ACKSTAT	set	32302
   189   000000                     _CKE	set	32318
   190   000000                     _GODONE	set	32273
   191   000000                     _RBPU	set	32655
   192   000000                     _ADCON0	set	4034
   193   000000                     _PORTBbits	set	3969
   194   000000                     _TRISD	set	3989
   195   000000                     _RCIF	set	31989
   196   000000                     _TXIF	set	31988
   197   000000                     _ABDEN	set	32192
   198   000000                     _CREN	set	32092
   199   000000                     _RX9	set	32094
   200   000000                     _BRGH	set	32098
   201   000000                     _SENDB	set	32099
   202   000000                     _SYNC	set	32100
   203   000000                     _TXEN	set	32101
   204   000000                     _TRISC6	set	31910
   205   000000                     _TRISC7	set	31911
   206   000000                     _ACKEN	set	32300
   207   000000                     _ACKDT	set	32301
   208   000000                     _RCEN	set	32299
   209   000000                     _RSEN	set	32297
   210   000000                     _PEN	set	32298
   211   000000                     _SEN	set	32296
   212   000000                     _SMP	set	32319
   213   000000                     _TRISC4	set	31908
   214   000000                     _TRISC3	set	31907
   215   000000                     _GO	set	32273
   216   000000                     _ADON	set	32272
   217   000000                     _VCFG0	set	32268
   218   000000                     _VCFG1	set	32269
   219   000000                     _ADCS2	set	32258
   220   000000                     _ADCS1	set	32257
   221   000000                     _ADCS0	set	32256
   222   000000                     _ACQT0	set	32259
   223   000000                     _ACQT1	set	32260
   224   000000                     _ACQT2	set	32261
   225   000000                     _RD7	set	31775
   226   000000                     _RC0	set	31760
   227   000000                     _RC2	set	31762
   228   000000                     _PORTB	set	3969
   229   000000                     _RC1	set	31761
   230   000000                     _TRISB	set	3987
   231   000000                     _TRISC	set	3988
   232   000000                     _PORTD	set	3971
   233   000000                     _TRISD7	set	31919
   234   000000                     _ADCON1	set	4033
   235   000000                     _SSPIF	set	31987
   236   000000                     _ADFM	set	32263
   237   000000                     _SSPBUF	set	4041
   238   000000                     _BCLIF	set	32011
   239   000000                     _SPEN	set	32095
   240   000000                     _TX9	set	32102
   241                           
   242                           	psect	smallconst
   243   000600                     __psmallconst:
   244                           	callstack 0
   245   000600  00                 	db	0
   246   000601                     STR_19:
   247   000601  50                 	db	80	;'P'
   248   000602  4C                 	db	76	;'L'
   249   000603  45                 	db	69	;'E'
   250   000604  41                 	db	65	;'A'
   251   000605  53                 	db	83	;'S'
   252   000606  45                 	db	69	;'E'
   253   000607  20                 	db	32
   254   000608  57                 	db	87	;'W'
   255   000609  41                 	db	65	;'A'
   256   00060A  49                 	db	73	;'I'
   257   00060B  54                 	db	84	;'T'
   258   00060C  2E                 	db	46
   259   00060D  2E                 	db	46
   260   00060E  2E                 	db	46
   261   00060F  00                 	db	0
   262   000610                     STR_11:
   263   000610  54                 	db	84	;'T'
   264   000611  4F                 	db	79	;'O'
   265   000612  20                 	db	32
   266   000613  44                 	db	68	;'D'
   267   000614  49                 	db	73	;'I'
   268   000615  53                 	db	83	;'S'
   269   000616  50                 	db	80	;'P'
   270   000617  4C                 	db	76	;'L'
   271   000618  41                 	db	65	;'A'
   272   000619  59                 	db	89	;'Y'
   273   00061A  20                 	db	32
   274   00061B  3A                 	db	58	;':'
   275   00061C  28                 	db	40
   276   00061D  00                 	db	0
   277   00061E                     STR_12:
   278   00061E  23                 	db	35
   279   00061F  20                 	db	32
   280   000620  20                 	db	32
   281   000621  20                 	db	32
   282   000622  56                 	db	86	;'V'
   283   000623  49                 	db	73	;'I'
   284   000624  45                 	db	69	;'E'
   285   000625  57                 	db	87	;'W'
   286   000626  20                 	db	32
   287   000627  4C                 	db	76	;'L'
   288   000628  4F                 	db	79	;'O'
   289   000629  47                 	db	71	;'G'
   290   00062A  3A                 	db	58	;':'
   291   00062B  00                 	db	0
   292   00062C                     STR_18:
   293   00062C  43                 	db	67	;'C'
   294   00062D  4C                 	db	76	;'L'
   295   00062E  45                 	db	69	;'E'
   296   00062F  41                 	db	65	;'A'
   297   000630  52                 	db	82	;'R'
   298   000631  49                 	db	73	;'I'
   299   000632  4E                 	db	78	;'N'
   300   000633  47                 	db	71	;'G'
   301   000634  20                 	db	32
   302   000635  4C                 	db	76	;'L'
   303   000636  4F                 	db	79	;'O'
   304   000637  47                 	db	71	;'G'
   305   000638  53                 	db	83	;'S'
   306   000639  00                 	db	0
   307   00063A                     STR_16:
   308   00063A  44                 	db	68	;'D'
   309   00063B  4F                 	db	79	;'O'
   310   00063C  57                 	db	87	;'W'
   311   00063D  4E                 	db	78	;'N'
   312   00063E  4C                 	db	76	;'L'
   313   00063F  4F                 	db	79	;'O'
   314   000640  41                 	db	65	;'A'
   315   000641  44                 	db	68	;'D'
   316   000642  49                 	db	73	;'I'
   317   000643  4E                 	db	78	;'N'
   318   000644  47                 	db	71	;'G'
   319   000645  20                 	db	32
   320   000646  00                 	db	0
   321   000647                     STR_7:
   322   000647  44                 	db	68	;'D'
   323   000648  4F                 	db	79	;'O'
   324   000649  57                 	db	87	;'W'
   325   00064A  4E                 	db	78	;'N'
   326   00064B  4C                 	db	76	;'L'
   327   00064C  4F                 	db	79	;'O'
   328   00064D  41                 	db	65	;'A'
   329   00064E  44                 	db	68	;'D'
   330   00064F  20                 	db	32
   331   000650  4C                 	db	76	;'L'
   332   000651  4F                 	db	79	;'O'
   333   000652  47                 	db	71	;'G'
   334   000653  00                 	db	0
   335   000654                     STR_9:
   336   000654  43                 	db	67	;'C'
   337   000655  4C                 	db	76	;'L'
   338   000656  45                 	db	69	;'E'
   339   000657  41                 	db	65	;'A'
   340   000658  52                 	db	82	;'R'
   341   000659  20                 	db	32
   342   00065A  4C                 	db	76	;'L'
   343   00065B  4F                 	db	79	;'O'
   344   00065C  47                 	db	71	;'G'
   345   00065D  00                 	db	0
   346   00065E                     STR_5:
   347   00065E  53                 	db	83	;'S'
   348   00065F  45                 	db	69	;'E'
   349   000660  54                 	db	84	;'T'
   350   000661  20                 	db	32
   351   000662  54                 	db	84	;'T'
   352   000663  49                 	db	73	;'I'
   353   000664  4D                 	db	77	;'M'
   354   000665  45                 	db	69	;'E'
   355   000666  00                 	db	0
   356   000667                     STR_4:
   357   000667  56                 	db	86	;'V'
   358   000668  49                 	db	73	;'I'
   359   000669  45                 	db	69	;'E'
   360   00066A  57                 	db	87	;'W'
   361   00066B  20                 	db	32
   362   00066C  4C                 	db	76	;'L'
   363   00066D  4F                 	db	79	;'O'
   364   00066E  47                 	db	71	;'G'
   365   00066F  00                 	db	0
   366   000670                     STR_13:
   367   000670  48                 	db	72	;'H'
   368   000671  48                 	db	72	;'H'
   369   000672  3A                 	db	58	;':'
   370   000673  4D                 	db	77	;'M'
   371   000674  4D                 	db	77	;'M'
   372   000675  3A                 	db	58	;':'
   373   000676  53                 	db	83	;'S'
   374   000677  53                 	db	83	;'S'
   375   000678  00                 	db	0
   376   000679                     STR_17:
   377   000679  4C                 	db	76	;'L'
   378   00067A  4F                 	db	79	;'O'
   379   00067B  47                 	db	71	;'G'
   380   00067C  53                 	db	83	;'S'
   381   00067D  2E                 	db	46
   382   00067E  2E                 	db	46
   383   00067F  2E                 	db	46
   384   000680  00                 	db	0
   385   000681                     STR_10:
   386   000681  4E                 	db	78	;'N'
   387   000682  4F                 	db	79	;'O'
   388   000683  20                 	db	32
   389   000684  4C                 	db	76	;'L'
   390   000685  4F                 	db	79	;'O'
   391   000686  47                 	db	71	;'G'
   392   000687  53                 	db	83	;'S'
   393   000688  00                 	db	0
   394   000689                     STR_14:
   395   000689  0A                 	db	10
   396   00068A  0D                 	db	13
   397   00068B  00                 	db	0
   398   00068C                     STR_3:
   399   00068C  53                 	db	83	;'S'
   400   00068D  50                 	db	80	;'P'
   401   00068E  00                 	db	0
   402   00068F                     STR_2:
   403   00068F  45                 	db	69	;'E'
   404   000690  56                 	db	86	;'V'
   405   000691  00                 	db	0
   406   000692  00                 	db	0	; dummy byte at the end
   407   000000                     
   408                           ; #config settings
   409                           
   410                           	psect	cinit
   411   00281E                     __pcinit:
   412                           	callstack 0
   413   00281E                     start_initialization:
   414                           	callstack 0
   415   00281E                     __initialization:
   416                           	callstack 0
   417                           
   418                           ; Initialize objects allocated to BANK0 (58 bytes)
   419                           ; load TBLPTR registers with __pidataBANK0
   420   00281E  0EAC               	movlw	low __pidataBANK0
   421   002820  6EF6               	movwf	tblptrl,c
   422   002822  0E29               	movlw	high __pidataBANK0
   423   002824  6EF7               	movwf	tblptrh,c
   424   002826  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   425   002828  6EF8               	movwf	tblptru,c
   426   00282A  EE00  F060         	lfsr	0,__pdataBANK0
   427   00282E  EE10 F03A          	lfsr	1,58
   428   002832                     copy_data0:
   429   002832  0009               	tblrd		*+
   430   002834  CFF5 FFEE          	movff	tablat,postinc0
   431   002838  50E5               	movf	postdec1,w,c
   432   00283A  50E1               	movf	fsr1l,w,c
   433   00283C  E1FA               	bnz	copy_data0
   434                           
   435                           ; Initialize objects allocated to COMRAM (6 bytes)
   436                           ; load TBLPTR registers with __pidataCOMRAM
   437   00283E  0EB2               	movlw	low __pidataCOMRAM
   438   002840  6EF6               	movwf	tblptrl,c
   439   002842  0E2B               	movlw	high __pidataCOMRAM
   440   002844  6EF7               	movwf	tblptrh,c
   441   002846  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   442   002848  6EF8               	movwf	tblptru,c
   443   00284A  EE00  F05A         	lfsr	0,__pdataCOMRAM
   444   00284E  EE10 F006          	lfsr	1,6
   445   002852                     copy_data1:
   446   002852  0009               	tblrd		*+
   447   002854  CFF5 FFEE          	movff	tablat,postinc0
   448   002858  50E5               	movf	postdec1,w,c
   449   00285A  50E1               	movf	fsr1l,w,c
   450   00285C  E1FA               	bnz	copy_data1
   451                           
   452                           ; Clear objects allocated to BANK0 (29 bytes)
   453   00285E  EE00  F0CF         	lfsr	0,__pbssBANK0
   454   002862  0E1D               	movlw	29
   455   002864                     clear_0:
   456   002864  6AEE               	clrf	postinc0,c
   457   002866  06E8               	decf	wreg,f,c
   458   002868  E1FD               	bnz	clear_0
   459                           
   460                           ; Clear objects allocated to COMRAM (6 bytes)
   461   00286A  6A59               	clrf	(__pbssCOMRAM+5)& (0+255),c
   462   00286C  6A58               	clrf	(__pbssCOMRAM+4)& (0+255),c
   463   00286E  6A57               	clrf	(__pbssCOMRAM+3)& (0+255),c
   464   002870  6A56               	clrf	(__pbssCOMRAM+2)& (0+255),c
   465   002872  6A55               	clrf	(__pbssCOMRAM+1)& (0+255),c
   466   002874  6A54               	clrf	__pbssCOMRAM& (0+255),c
   467   002876                     end_of_initialization:
   468                           	callstack 0
   469   002876                     __end_of__initialization:
   470                           	callstack 0
   471   002876  0E00               	movlw	low (__Lmediumconst shr (0+16))
   472   002878  6EF8               	movwf	tblptru,c
   473   00287A  0100               	movlb	0
   474   00287C  EF4A  F003         	goto	_main	;jump to C main() function
   475                           
   476                           	psect	bssCOMRAM
   477   000054                     __pbssCOMRAM:
   478                           	callstack 0
   479   000054                     _sec:
   480                           	callstack 0
   481   000054                     	ds	2
   482   000056                     _min:
   483                           	callstack 0
   484   000056                     	ds	2
   485   000058                     _hours:
   486                           	callstack 0
   487   000058                     	ds	2
   488                           
   489                           	psect	dataCOMRAM
   490   00005A                     __pdataCOMRAM:
   491                           	callstack 0
   492   00005A                     _star:
   493                           	callstack 0
   494   00005A                     	ds	2
   495   00005C                     _flag3:
   496                           	callstack 0
   497   00005C                     	ds	2
   498   00005E                     _flag1:
   499                           	callstack 0
   500   00005E                     	ds	2
   501                           
   502                           	psect	bssBANK0
   503   0000CF                     __pbssBANK0:
   504                           	callstack 0
   505   0000CF                     _time:
   506                           	callstack 0
   507   0000CF                     	ds	9
   508   0000D8                     _clock_reg:
   509                           	callstack 0
   510   0000D8                     	ds	3
   511   0000DB                     dash_board@start_dec:
   512                           	callstack 0
   513   0000DB                     	ds	2
   514   0000DD                     main@delay:
   515                           	callstack 0
   516   0000DD                     	ds	2
   517   0000DF                     _clearing_log:
   518                           	callstack 0
   519   0000DF                     	ds	2
   520   0000E1                     _storing_data:
   521                           	callstack 0
   522   0000E1                     	ds	2
   523   0000E3                     _clear:
   524                           	callstack 0
   525   0000E3                     	ds	2
   526   0000E5                     _flag2:
   527                           	callstack 0
   528   0000E5                     	ds	2
   529   0000E7                     _count:
   530                           	callstack 0
   531   0000E7                     	ds	2
   532   0000E9                     _data_lim:
   533                           	callstack 0
   534   0000E9                     	ds	2
   535   0000EB                     read_switches@key:
   536                           	callstack 0
   537   0000EB                     	ds	1
   538                           
   539                           	psect	dataBANK0
   540   000060                     __pdataBANK0:
   541                           	callstack 0
   542   000060                     main@F10508:
   543                           	callstack 0
   544   000060                     	ds	27
   545   00007B                     main@F10534:
   546                           	callstack 0
   547   00007B                     	ds	18
   548   00008D                     dash_board@flag:
   549                           	callstack 0
   550   00008D                     	ds	2
   551   00008F                     main@blink:
   552                           	callstack 0
   553   00008F                     	ds	2
   554   000091                     main@stop_download:
   555                           	callstack 0
   556   000091                     	ds	2
   557   000093                     _stop:
   558                           	callstack 0
   559   000093                     	ds	2
   560   000095                     _set:
   561                           	callstack 0
   562   000095                     	ds	2
   563   000097                     _flag4:
   564                           	callstack 0
   565   000097                     	ds	2
   566   000099                     read_switches@once:
   567                           	callstack 0
   568   000099                     	ds	1
   569                           
   570                           	psect	cstackBANK1
   571   000100                     __pcstackBANK1:
   572                           	callstack 0
   573   000100                     main@download:
   574                           	callstack 0
   575                           
   576                           ; 180 bytes @ 0x0
   577   000100                     	ds	180
   578                           
   579                           	psect	cstackBANK0
   580   00009A                     __pcstackBANK0:
   581                           	callstack 0
   582   00009A                     main@gear:
   583                           	callstack 0
   584                           
   585                           ; 27 bytes @ 0x0
   586   00009A                     	ds	27
   587   0000B5                     main@store:
   588                           	callstack 0
   589                           
   590                           ; 10 bytes @ 0x1B
   591   0000B5                     	ds	10
   592   0000BF                     main@j:
   593                           	callstack 0
   594                           
   595                           ; 2 bytes @ 0x25
   596   0000BF                     	ds	2
   597   0000C1                     main@a:
   598                           	callstack 0
   599                           
   600                           ; 2 bytes @ 0x27
   601   0000C1                     	ds	2
   602   0000C3                     main@b:
   603                           	callstack 0
   604                           
   605                           ; 2 bytes @ 0x29
   606   0000C3                     	ds	2
   607   0000C5                     main@i:
   608                           	callstack 0
   609                           
   610                           ; 2 bytes @ 0x2B
   611   0000C5                     	ds	2
   612   0000C7                     main@i_175:
   613                           	callstack 0
   614                           
   615                           ; 2 bytes @ 0x2D
   616   0000C7                     	ds	2
   617   0000C9                     main@adc:
   618                           	callstack 0
   619                           
   620                           ; 2 bytes @ 0x2F
   621   0000C9                     	ds	2
   622   0000CB                     main@i_170:
   623                           	callstack 0
   624                           
   625                           ; 2 bytes @ 0x31
   626   0000CB                     	ds	2
   627   0000CD                     main@j_171:
   628                           	callstack 0
   629                           
   630                           ; 2 bytes @ 0x33
   631   0000CD                     	ds	2
   632                           
   633                           	psect	cstackCOMRAM
   634   000001                     __pcstackCOMRAM:
   635                           	callstack 0
   636   000001                     ??_dash_board:
   637   000001                     ?_read_adc:
   638                           	callstack 0
   639   000001                     ?___wmul:
   640                           	callstack 0
   641   000001                     ?___awdiv:
   642                           	callstack 0
   643   000001                     ?___awmod:
   644                           	callstack 0
   645   000001                     ?___xxtofl:
   646                           	callstack 0
   647   000001                     clcd_write@control_bit:
   648                           	callstack 0
   649   000001                     read_switches@detection_type:
   650                           	callstack 0
   651   000001                     i2c_write@data:
   652                           	callstack 0
   653   000001                     putch@byte:
   654                           	callstack 0
   655   000001                     ___wmul@multiplier:
   656                           	callstack 0
   657   000001                     ___awdiv@dividend:
   658                           	callstack 0
   659   000001                     ___awmod@dividend:
   660                           	callstack 0
   661   000001                     ___xxtofl@val:
   662                           	callstack 0
   663                           
   664                           ; 4 bytes @ 0x0
   665   000001                     	ds	1
   666   000002                     clcd_write@byte:
   667                           	callstack 0
   668   000002                     dash_board@key:
   669                           	callstack 0
   670   000002                     read_ds1307@address:
   671                           	callstack 0
   672   000002                     write_external_eeprom@data:
   673                           	callstack 0
   674   000002                     read_external_eeprom@address:
   675                           	callstack 0
   676                           
   677                           ; 1 bytes @ 0x1
   678   000002                     	ds	1
   679   000003                     ??_read_adc:
   680   000003                     ??_init_clcd:
   681   000003                     read_ds1307@data:
   682                           	callstack 0
   683   000003                     read_external_eeprom@data:
   684                           	callstack 0
   685   000003                     write_external_eeprom@wait:
   686                           	callstack 0
   687   000003                     ___wmul@multiplicand:
   688                           	callstack 0
   689   000003                     ___awdiv@divisor:
   690                           	callstack 0
   691   000003                     ___awmod@divisor:
   692                           	callstack 0
   693                           
   694                           ; 2 bytes @ 0x2
   695   000003                     	ds	1
   696   000004                     
   697                           ; 1 bytes @ 0x3
   698   000004                     	ds	1
   699   000005                     ??___xxtofl:
   700   000005                     write_external_eeprom@address:
   701                           	callstack 0
   702   000005                     ___awdiv@counter:
   703                           	callstack 0
   704   000005                     ___awmod@counter:
   705                           	callstack 0
   706   000005                     read_adc@reg_val:
   707                           	callstack 0
   708   000005                     ___wmul@product:
   709                           	callstack 0
   710                           
   711                           ; 2 bytes @ 0x4
   712   000005                     	ds	1
   713   000006                     ___awdiv@sign:
   714                           	callstack 0
   715   000006                     ___awmod@sign:
   716                           	callstack 0
   717   000006                     store_data@write:
   718                           	callstack 0
   719                           
   720                           ; 2 bytes @ 0x5
   721   000006                     	ds	1
   722   000007                     read_adc@channel:
   723                           	callstack 0
   724   000007                     clcd_print@data:
   725                           	callstack 0
   726   000007                     puts@s:
   727                           	callstack 0
   728   000007                     ___awdiv@quotient:
   729                           	callstack 0
   730                           
   731                           ; 2 bytes @ 0x6
   732   000007                     	ds	1
   733   000008                     store_data@shift_index:
   734                           	callstack 0
   735                           
   736                           ; 2 bytes @ 0x7
   737   000008                     	ds	1
   738   000009                     clcd_print@addr:
   739                           	callstack 0
   740   000009                     clcd_putch@addr:
   741                           	callstack 0
   742   000009                     write_ds1307@data:
   743                           	callstack 0
   744   000009                     ___xxtofl@sign:
   745                           	callstack 0
   746                           
   747                           ; 1 bytes @ 0x8
   748   000009                     	ds	1
   749   00000A                     clcd_putch@data:
   750                           	callstack 0
   751   00000A                     store_data@temp:
   752                           	callstack 0
   753   00000A                     write_ds1307@address:
   754                           	callstack 0
   755   00000A                     ___xxtofl@exp:
   756                           	callstack 0
   757                           
   758                           ; 1 bytes @ 0x9
   759   00000A                     	ds	1
   760   00000B                     ??_main_menu:
   761   00000B                     init_ds1307@dummy:
   762                           	callstack 0
   763   00000B                     store_data@i:
   764                           	callstack 0
   765   00000B                     ___xxtofl@arg:
   766                           	callstack 0
   767                           
   768                           ; 4 bytes @ 0xA
   769   00000B                     	ds	1
   770   00000C                     
   771                           ; 1 bytes @ 0xB
   772   00000C                     	ds	1
   773   00000D                     main_menu@key:
   774                           	callstack 0
   775   00000D                     store_data@i_321:
   776                           	callstack 0
   777                           
   778                           ; 2 bytes @ 0xC
   779   00000D                     	ds	2
   780   00000F                     ?___fldiv:
   781                           	callstack 0
   782   00000F                     store_data@i_322:
   783                           	callstack 0
   784   00000F                     ___fldiv@b:
   785                           	callstack 0
   786                           
   787                           ; 4 bytes @ 0xE
   788   00000F                     	ds	2
   789   000011                     store_data@clr:
   790                           	callstack 0
   791                           
   792                           ; 2 bytes @ 0x10
   793   000011                     	ds	2
   794   000013                     ___fldiv@a:
   795                           	callstack 0
   796                           
   797                           ; 4 bytes @ 0x12
   798   000013                     	ds	4
   799   000017                     ??___fldiv:
   800                           
   801                           ; 1 bytes @ 0x16
   802   000017                     	ds	4
   803   00001B                     ___fldiv@rem:
   804                           	callstack 0
   805                           
   806                           ; 4 bytes @ 0x1A
   807   00001B                     	ds	4
   808   00001F                     ___fldiv@sign:
   809                           	callstack 0
   810                           
   811                           ; 1 bytes @ 0x1E
   812   00001F                     	ds	1
   813   000020                     ___fldiv@new_exp:
   814                           	callstack 0
   815                           
   816                           ; 2 bytes @ 0x1F
   817   000020                     	ds	2
   818   000022                     ___fldiv@grs:
   819                           	callstack 0
   820                           
   821                           ; 4 bytes @ 0x21
   822   000022                     	ds	4
   823   000026                     ___fldiv@bexp:
   824                           	callstack 0
   825                           
   826                           ; 1 bytes @ 0x25
   827   000026                     	ds	1
   828   000027                     ___fldiv@aexp:
   829                           	callstack 0
   830                           
   831                           ; 1 bytes @ 0x26
   832   000027                     	ds	1
   833   000028                     ?___fltol:
   834                           	callstack 0
   835   000028                     ___fltol@f1:
   836                           	callstack 0
   837                           
   838                           ; 4 bytes @ 0x27
   839   000028                     	ds	4
   840   00002C                     ??___fltol:
   841                           
   842                           ; 1 bytes @ 0x2B
   843   00002C                     	ds	4
   844   000030                     ___fltol@sign1:
   845                           	callstack 0
   846                           
   847                           ; 1 bytes @ 0x2F
   848   000030                     	ds	1
   849   000031                     ___fltol@exp1:
   850                           	callstack 0
   851                           
   852                           ; 1 bytes @ 0x30
   853   000031                     	ds	1
   854   000032                     ??_main:
   855                           
   856                           ; 1 bytes @ 0x31
   857   000032                     	ds	3
   858   000035                     main@download1:
   859                           	callstack 0
   860                           
   861                           ; 18 bytes @ 0x34
   862   000035                     	ds	18
   863   000047                     main@adc_reg_val:
   864                           	callstack 0
   865                           
   866                           ; 2 bytes @ 0x46
   867   000047                     	ds	2
   868   000049                     main@write:
   869                           	callstack 0
   870                           
   871                           ; 10 bytes @ 0x48
   872   000049                     	ds	10
   873   000053                     main@key:
   874                           	callstack 0
   875                           
   876                           ; 1 bytes @ 0x52
   877   000053                     	ds	1
   878                           
   879 ;;
   880 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   881 ;;
   882 ;; *************** function _main *****************
   883 ;; Defined at:
   884 ;;		line 35 in file "main.c"
   885 ;; Parameters:    Size  Location     Type
   886 ;;		None
   887 ;; Auto vars:     Size  Location     Type
   888 ;;  j               2   51[BANK0 ] int 
   889 ;;  i               2   45[BANK0 ] int 
   890 ;;  download1      18   52[COMRAM] unsigned char [18]
   891 ;;  i               2   49[BANK0 ] int 
   892 ;;  i               2   43[BANK0 ] int 
   893 ;;  download      180    0[BANK1 ] unsigned char [18][10]
   894 ;;  b               2   41[BANK0 ] int 
   895 ;;  a               2   39[BANK0 ] int 
   896 ;;  j               2   37[BANK0 ] int 
   897 ;;  gear           27    0[BANK0 ] unsigned char [3][9]
   898 ;;  write          10   72[COMRAM] unsigned char [10]
   899 ;;  store          10   27[BANK0 ] unsigned char [10]
   900 ;;  adc             2   47[BANK0 ] int 
   901 ;;  adc_reg_val     2   70[COMRAM] unsigned int 
   902 ;;  key             1   82[COMRAM] unsigned char 
   903 ;; Return value:  Size  Location     Type
   904 ;;                  1    wreg      void 
   905 ;; Registers used:
   906 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   907 ;; Tracked objects:
   908 ;;		On entry : 0/0
   909 ;;		On exit  : 0/0
   910 ;;		Unchanged: 0/0
   911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   912 ;;      Params:         0       0       0       0       0       0       0
   913 ;;      Locals:        31      53     180       0       0       0       0
   914 ;;      Temps:          3       0       0       0       0       0       0
   915 ;;      Totals:        34      53     180       0       0       0       0
   916 ;;Total ram usage:      267 bytes
   917 ;; Hardware stack levels required when called: 6
   918 ;; This function calls:
   919 ;;		___awdiv
   920 ;;		___awmod
   921 ;;		___fldiv
   922 ;;		___fltol
   923 ;;		___wmul
   924 ;;		___xxtofl
   925 ;;		_clcd_print
   926 ;;		_clcd_putch
   927 ;;		_clcd_write
   928 ;;		_dash_board
   929 ;;		_get_time
   930 ;;		_init_config
   931 ;;		_main_menu
   932 ;;		_puts
   933 ;;		_read_adc
   934 ;;		_read_external_eeprom
   935 ;;		_read_switches
   936 ;;		_store_data
   937 ;; This function is called by:
   938 ;;		Startup code after reset
   939 ;; This function uses a non-reentrant model
   940 ;;
   941                           
   942                           	psect	text0
   943   000694                     __ptext0:
   944                           	callstack 0
   945   000694                     _main:
   946                           	callstack 25
   947   000694                     
   948                           ;main.c: 36:     unsigned char key;;main.c: 38:     init_config();
   949   000694  EC7B  F015         	call	_init_config	;wreg free
   950   000698                     
   951                           ;main.c: 39:     char store[10], gear[9][3] = {"ON", "GN", "GR", "G1", "G2", "G3", "G4",
      +                           "G5", "C "};
   952   000698  EE20  F060         	lfsr	2,main@F10508
   953   00069C  EE10  F09A         	lfsr	1,main@gear
   954   0006A0  0E1A               	movlw	26
   955   0006A2                     u3541:
   956   0006A2  CFDB FFE3          	movff	plusw2,plusw1
   957   0006A6  06E8               	decf	wreg,f,c
   958   0006A8  E2FC               	bc	u3541
   959   0006AA                     l3442:
   960                           
   961                           ;main.c: 45:         static int delay;;main.c: 46:         static int blink = 1;;main.c:
      +                           47:         get_time();
   962   0006AA  EC5C  F013         	call	_get_time	;wreg free
   963   0006AE                     
   964                           ;main.c: 48:         adc_reg_val = read_adc(0x04);
   965   0006AE  0E04               	movlw	4
   966   0006B0  EC93  F014         	call	_read_adc
   967   0006B4  C001  F047         	movff	?_read_adc,main@adc_reg_val
   968   0006B8  C002  F048         	movff	?_read_adc+1,main@adc_reg_val+1
   969   0006BC                     
   970                           ;main.c: 49:         adc = (adc_reg_val) / (10.23);
   971   0006BC  0E14               	movlw	20
   972   0006BE  6E13               	movwf	___fldiv@a^0,c
   973   0006C0  0EAE               	movlw	174
   974   0006C2  6E14               	movwf	(___fldiv@a+1)^0,c
   975   0006C4  0E23               	movlw	35
   976   0006C6  6E15               	movwf	(___fldiv@a+2)^0,c
   977   0006C8  0E41               	movlw	65
   978   0006CA  6E16               	movwf	(___fldiv@a+3)^0,c
   979   0006CC  C047  F001         	movff	main@adc_reg_val,___xxtofl@val
   980   0006D0  C048  F002         	movff	main@adc_reg_val+1,___xxtofl@val+1
   981   0006D4  6A03               	clrf	(___xxtofl@val+2)^0,c
   982   0006D6  6A04               	clrf	(___xxtofl@val+3)^0,c
   983   0006D8  0E00               	movlw	0
   984   0006DA  ECB4  F00F         	call	___xxtofl
   985   0006DE  C001  F00F         	movff	?___xxtofl,___fldiv@b
   986   0006E2  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
   987   0006E6  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
   988   0006EA  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
   989   0006EE  ECEF  F00C         	call	___fldiv	;wreg free
   990   0006F2  C00F  F028         	movff	?___fldiv,___fltol@f1
   991   0006F6  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
   992   0006FA  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
   993   0006FE  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
   994   000702  ECCB  F011         	call	___fltol	;wreg free
   995   000706  C028  F0C9         	movff	?___fltol,main@adc
   996   00070A  C029  F0CA         	movff	?___fltol+1,main@adc+1
   997   00070E                     
   998                           ;main.c: 50:         if (adc > 99) {
   999   00070E  0100               	movlb	0	; () banked
  1000   000710  BFCA               	btfsc	(main@adc+1)& (0+255),7,b
  1001   000712  EF94  F003         	goto	u3551
  1002   000716  51CA               	movf	(main@adc+1)& (0+255),w,b
  1003   000718  E109               	bnz	u3550
  1004   00071A  0E64               	movlw	100
  1005   00071C  5DC9               	subwf	main@adc& (0+255),w,b
  1006   00071E  A0D8               	btfss	status,0,c
  1007   000720  EF94  F003         	goto	u3551
  1008   000724  EF96  F003         	goto	u3550
  1009   000728                     u3551:
  1010   000728  EF9A  F003         	goto	l3452
  1011   00072C                     u3550:
  1012   00072C                     
  1013                           ; BSR set to: 0
  1014                           ;main.c: 51:             adc = 99;
  1015   00072C  0E00               	movlw	0
  1016   00072E  6FCA               	movwf	(main@adc+1)& (0+255),b
  1017   000730  0E63               	movlw	99
  1018   000732  6FC9               	movwf	main@adc& (0+255),b
  1019   000734                     l3452:
  1020                           
  1021                           ; BSR set to: 0
  1022                           ;main.c: 54:         key = read_switches(1);
  1023   000734  0E01               	movlw	1
  1024   000736  EC9D  F013         	call	_read_switches
  1025   00073A  6E53               	movwf	main@key^0,c
  1026   00073C                     
  1027                           ;main.c: 56:         dash_board(key);
  1028   00073C  5053               	movf	main@key^0,w,c
  1029   00073E  EC6F  F00A         	call	_dash_board
  1030   000742                     
  1031                           ;main.c: 57:         main_menu(key);
  1032   000742  5053               	movf	main@key^0,w,c
  1033   000744  ECBC  F00E         	call	_main_menu
  1034   000748                     
  1035                           ;main.c: 59:         if (flag1 == 1) {
  1036   000748  045E               	decf	_flag1^0,w,c
  1037   00074A  105F               	iorwf	(_flag1+1)^0,w,c
  1038   00074C  A4D8               	btfss	status,2,c
  1039   00074E  EFAB  F003         	goto	u3561
  1040   000752  EFAD  F003         	goto	u3560
  1041   000756                     u3561:
  1042   000756  EF5F  F004         	goto	l3496
  1043   00075A                     u3560:
  1044   00075A                     
  1045                           ;main.c: 61:             clcd_write(0x01, 0);
  1046   00075A  0E00               	movlw	0
  1047   00075C  6E01               	movwf	clcd_write@control_bit^0,c
  1048   00075E  0E01               	movlw	1
  1049   000760  ECF3  F014         	call	_clcd_write
  1050   000764                     
  1051                           ;main.c: 62:             clcd_print("TIME", (0x80 + (2)));
  1052   000764  0E62               	movlw	low (STR_5+4)
  1053   000766  6E07               	movwf	clcd_print@data^0,c
  1054   000768  0E06               	movlw	high (STR_5+4)
  1055   00076A  6E08               	movwf	(clcd_print@data+1)^0,c
  1056   00076C  0E82               	movlw	130
  1057   00076E  6E09               	movwf	clcd_print@addr^0,c
  1058   000770  ECD9  F013         	call	_clcd_print	;wreg free
  1059   000774                     
  1060                           ;main.c: 63:             clcd_print("EV", (0x80 + (10)));
  1061   000774  0E8F               	movlw	low STR_2
  1062   000776  6E07               	movwf	clcd_print@data^0,c
  1063   000778  0E06               	movlw	high STR_2
  1064   00077A  6E08               	movwf	(clcd_print@data+1)^0,c
  1065   00077C  0E8A               	movlw	138
  1066   00077E  6E09               	movwf	clcd_print@addr^0,c
  1067   000780  ECD9  F013         	call	_clcd_print	;wreg free
  1068   000784                     
  1069                           ;main.c: 64:             clcd_print("SP", (0x80 + (14)));
  1070   000784  0E8C               	movlw	low STR_3
  1071   000786  6E07               	movwf	clcd_print@data^0,c
  1072   000788  0E06               	movlw	high STR_3
  1073   00078A  6E08               	movwf	(clcd_print@data+1)^0,c
  1074   00078C  0E8E               	movlw	142
  1075   00078E  6E09               	movwf	clcd_print@addr^0,c
  1076   000790  ECD9  F013         	call	_clcd_print	;wreg free
  1077   000794                     
  1078                           ;main.c: 65:             clcd_putch(time[0], (0xC0 + (0)));
  1079   000794  0EC0               	movlw	192
  1080   000796  6E09               	movwf	clcd_putch@addr^0,c
  1081   000798  0100               	movlb	0	; () banked
  1082   00079A  51CF               	movf	_time& (0+255),w,b
  1083   00079C  EC94  F015         	call	_clcd_putch
  1084   0007A0                     
  1085                           ;main.c: 66:             clcd_putch(time[1], (0xC0 + (1)));
  1086   0007A0  0EC1               	movlw	193
  1087   0007A2  6E09               	movwf	clcd_putch@addr^0,c
  1088   0007A4  0100               	movlb	0	; () banked
  1089   0007A6  51D0               	movf	(_time+1)& (0+255),w,b
  1090   0007A8  EC94  F015         	call	_clcd_putch
  1091   0007AC                     
  1092                           ;main.c: 67:             clcd_putch(time[2], (0xC0 + (2)));
  1093   0007AC  0EC2               	movlw	194
  1094   0007AE  6E09               	movwf	clcd_putch@addr^0,c
  1095   0007B0  0100               	movlb	0	; () banked
  1096   0007B2  51D1               	movf	(_time+2)& (0+255),w,b
  1097   0007B4  EC94  F015         	call	_clcd_putch
  1098   0007B8                     
  1099                           ;main.c: 68:             clcd_putch(time[3], (0xC0 + (3)));
  1100   0007B8  0EC3               	movlw	195
  1101   0007BA  6E09               	movwf	clcd_putch@addr^0,c
  1102   0007BC  0100               	movlb	0	; () banked
  1103   0007BE  51D2               	movf	(_time+3)& (0+255),w,b
  1104   0007C0  EC94  F015         	call	_clcd_putch
  1105   0007C4                     
  1106                           ;main.c: 69:             clcd_putch(time[4], (0xC0 + (4)));
  1107   0007C4  0EC4               	movlw	196
  1108   0007C6  6E09               	movwf	clcd_putch@addr^0,c
  1109   0007C8  0100               	movlb	0	; () banked
  1110   0007CA  51D3               	movf	(_time+4)& (0+255),w,b
  1111   0007CC  EC94  F015         	call	_clcd_putch
  1112   0007D0                     
  1113                           ;main.c: 70:             clcd_putch(time[5], (0xC0 + (5)));
  1114   0007D0  0EC5               	movlw	197
  1115   0007D2  6E09               	movwf	clcd_putch@addr^0,c
  1116   0007D4  0100               	movlb	0	; () banked
  1117   0007D6  51D4               	movf	(_time+5)& (0+255),w,b
  1118   0007D8  EC94  F015         	call	_clcd_putch
  1119   0007DC                     
  1120                           ;main.c: 71:             clcd_putch(time[6], (0xC0 + (6)));
  1121   0007DC  0EC6               	movlw	198
  1122   0007DE  6E09               	movwf	clcd_putch@addr^0,c
  1123   0007E0  0100               	movlb	0	; () banked
  1124   0007E2  51D5               	movf	(_time+6)& (0+255),w,b
  1125   0007E4  EC94  F015         	call	_clcd_putch
  1126   0007E8                     
  1127                           ;main.c: 72:             clcd_putch(time[7], (0xC0 + (7)));
  1128   0007E8  0EC7               	movlw	199
  1129   0007EA  6E09               	movwf	clcd_putch@addr^0,c
  1130   0007EC  0100               	movlb	0	; () banked
  1131   0007EE  51D6               	movf	(_time+7)& (0+255),w,b
  1132   0007F0  EC94  F015         	call	_clcd_putch
  1133   0007F4                     
  1134                           ;main.c: 73:             clcd_print(gear[count], (0xC0 + (10)));
  1135   0007F4  C0E7  F001         	movff	_count,___wmul@multiplier
  1136   0007F8  C0E8  F002         	movff	_count+1,___wmul@multiplier+1
  1137   0007FC  0E00               	movlw	0
  1138   0007FE  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1139   000800  0E03               	movlw	3
  1140   000802  6E03               	movwf	___wmul@multiplicand^0,c
  1141   000804  EC3A  F015         	call	___wmul	;wreg free
  1142   000808  0E9A               	movlw	low main@gear
  1143   00080A  2401               	addwf	?___wmul^0,w,c
  1144   00080C  6E07               	movwf	clcd_print@data^0,c
  1145   00080E  0E00               	movlw	high main@gear
  1146   000810  2002               	addwfc	(?___wmul+1)^0,w,c
  1147   000812  6E08               	movwf	(clcd_print@data+1)^0,c
  1148   000814  0ECA               	movlw	202
  1149   000816  6E09               	movwf	clcd_print@addr^0,c
  1150   000818  ECD9  F013         	call	_clcd_print	;wreg free
  1151   00081C                     
  1152                           ;main.c: 74:             clcd_putch(adc / 10 + '0', (0xC0 + (14)));
  1153   00081C  0ECE               	movlw	206
  1154   00081E  6E09               	movwf	clcd_putch@addr^0,c
  1155   000820  C0C9  F001         	movff	main@adc,___awdiv@dividend
  1156   000824  C0CA  F002         	movff	main@adc+1,___awdiv@dividend+1
  1157   000828  0E00               	movlw	0
  1158   00082A  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1159   00082C  0E0A               	movlw	10
  1160   00082E  6E03               	movwf	___awdiv@divisor^0,c
  1161   000830  EC4E  F012         	call	___awdiv	;wreg free
  1162   000834  5001               	movf	?___awdiv^0,w,c
  1163   000836  0F30               	addlw	48
  1164   000838  EC94  F015         	call	_clcd_putch
  1165   00083C                     
  1166                           ;main.c: 75:             clcd_putch(adc % 10 + '0', (0xC0 + (15)));
  1167   00083C  0ECF               	movlw	207
  1168   00083E  6E09               	movwf	clcd_putch@addr^0,c
  1169   000840  C0C9  F001         	movff	main@adc,___awmod@dividend
  1170   000844  C0CA  F002         	movff	main@adc+1,___awmod@dividend+1
  1171   000848  0E00               	movlw	0
  1172   00084A  6E04               	movwf	(___awmod@divisor+1)^0,c
  1173   00084C  0E0A               	movlw	10
  1174   00084E  6E03               	movwf	___awmod@divisor^0,c
  1175   000850  ECB0  F012         	call	___awmod	;wreg free
  1176   000854  5001               	movf	?___awmod^0,w,c
  1177   000856  0F30               	addlw	48
  1178   000858  EC94  F015         	call	_clcd_putch
  1179   00085C                     
  1180                           ;main.c: 78:             hours = (time[0] - 48)*10 + time[1] - 48;
  1181   00085C  0100               	movlb	0	; () banked
  1182   00085E  51CF               	movf	_time& (0+255),w,b
  1183   000860  0D0A               	mullw	10
  1184   000862  CFF3 F032          	movff	prodl,??_main
  1185   000866  CFF4 F033          	movff	prodh,??_main+1
  1186   00086A  51D0               	movf	(_time+1)& (0+255),w,b
  1187   00086C  2632               	addwf	??_main^0,f,c
  1188   00086E  0E00               	movlw	0
  1189   000870  2233               	addwfc	(??_main+1)^0,f,c
  1190   000872  0EF0               	movlw	240
  1191   000874  2432               	addwf	??_main^0,w,c
  1192   000876  6E58               	movwf	_hours^0,c
  1193   000878  0EFD               	movlw	253
  1194   00087A  2033               	addwfc	(??_main+1)^0,w,c
  1195   00087C  6E59               	movwf	(_hours+1)^0,c
  1196   00087E                     
  1197                           ; BSR set to: 0
  1198                           ;main.c: 79:             min = (time[3] - 48)*10 + time[4] - 48;
  1199   00087E  51D2               	movf	(_time+3)& (0+255),w,b
  1200   000880  0D0A               	mullw	10
  1201   000882  CFF3 F032          	movff	prodl,??_main
  1202   000886  CFF4 F033          	movff	prodh,??_main+1
  1203   00088A  51D3               	movf	(_time+4)& (0+255),w,b
  1204   00088C  2632               	addwf	??_main^0,f,c
  1205   00088E  0E00               	movlw	0
  1206   000890  2233               	addwfc	(??_main+1)^0,f,c
  1207   000892  0EF0               	movlw	240
  1208   000894  2432               	addwf	??_main^0,w,c
  1209   000896  6E56               	movwf	_min^0,c
  1210   000898  0EFD               	movlw	253
  1211   00089A  2033               	addwfc	(??_main+1)^0,w,c
  1212   00089C  6E57               	movwf	(_min+1)^0,c
  1213   00089E                     
  1214                           ; BSR set to: 0
  1215                           ;main.c: 80:             sec = (time[6] - 48)*10 + time[7] - 48;
  1216   00089E  51D5               	movf	(_time+6)& (0+255),w,b
  1217   0008A0  0D0A               	mullw	10
  1218   0008A2  CFF3 F032          	movff	prodl,??_main
  1219   0008A6  CFF4 F033          	movff	prodh,??_main+1
  1220   0008AA  51D6               	movf	(_time+7)& (0+255),w,b
  1221   0008AC  2632               	addwf	??_main^0,f,c
  1222   0008AE  0E00               	movlw	0
  1223   0008B0  2233               	addwfc	(??_main+1)^0,f,c
  1224   0008B2  0EF0               	movlw	240
  1225   0008B4  2432               	addwf	??_main^0,w,c
  1226   0008B6  6E54               	movwf	_sec^0,c
  1227   0008B8  0EFD               	movlw	253
  1228   0008BA  2033               	addwfc	(??_main+1)^0,w,c
  1229   0008BC  6E55               	movwf	(_sec+1)^0,c
  1230   0008BE                     l3496:
  1231                           
  1232                           ;main.c: 83:         if (flag2 == 1) {
  1233   0008BE  0100               	movlb	0	; () banked
  1234   0008C0  05E5               	decf	_flag2& (0+255),w,b
  1235   0008C2  11E6               	iorwf	(_flag2+1)& (0+255),w,b
  1236   0008C4  A4D8               	btfss	status,2,c
  1237   0008C6  EF67  F004         	goto	u3571
  1238   0008CA  EF69  F004         	goto	u3570
  1239   0008CE                     u3571:
  1240   0008CE  EFC3  F004         	goto	l3522
  1241   0008D2                     u3570:
  1242   0008D2                     
  1243                           ; BSR set to: 0
  1244                           ;main.c: 85:             flag2 = 0;
  1245   0008D2  0E00               	movlw	0
  1246   0008D4  6FE6               	movwf	(_flag2+1)& (0+255),b
  1247   0008D6  0E00               	movlw	0
  1248   0008D8  6FE5               	movwf	_flag2& (0+255),b
  1249   0008DA                     
  1250                           ; BSR set to: 0
  1251                           ;main.c: 86:             write[0] = time[0];
  1252   0008DA  C0CF  F049         	movff	_time,main@write
  1253   0008DE                     
  1254                           ; BSR set to: 0
  1255                           ;main.c: 87:             write[1] = time[1];
  1256   0008DE  C0D0  F04A         	movff	_time+1,main@write+1
  1257   0008E2                     
  1258                           ; BSR set to: 0
  1259                           ;main.c: 88:             write[2] = time[3];
  1260   0008E2  C0D2  F04B         	movff	_time+3,main@write+2
  1261   0008E6                     
  1262                           ; BSR set to: 0
  1263                           ;main.c: 89:             write[3] = time[4];
  1264   0008E6  C0D3  F04C         	movff	_time+4,main@write+3
  1265   0008EA                     
  1266                           ; BSR set to: 0
  1267                           ;main.c: 90:             write[4] = time[6];
  1268   0008EA  C0D5  F04D         	movff	_time+6,main@write+4
  1269   0008EE                     
  1270                           ; BSR set to: 0
  1271                           ;main.c: 91:             write[5] = time[7];
  1272   0008EE  C0D6  F04E         	movff	_time+7,main@write+5
  1273   0008F2                     
  1274                           ; BSR set to: 0
  1275                           ;main.c: 92:             write[6] = gear[count][0];
  1276   0008F2  C0E7  F001         	movff	_count,___wmul@multiplier
  1277   0008F6  C0E8  F002         	movff	_count+1,___wmul@multiplier+1
  1278   0008FA  0E00               	movlw	0
  1279   0008FC  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1280   0008FE  0E03               	movlw	3
  1281   000900  6E03               	movwf	___wmul@multiplicand^0,c
  1282   000902  EC3A  F015         	call	___wmul	;wreg free
  1283   000906  0E9A               	movlw	low main@gear
  1284   000908  2401               	addwf	?___wmul^0,w,c
  1285   00090A  6ED9               	movwf	fsr2l,c
  1286   00090C  0E00               	movlw	high main@gear
  1287   00090E  2002               	addwfc	(?___wmul+1)^0,w,c
  1288   000910  6EDA               	movwf	fsr2h,c
  1289   000912  50DF               	movf	indf2,w,c
  1290   000914  6E4F               	movwf	(main@write+6)^0,c
  1291   000916                     
  1292                           ;main.c: 93:             write[7] = gear[count][1];
  1293   000916  C0E7  F001         	movff	_count,___wmul@multiplier
  1294   00091A  C0E8  F002         	movff	_count+1,___wmul@multiplier+1
  1295   00091E  0E00               	movlw	0
  1296   000920  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1297   000922  0E03               	movlw	3
  1298   000924  6E03               	movwf	___wmul@multiplicand^0,c
  1299   000926  EC3A  F015         	call	___wmul	;wreg free
  1300   00092A  0E01               	movlw	1
  1301   00092C  2601               	addwf	?___wmul^0,f,c
  1302   00092E  0E00               	movlw	0
  1303   000930  2202               	addwfc	(?___wmul+1)^0,f,c
  1304   000932  0E9A               	movlw	low main@gear
  1305   000934  2401               	addwf	?___wmul^0,w,c
  1306   000936  6ED9               	movwf	fsr2l,c
  1307   000938  0E00               	movlw	high main@gear
  1308   00093A  2002               	addwfc	(?___wmul+1)^0,w,c
  1309   00093C  6EDA               	movwf	fsr2h,c
  1310   00093E  50DF               	movf	indf2,w,c
  1311   000940  6E50               	movwf	(main@write+7)^0,c
  1312   000942                     
  1313                           ;main.c: 94:             write[8] = adc / 10 + '0';
  1314   000942  C0C9  F001         	movff	main@adc,___awdiv@dividend
  1315   000946  C0CA  F002         	movff	main@adc+1,___awdiv@dividend+1
  1316   00094A  0E00               	movlw	0
  1317   00094C  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1318   00094E  0E0A               	movlw	10
  1319   000950  6E03               	movwf	___awdiv@divisor^0,c
  1320   000952  EC4E  F012         	call	___awdiv	;wreg free
  1321   000956  5001               	movf	?___awdiv^0,w,c
  1322   000958  0F30               	addlw	48
  1323   00095A  6E51               	movwf	(main@write+8)^0,c
  1324   00095C                     
  1325                           ;main.c: 95:             write[9] = adc % 10 + '0';
  1326   00095C  C0C9  F001         	movff	main@adc,___awmod@dividend
  1327   000960  C0CA  F002         	movff	main@adc+1,___awmod@dividend+1
  1328   000964  0E00               	movlw	0
  1329   000966  6E04               	movwf	(___awmod@divisor+1)^0,c
  1330   000968  0E0A               	movlw	10
  1331   00096A  6E03               	movwf	___awmod@divisor^0,c
  1332   00096C  ECB0  F012         	call	___awmod	;wreg free
  1333   000970  5001               	movf	?___awmod^0,w,c
  1334   000972  0F30               	addlw	48
  1335   000974  6E52               	movwf	(main@write+9)^0,c
  1336                           
  1337                           ;main.c: 96:             write[10] = '\0';
  1338   000976  0E00               	movlw	0
  1339   000978  6E53               	movwf	(main@write+10)^0,c
  1340   00097A                     
  1341                           ;main.c: 97:             store_data(write);
  1342   00097A  0E49               	movlw	low main@write
  1343   00097C  6E06               	movwf	store_data@write^0,c
  1344   00097E  0E00               	movlw	high main@write
  1345   000980  6E07               	movwf	(store_data@write+1)^0,c
  1346   000982  EC8E  F010         	call	_store_data	;wreg free
  1347   000986                     l3522:
  1348                           
  1349                           ;main.c: 99:         if (flag1 == 2) {
  1350   000986  0E02               	movlw	2
  1351   000988  185E               	xorwf	_flag1^0,w,c
  1352   00098A  105F               	iorwf	(_flag1+1)^0,w,c
  1353   00098C  A4D8               	btfss	status,2,c
  1354   00098E  EFCB  F004         	goto	u3581
  1355   000992  EFCD  F004         	goto	u3580
  1356   000996                     u3581:
  1357   000996  EF3C  F005         	goto	l3546
  1358   00099A                     u3580:
  1359   00099A                     
  1360                           ;main.c: 101:             clcd_write(0x01, 0);
  1361   00099A  0E00               	movlw	0
  1362   00099C  6E01               	movwf	clcd_write@control_bit^0,c
  1363   00099E  0E01               	movlw	1
  1364   0009A0  ECF3  F014         	call	_clcd_write
  1365   0009A4                     
  1366                           ;main.c: 102:             if (star == 1) {
  1367   0009A4  045A               	decf	_star^0,w,c
  1368   0009A6  105B               	iorwf	(_star+1)^0,w,c
  1369   0009A8  A4D8               	btfss	status,2,c
  1370   0009AA  EFD9  F004         	goto	u3591
  1371   0009AE  EFDB  F004         	goto	u3590
  1372   0009B2                     u3591:
  1373   0009B2  EFE0  F004         	goto	l3530
  1374   0009B6                     u3590:
  1375   0009B6                     
  1376                           ;main.c: 103:                 clcd_putch('*', (0x80 + (0)));
  1377   0009B6  0E80               	movlw	128
  1378   0009B8  6E09               	movwf	clcd_putch@addr^0,c
  1379   0009BA  0E2A               	movlw	42
  1380   0009BC  EC94  F015         	call	_clcd_putch
  1381   0009C0                     l3530:
  1382                           
  1383                           ;main.c: 105:             if (star == 2) {
  1384   0009C0  0E02               	movlw	2
  1385   0009C2  185A               	xorwf	_star^0,w,c
  1386   0009C4  105B               	iorwf	(_star+1)^0,w,c
  1387   0009C6  A4D8               	btfss	status,2,c
  1388   0009C8  EFE8  F004         	goto	u3601
  1389   0009CC  EFEA  F004         	goto	u3600
  1390   0009D0                     u3601:
  1391   0009D0  EFEF  F004         	goto	l3534
  1392   0009D4                     u3600:
  1393   0009D4                     
  1394                           ;main.c: 106:                 clcd_putch('*', (0xC0 + (0)));
  1395   0009D4  0EC0               	movlw	192
  1396   0009D6  6E09               	movwf	clcd_putch@addr^0,c
  1397   0009D8  0E2A               	movlw	42
  1398   0009DA  EC94  F015         	call	_clcd_putch
  1399   0009DE                     l3534:
  1400                           
  1401                           ;main.c: 109:             if (flag3 == 1) {
  1402   0009DE  045C               	decf	_flag3^0,w,c
  1403   0009E0  105D               	iorwf	(_flag3+1)^0,w,c
  1404   0009E2  A4D8               	btfss	status,2,c
  1405   0009E4  EFF6  F004         	goto	u3611
  1406   0009E8  EFF8  F004         	goto	u3610
  1407   0009EC                     u3611:
  1408   0009EC  EF08  F005         	goto	l3538
  1409   0009F0                     u3610:
  1410   0009F0                     
  1411                           ;main.c: 110:                 clcd_print("VIEW LOG", (0x80 + (1)));
  1412   0009F0  0E67               	movlw	low STR_4
  1413   0009F2  6E07               	movwf	clcd_print@data^0,c
  1414   0009F4  0E06               	movlw	high STR_4
  1415   0009F6  6E08               	movwf	(clcd_print@data+1)^0,c
  1416   0009F8  0E81               	movlw	129
  1417   0009FA  6E09               	movwf	clcd_print@addr^0,c
  1418   0009FC  ECD9  F013         	call	_clcd_print	;wreg free
  1419                           
  1420                           ;main.c: 111:                 clcd_print("SET TIME", (0xC0 + (1)));
  1421   000A00  0E5E               	movlw	low STR_5
  1422   000A02  6E07               	movwf	clcd_print@data^0,c
  1423   000A04  0E06               	movlw	high STR_5
  1424   000A06  6E08               	movwf	(clcd_print@data+1)^0,c
  1425   000A08  0EC1               	movlw	193
  1426   000A0A  6E09               	movwf	clcd_print@addr^0,c
  1427   000A0C  ECD9  F013         	call	_clcd_print	;wreg free
  1428   000A10                     l3538:
  1429                           
  1430                           ;main.c: 114:             if (flag3 == 2) {
  1431   000A10  0E02               	movlw	2
  1432   000A12  185C               	xorwf	_flag3^0,w,c
  1433   000A14  105D               	iorwf	(_flag3+1)^0,w,c
  1434   000A16  A4D8               	btfss	status,2,c
  1435   000A18  EF10  F005         	goto	u3621
  1436   000A1C  EF12  F005         	goto	u3620
  1437   000A20                     u3621:
  1438   000A20  EF22  F005         	goto	l3542
  1439   000A24                     u3620:
  1440   000A24                     
  1441                           ;main.c: 115:                 clcd_print("SET TIME", (0x80 + (1)));
  1442   000A24  0E5E               	movlw	low STR_5
  1443   000A26  6E07               	movwf	clcd_print@data^0,c
  1444   000A28  0E06               	movlw	high STR_5
  1445   000A2A  6E08               	movwf	(clcd_print@data+1)^0,c
  1446   000A2C  0E81               	movlw	129
  1447   000A2E  6E09               	movwf	clcd_print@addr^0,c
  1448   000A30  ECD9  F013         	call	_clcd_print	;wreg free
  1449                           
  1450                           ;main.c: 116:                 clcd_print("DOWNLOAD LOG", (0xC0 + (1)));
  1451   000A34  0E47               	movlw	low STR_7
  1452   000A36  6E07               	movwf	clcd_print@data^0,c
  1453   000A38  0E06               	movlw	high STR_7
  1454   000A3A  6E08               	movwf	(clcd_print@data+1)^0,c
  1455   000A3C  0EC1               	movlw	193
  1456   000A3E  6E09               	movwf	clcd_print@addr^0,c
  1457   000A40  ECD9  F013         	call	_clcd_print	;wreg free
  1458   000A44                     l3542:
  1459                           
  1460                           ;main.c: 118:             if (flag3 == 3) {
  1461   000A44  0E03               	movlw	3
  1462   000A46  185C               	xorwf	_flag3^0,w,c
  1463   000A48  105D               	iorwf	(_flag3+1)^0,w,c
  1464   000A4A  A4D8               	btfss	status,2,c
  1465   000A4C  EF2A  F005         	goto	u3631
  1466   000A50  EF2C  F005         	goto	u3630
  1467   000A54                     u3631:
  1468   000A54  EF3C  F005         	goto	l3546
  1469   000A58                     u3630:
  1470   000A58                     
  1471                           ;main.c: 119:                 clcd_print("DOWNLOAD LOG", (0x80 + (1)));
  1472   000A58  0E47               	movlw	low STR_7
  1473   000A5A  6E07               	movwf	clcd_print@data^0,c
  1474   000A5C  0E06               	movlw	high STR_7
  1475   000A5E  6E08               	movwf	(clcd_print@data+1)^0,c
  1476   000A60  0E81               	movlw	129
  1477   000A62  6E09               	movwf	clcd_print@addr^0,c
  1478   000A64  ECD9  F013         	call	_clcd_print	;wreg free
  1479                           
  1480                           ;main.c: 120:                 clcd_print("CLEAR LOG", (0xC0 + (1)));
  1481   000A68  0E54               	movlw	low STR_9
  1482   000A6A  6E07               	movwf	clcd_print@data^0,c
  1483   000A6C  0E06               	movlw	high STR_9
  1484   000A6E  6E08               	movwf	(clcd_print@data+1)^0,c
  1485   000A70  0EC1               	movlw	193
  1486   000A72  6E09               	movwf	clcd_print@addr^0,c
  1487   000A74  ECD9  F013         	call	_clcd_print	;wreg free
  1488   000A78                     l3546:
  1489                           
  1490                           ;main.c: 123:         if (flag1 == 3) {
  1491   000A78  0E03               	movlw	3
  1492   000A7A  185E               	xorwf	_flag1^0,w,c
  1493   000A7C  105F               	iorwf	(_flag1+1)^0,w,c
  1494   000A7E  A4D8               	btfss	status,2,c
  1495   000A80  EF44  F005         	goto	u3641
  1496   000A84  EF46  F005         	goto	u3640
  1497   000A88                     u3641:
  1498   000A88  EF55  F003         	goto	l3442
  1499   000A8C                     u3640:
  1500   000A8C                     
  1501                           ;main.c: 125:             clcd_write(0x01, 0);
  1502   000A8C  0E00               	movlw	0
  1503   000A8E  6E01               	movwf	clcd_write@control_bit^0,c
  1504   000A90  0E01               	movlw	1
  1505   000A92  ECF3  F014         	call	_clcd_write
  1506   000A96                     
  1507                           ;main.c: 126:             if (flag3 == 1 && star == 1) {
  1508   000A96  045C               	decf	_flag3^0,w,c
  1509   000A98  105D               	iorwf	(_flag3+1)^0,w,c
  1510   000A9A  A4D8               	btfss	status,2,c
  1511   000A9C  EF52  F005         	goto	u3651
  1512   000AA0  EF54  F005         	goto	u3650
  1513   000AA4                     u3651:
  1514   000AA4  EF33  F006         	goto	l3608
  1515   000AA8                     u3650:
  1516   000AA8  045A               	decf	_star^0,w,c
  1517   000AAA  105B               	iorwf	(_star+1)^0,w,c
  1518   000AAC  A4D8               	btfss	status,2,c
  1519   000AAE  EF5B  F005         	goto	u3661
  1520   000AB2  EF5D  F005         	goto	u3660
  1521   000AB6                     u3661:
  1522   000AB6  EF33  F006         	goto	l3608
  1523   000ABA                     u3660:
  1524   000ABA                     
  1525                           ;main.c: 127:                 if (clear == 0) {
  1526   000ABA  0100               	movlb	0	; () banked
  1527   000ABC  51E3               	movf	_clear& (0+255),w,b
  1528   000ABE  11E4               	iorwf	(_clear+1)& (0+255),w,b
  1529   000AC0  A4D8               	btfss	status,2,c
  1530   000AC2  EF65  F005         	goto	u3671
  1531   000AC6  EF67  F005         	goto	u3670
  1532   000ACA                     u3671:
  1533   000ACA  EF9E  F005         	goto	l3564
  1534   000ACE                     u3670:
  1535   000ACE                     
  1536                           ; BSR set to: 0
  1537                           ;main.c: 128:                     clcd_print("NO LOGS", (0x80 + (1)));
  1538   000ACE  0E81               	movlw	low STR_10
  1539   000AD0  6E07               	movwf	clcd_print@data^0,c
  1540   000AD2  0E06               	movlw	high STR_10
  1541   000AD4  6E08               	movwf	(clcd_print@data+1)^0,c
  1542   000AD6  0E81               	movlw	129
  1543   000AD8  6E09               	movwf	clcd_print@addr^0,c
  1544   000ADA  ECD9  F013         	call	_clcd_print	;wreg free
  1545                           
  1546                           ;main.c: 129:                     clcd_print("TO DISPLAY :(", (0xC0 + (1)));
  1547   000ADE  0E10               	movlw	low STR_11
  1548   000AE0  6E07               	movwf	clcd_print@data^0,c
  1549   000AE2  0E06               	movlw	high STR_11
  1550   000AE4  6E08               	movwf	(clcd_print@data+1)^0,c
  1551   000AE6  0EC1               	movlw	193
  1552   000AE8  6E09               	movwf	clcd_print@addr^0,c
  1553   000AEA  ECD9  F013         	call	_clcd_print	;wreg free
  1554   000AEE                     
  1555                           ;main.c: 130:                     stop = 0;
  1556   000AEE  0E00               	movlw	0
  1557   000AF0  0100               	movlb	0	; () banked
  1558   000AF2  6F94               	movwf	(_stop+1)& (0+255),b
  1559   000AF4  0E00               	movlw	0
  1560   000AF6  6F93               	movwf	_stop& (0+255),b
  1561   000AF8                     
  1562                           ; BSR set to: 0
  1563                           ;main.c: 131:                     if(delay++ > 400){
  1564   000AF8  51DD               	movf	main@delay& (0+255),w,b
  1565   000AFA  6E32               	movwf	??_main^0,c
  1566   000AFC  51DE               	movf	(main@delay+1)& (0+255),w,b
  1567   000AFE  6E33               	movwf	(??_main+1)^0,c
  1568   000B00  4BDD               	infsnz	main@delay& (0+255),f,b
  1569   000B02  2BDE               	incf	(main@delay+1)& (0+255),f,b
  1570   000B04  BE33               	btfsc	(??_main+1)^0,7,c
  1571   000B06  EF8E  F005         	goto	u3681
  1572   000B0A  0E91               	movlw	145
  1573   000B0C  5C32               	subwf	??_main^0,w,c
  1574   000B0E  0E01               	movlw	1
  1575   000B10  5833               	subwfb	(??_main+1)^0,w,c
  1576   000B12  A0D8               	btfss	status,0,c
  1577   000B14  EF8E  F005         	goto	u3681
  1578   000B18  EF90  F005         	goto	u3680
  1579   000B1C                     u3681:
  1580   000B1C  EF33  F006         	goto	l3608
  1581   000B20                     u3680:
  1582   000B20                     
  1583                           ; BSR set to: 0
  1584                           ;main.c: 132:                     flag1 = 2;
  1585   000B20  0E00               	movlw	0
  1586   000B22  6E5F               	movwf	(_flag1+1)^0,c
  1587   000B24  0E02               	movlw	2
  1588   000B26  6E5E               	movwf	_flag1^0,c
  1589                           
  1590                           ;main.c: 133:                     stop = 1;
  1591   000B28  0E00               	movlw	0
  1592   000B2A  6F94               	movwf	(_stop+1)& (0+255),b
  1593   000B2C  0E01               	movlw	1
  1594   000B2E  6F93               	movwf	_stop& (0+255),b
  1595                           
  1596                           ;main.c: 134:                     delay = 0;
  1597   000B30  0E00               	movlw	0
  1598   000B32  6FDE               	movwf	(main@delay+1)& (0+255),b
  1599   000B34  0E00               	movlw	0
  1600   000B36  6FDD               	movwf	main@delay& (0+255),b
  1601   000B38  EF33  F006         	goto	l3608
  1602   000B3C                     l3564:
  1603                           
  1604                           ; BSR set to: 0
  1605                           ;main.c: 137:                     int j = 0;
  1606   000B3C  0E00               	movlw	0
  1607   000B3E  6FC0               	movwf	(main@j+1)& (0+255),b
  1608   000B40  0E00               	movlw	0
  1609   000B42  6FBF               	movwf	main@j& (0+255),b
  1610   000B44                     
  1611                           ; BSR set to: 0
  1612                           ;main.c: 138:                     for (int i = storing_data; i < storing_data + 10; i++)
      +                           {
  1613   000B44  C0E1  F0C5         	movff	_storing_data,main@i
  1614   000B48  C0E2  F0C6         	movff	_storing_data+1,main@i+1
  1615   000B4C  EFB7  F005         	goto	l3574
  1616   000B50                     l3568:
  1617                           
  1618                           ; BSR set to: 0
  1619                           ;main.c: 139:                         store[j++] = read_external_eeprom(i);
  1620   000B50  0EB5               	movlw	low main@store
  1621   000B52  25BF               	addwf	main@j& (0+255),w,b
  1622   000B54  6ED9               	movwf	fsr2l,c
  1623   000B56  0E00               	movlw	high main@store
  1624   000B58  21C0               	addwfc	(main@j+1)& (0+255),w,b
  1625   000B5A  6EDA               	movwf	fsr2h,c
  1626   000B5C  51C5               	movf	main@i& (0+255),w,b
  1627   000B5E  EC10  F015         	call	_read_external_eeprom
  1628   000B62  6EDF               	movwf	indf2,c
  1629   000B64  0100               	movlb	0	; () banked
  1630   000B66  4BBF               	infsnz	main@j& (0+255),f,b
  1631   000B68  2BC0               	incf	(main@j+1)& (0+255),f,b
  1632   000B6A                     
  1633                           ; BSR set to: 0
  1634                           ;main.c: 140:                     }
  1635   000B6A  4BC5               	infsnz	main@i& (0+255),f,b
  1636   000B6C  2BC6               	incf	(main@i+1)& (0+255),f,b
  1637   000B6E                     l3574:
  1638                           
  1639                           ; BSR set to: 0
  1640   000B6E  0E0A               	movlw	10
  1641   000B70  25E1               	addwf	_storing_data& (0+255),w,b
  1642   000B72  6E32               	movwf	??_main^0,c
  1643   000B74  0E00               	movlw	0
  1644   000B76  21E2               	addwfc	(_storing_data+1)& (0+255),w,b
  1645   000B78  6E33               	movwf	(??_main+1)^0,c
  1646   000B7A  5032               	movf	??_main^0,w,c
  1647   000B7C  5DC5               	subwf	main@i& (0+255),w,b
  1648   000B7E  51C6               	movf	(main@i+1)& (0+255),w,b
  1649   000B80  0A80               	xorlw	128
  1650   000B82  6E34               	movwf	(??_main+2)^0,c
  1651   000B84  5033               	movf	(??_main+1)^0,w,c
  1652   000B86  0A80               	xorlw	128
  1653   000B88  5834               	subwfb	(??_main+2)^0,w,c
  1654   000B8A  A0D8               	btfss	status,0,c
  1655   000B8C  EFCA  F005         	goto	u3691
  1656   000B90  EFCC  F005         	goto	u3690
  1657   000B94                     u3691:
  1658   000B94  EFA8  F005         	goto	l3568
  1659   000B98                     u3690:
  1660   000B98                     
  1661                           ; BSR set to: 0
  1662                           ;main.c: 141:                     clcd_print("#   VIEW LOG:", (0x80 + (0)));
  1663   000B98  0E1E               	movlw	low STR_12
  1664   000B9A  6E07               	movwf	clcd_print@data^0,c
  1665   000B9C  0E06               	movlw	high STR_12
  1666   000B9E  6E08               	movwf	(clcd_print@data+1)^0,c
  1667   000BA0  0E80               	movlw	128
  1668   000BA2  6E09               	movwf	clcd_print@addr^0,c
  1669   000BA4  ECD9  F013         	call	_clcd_print	;wreg free
  1670   000BA8                     
  1671                           ;main.c: 142:                     store[10] = '\0';
  1672   000BA8  0E00               	movlw	0
  1673   000BAA  0100               	movlb	0	; () banked
  1674   000BAC  6FBF               	movwf	(main@store+10)& (0+255),b
  1675   000BAE                     
  1676                           ; BSR set to: 0
  1677                           ;main.c: 143:                     clcd_putch(((storing_data/10) + '0'), (0xC0 + (0)));
  1678   000BAE  0EC0               	movlw	192
  1679   000BB0  6E09               	movwf	clcd_putch@addr^0,c
  1680   000BB2  C0E1  F001         	movff	_storing_data,___awdiv@dividend
  1681   000BB6  C0E2  F002         	movff	_storing_data+1,___awdiv@dividend+1
  1682   000BBA  0E00               	movlw	0
  1683   000BBC  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1684   000BBE  0E0A               	movlw	10
  1685   000BC0  6E03               	movwf	___awdiv@divisor^0,c
  1686   000BC2  EC4E  F012         	call	___awdiv	;wreg free
  1687   000BC6  5001               	movf	?___awdiv^0,w,c
  1688   000BC8  0F30               	addlw	48
  1689   000BCA  EC94  F015         	call	_clcd_putch
  1690   000BCE                     
  1691                           ;main.c: 144:                     clcd_putch(store[0], (0xC0 + (2)));
  1692   000BCE  0EC2               	movlw	194
  1693   000BD0  6E09               	movwf	clcd_putch@addr^0,c
  1694   000BD2  0100               	movlb	0	; () banked
  1695   000BD4  51B5               	movf	main@store& (0+255),w,b
  1696   000BD6  EC94  F015         	call	_clcd_putch
  1697   000BDA                     
  1698                           ;main.c: 145:                     clcd_putch(store[1], (0xC0 + (3)));
  1699   000BDA  0EC3               	movlw	195
  1700   000BDC  6E09               	movwf	clcd_putch@addr^0,c
  1701   000BDE  0100               	movlb	0	; () banked
  1702   000BE0  51B6               	movf	(main@store+1)& (0+255),w,b
  1703   000BE2  EC94  F015         	call	_clcd_putch
  1704   000BE6                     
  1705                           ;main.c: 146:                     clcd_putch(':', (0xC0 + (4)));
  1706   000BE6  0EC4               	movlw	196
  1707   000BE8  6E09               	movwf	clcd_putch@addr^0,c
  1708   000BEA  0E3A               	movlw	58
  1709   000BEC  EC94  F015         	call	_clcd_putch
  1710   000BF0                     
  1711                           ;main.c: 147:                     clcd_putch(store[2], (0xC0 + (5)));
  1712   000BF0  0EC5               	movlw	197
  1713   000BF2  6E09               	movwf	clcd_putch@addr^0,c
  1714   000BF4  0100               	movlb	0	; () banked
  1715   000BF6  51B7               	movf	(main@store+2)& (0+255),w,b
  1716   000BF8  EC94  F015         	call	_clcd_putch
  1717   000BFC                     
  1718                           ;main.c: 148:                     clcd_putch(store[3], (0xC0 + (6)));
  1719   000BFC  0EC6               	movlw	198
  1720   000BFE  6E09               	movwf	clcd_putch@addr^0,c
  1721   000C00  0100               	movlb	0	; () banked
  1722   000C02  51B8               	movf	(main@store+3)& (0+255),w,b
  1723   000C04  EC94  F015         	call	_clcd_putch
  1724   000C08                     
  1725                           ;main.c: 149:                     clcd_putch(':', (0xC0 + (7)));
  1726   000C08  0EC7               	movlw	199
  1727   000C0A  6E09               	movwf	clcd_putch@addr^0,c
  1728   000C0C  0E3A               	movlw	58
  1729   000C0E  EC94  F015         	call	_clcd_putch
  1730   000C12                     
  1731                           ;main.c: 150:                     clcd_putch(store[4], (0xC0 + (8)));
  1732   000C12  0EC8               	movlw	200
  1733   000C14  6E09               	movwf	clcd_putch@addr^0,c
  1734   000C16  0100               	movlb	0	; () banked
  1735   000C18  51B9               	movf	(main@store+4)& (0+255),w,b
  1736   000C1A  EC94  F015         	call	_clcd_putch
  1737   000C1E                     
  1738                           ;main.c: 151:                     clcd_putch(store[5], (0xC0 + (9)));
  1739   000C1E  0EC9               	movlw	201
  1740   000C20  6E09               	movwf	clcd_putch@addr^0,c
  1741   000C22  0100               	movlb	0	; () banked
  1742   000C24  51BA               	movf	(main@store+5)& (0+255),w,b
  1743   000C26  EC94  F015         	call	_clcd_putch
  1744   000C2A                     
  1745                           ;main.c: 152:                     clcd_putch(store[6], (0xC0 + (11)));
  1746   000C2A  0ECB               	movlw	203
  1747   000C2C  6E09               	movwf	clcd_putch@addr^0,c
  1748   000C2E  0100               	movlb	0	; () banked
  1749   000C30  51BB               	movf	(main@store+6)& (0+255),w,b
  1750   000C32  EC94  F015         	call	_clcd_putch
  1751   000C36                     
  1752                           ;main.c: 153:                     clcd_putch(store[7], (0xC0 + (12)));
  1753   000C36  0ECC               	movlw	204
  1754   000C38  6E09               	movwf	clcd_putch@addr^0,c
  1755   000C3A  0100               	movlb	0	; () banked
  1756   000C3C  51BC               	movf	(main@store+7)& (0+255),w,b
  1757   000C3E  EC94  F015         	call	_clcd_putch
  1758   000C42                     
  1759                           ;main.c: 154:                     clcd_putch(store[8], (0xC0 + (14)));
  1760   000C42  0ECE               	movlw	206
  1761   000C44  6E09               	movwf	clcd_putch@addr^0,c
  1762   000C46  0100               	movlb	0	; () banked
  1763   000C48  51BD               	movf	(main@store+8)& (0+255),w,b
  1764   000C4A  EC94  F015         	call	_clcd_putch
  1765   000C4E                     
  1766                           ;main.c: 155:                     clcd_putch(store[9], (0xC0 + (15)));
  1767   000C4E  0ECF               	movlw	207
  1768   000C50  6E09               	movwf	clcd_putch@addr^0,c
  1769   000C52  0100               	movlb	0	; () banked
  1770   000C54  51BE               	movf	(main@store+9)& (0+255),w,b
  1771   000C56  EC94  F015         	call	_clcd_putch
  1772   000C5A                     
  1773                           ;main.c: 156:                     clcd_putch(store[10], (0xC0 + (16)));
  1774   000C5A  0ED0               	movlw	208
  1775   000C5C  6E09               	movwf	clcd_putch@addr^0,c
  1776   000C5E  0100               	movlb	0	; () banked
  1777   000C60  51BF               	movf	(main@store+10)& (0+255),w,b
  1778   000C62  EC94  F015         	call	_clcd_putch
  1779   000C66                     l3608:
  1780                           
  1781                           ;main.c: 160:             if ((flag3 == 2 && star == 1) || (flag3 == 1 && star == 2)) {
  1782   000C66  0E02               	movlw	2
  1783   000C68  185C               	xorwf	_flag3^0,w,c
  1784   000C6A  105D               	iorwf	(_flag3+1)^0,w,c
  1785   000C6C  A4D8               	btfss	status,2,c
  1786   000C6E  EF3B  F006         	goto	u3701
  1787   000C72  EF3D  F006         	goto	u3700
  1788   000C76                     u3701:
  1789   000C76  EF46  F006         	goto	l3612
  1790   000C7A                     u3700:
  1791   000C7A  045A               	decf	_star^0,w,c
  1792   000C7C  105B               	iorwf	(_star+1)^0,w,c
  1793   000C7E  B4D8               	btfsc	status,2,c
  1794   000C80  EF44  F006         	goto	u3711
  1795   000C84  EF46  F006         	goto	u3710
  1796   000C88                     u3711:
  1797   000C88  EF59  F006         	goto	l3616
  1798   000C8C                     u3710:
  1799   000C8C                     l3612:
  1800   000C8C  045C               	decf	_flag3^0,w,c
  1801   000C8E  105D               	iorwf	(_flag3+1)^0,w,c
  1802   000C90  A4D8               	btfss	status,2,c
  1803   000C92  EF4D  F006         	goto	u3721
  1804   000C96  EF4F  F006         	goto	u3720
  1805   000C9A                     u3721:
  1806   000C9A  EF26  F008         	goto	l3674
  1807   000C9E                     u3720:
  1808   000C9E  0E02               	movlw	2
  1809   000CA0  185A               	xorwf	_star^0,w,c
  1810   000CA2  105B               	iorwf	(_star+1)^0,w,c
  1811   000CA4  A4D8               	btfss	status,2,c
  1812   000CA6  EF57  F006         	goto	u3731
  1813   000CAA  EF59  F006         	goto	u3730
  1814   000CAE                     u3731:
  1815   000CAE  EF26  F008         	goto	l3674
  1816   000CB2                     u3730:
  1817   000CB2                     l3616:
  1818                           
  1819                           ;main.c: 161:                 if(delay++ > 150){
  1820   000CB2  0100               	movlb	0	; () banked
  1821   000CB4  51DD               	movf	main@delay& (0+255),w,b
  1822   000CB6  6E32               	movwf	??_main^0,c
  1823   000CB8  51DE               	movf	(main@delay+1)& (0+255),w,b
  1824   000CBA  6E33               	movwf	(??_main+1)^0,c
  1825   000CBC  4BDD               	infsnz	main@delay& (0+255),f,b
  1826   000CBE  2BDE               	incf	(main@delay+1)& (0+255),f,b
  1827   000CC0  BE33               	btfsc	(??_main+1)^0,7,c
  1828   000CC2  EF6C  F006         	goto	u3741
  1829   000CC6  5033               	movf	(??_main+1)^0,w,c
  1830   000CC8  E109               	bnz	u3740
  1831   000CCA  0E97               	movlw	151
  1832   000CCC  5C32               	subwf	??_main^0,w,c
  1833   000CCE  A0D8               	btfss	status,0,c
  1834   000CD0  EF6C  F006         	goto	u3741
  1835   000CD4  EF6E  F006         	goto	u3740
  1836   000CD8                     u3741:
  1837   000CD8  EF7F  F006         	goto	l3622
  1838   000CDC                     u3740:
  1839   000CDC                     
  1840                           ; BSR set to: 0
  1841                           ;main.c: 162:                     delay = 0;
  1842   000CDC  0E00               	movlw	0
  1843   000CDE  6FDE               	movwf	(main@delay+1)& (0+255),b
  1844   000CE0  0E00               	movlw	0
  1845   000CE2  6FDD               	movwf	main@delay& (0+255),b
  1846   000CE4                     
  1847                           ; BSR set to: 0
  1848                           ;main.c: 163:                     blink = !blink;
  1849   000CE4  518F               	movf	main@blink& (0+255),w,b
  1850   000CE6  1190               	iorwf	(main@blink+1)& (0+255),w,b
  1851   000CE8  B4D8               	btfsc	status,2,c
  1852   000CEA  EF79  F006         	goto	u3751
  1853   000CEE  EF7C  F006         	goto	u3750
  1854   000CF2                     u3751:
  1855   000CF2  0E01               	movlw	1
  1856   000CF4  EF7D  F006         	goto	u3760
  1857   000CF8                     u3750:
  1858   000CF8  0E00               	movlw	0
  1859   000CFA                     u3760:
  1860   000CFA  6F8F               	movwf	main@blink& (0+255),b
  1861   000CFC  6B90               	clrf	(main@blink+1)& (0+255),b
  1862   000CFE                     l3622:
  1863                           
  1864                           ; BSR set to: 0
  1865                           ;main.c: 165:                 clcd_print("HH:MM:SS", (0x80 + (1)));
  1866   000CFE  0E70               	movlw	low STR_13
  1867   000D00  6E07               	movwf	clcd_print@data^0,c
  1868   000D02  0E06               	movlw	high STR_13
  1869   000D04  6E08               	movwf	(clcd_print@data+1)^0,c
  1870   000D06  0E81               	movlw	129
  1871   000D08  6E09               	movwf	clcd_print@addr^0,c
  1872   000D0A  ECD9  F013         	call	_clcd_print	;wreg free
  1873   000D0E                     
  1874                           ;main.c: 168:                 if(set == 1)
  1875   000D0E  0100               	movlb	0	; () banked
  1876   000D10  0595               	decf	_set& (0+255),w,b
  1877   000D12  1196               	iorwf	(_set+1)& (0+255),w,b
  1878   000D14  A4D8               	btfss	status,2,c
  1879   000D16  EF8F  F006         	goto	u3771
  1880   000D1A  EF91  F006         	goto	u3770
  1881   000D1E                     u3771:
  1882   000D1E  EF10  F007         	goto	l3640
  1883   000D22                     u3770:
  1884   000D22                     
  1885                           ; BSR set to: 0
  1886                           ;main.c: 169:                 {;main.c: 170:                     if(blink)
  1887   000D22  518F               	movf	main@blink& (0+255),w,b
  1888   000D24  1190               	iorwf	(main@blink+1)& (0+255),w,b
  1889   000D26  B4D8               	btfsc	status,2,c
  1890   000D28  EF98  F006         	goto	u3781
  1891   000D2C  EF9A  F006         	goto	u3780
  1892   000D30                     u3781:
  1893   000D30  EFBC  F006         	goto	l3630
  1894   000D34                     u3780:
  1895   000D34                     
  1896                           ; BSR set to: 0
  1897                           ;main.c: 171:                     {;main.c: 172:                         clcd_putch((hou
      +                          rs/10) + '0', (0xC0 + (1)));
  1898   000D34  0EC1               	movlw	193
  1899   000D36  6E09               	movwf	clcd_putch@addr^0,c
  1900   000D38  C058  F001         	movff	_hours,___awdiv@dividend
  1901   000D3C  C059  F002         	movff	_hours+1,___awdiv@dividend+1
  1902   000D40  0E00               	movlw	0
  1903   000D42  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1904   000D44  0E0A               	movlw	10
  1905   000D46  6E03               	movwf	___awdiv@divisor^0,c
  1906   000D48  EC4E  F012         	call	___awdiv	;wreg free
  1907   000D4C  5001               	movf	?___awdiv^0,w,c
  1908   000D4E  0F30               	addlw	48
  1909   000D50  EC94  F015         	call	_clcd_putch
  1910                           
  1911                           ;main.c: 173:                         clcd_putch((hours%10) + '0', (0xC0 + (2)));
  1912   000D54  0EC2               	movlw	194
  1913   000D56  6E09               	movwf	clcd_putch@addr^0,c
  1914   000D58  C058  F001         	movff	_hours,___awmod@dividend
  1915   000D5C  C059  F002         	movff	_hours+1,___awmod@dividend+1
  1916   000D60  0E00               	movlw	0
  1917   000D62  6E04               	movwf	(___awmod@divisor+1)^0,c
  1918   000D64  0E0A               	movlw	10
  1919   000D66  6E03               	movwf	___awmod@divisor^0,c
  1920   000D68  ECB0  F012         	call	___awmod	;wreg free
  1921   000D6C  5001               	movf	?___awmod^0,w,c
  1922   000D6E  0F30               	addlw	48
  1923   000D70  EC94  F015         	call	_clcd_putch
  1924                           
  1925                           ;main.c: 175:                     }else{
  1926   000D74  EFC6  F006         	goto	l145
  1927   000D78                     l3630:
  1928                           
  1929                           ; BSR set to: 0
  1930                           ;main.c: 176:                         clcd_putch(' ', (0xC0 + (1)));
  1931   000D78  0EC1               	movlw	193
  1932   000D7A  6E09               	movwf	clcd_putch@addr^0,c
  1933   000D7C  0E20               	movlw	32
  1934   000D7E  EC94  F015         	call	_clcd_putch
  1935                           
  1936                           ;main.c: 177:                         clcd_putch(' ', (0xC0 + (2)));
  1937   000D82  0EC2               	movlw	194
  1938   000D84  6E09               	movwf	clcd_putch@addr^0,c
  1939   000D86  0E20               	movlw	32
  1940   000D88  EC94  F015         	call	_clcd_putch
  1941   000D8C                     l145:
  1942                           
  1943                           ;main.c: 179:                     clcd_putch(':', (0xC0 + (3)));
  1944   000D8C  0EC3               	movlw	195
  1945   000D8E  6E09               	movwf	clcd_putch@addr^0,c
  1946   000D90  0E3A               	movlw	58
  1947   000D92  EC94  F015         	call	_clcd_putch
  1948   000D96                     
  1949                           ;main.c: 180:                     clcd_putch((min/10) + '0', (0xC0 + (4)));
  1950   000D96  0EC4               	movlw	196
  1951   000D98  6E09               	movwf	clcd_putch@addr^0,c
  1952   000D9A  C056  F001         	movff	_min,___awdiv@dividend
  1953   000D9E  C057  F002         	movff	_min+1,___awdiv@dividend+1
  1954   000DA2  0E00               	movlw	0
  1955   000DA4  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1956   000DA6  0E0A               	movlw	10
  1957   000DA8  6E03               	movwf	___awdiv@divisor^0,c
  1958   000DAA  EC4E  F012         	call	___awdiv	;wreg free
  1959   000DAE  5001               	movf	?___awdiv^0,w,c
  1960   000DB0  0F30               	addlw	48
  1961   000DB2  EC94  F015         	call	_clcd_putch
  1962   000DB6                     
  1963                           ;main.c: 181:                     clcd_putch((min%10) + '0', (0xC0 + (5)));
  1964   000DB6  0EC5               	movlw	197
  1965   000DB8  6E09               	movwf	clcd_putch@addr^0,c
  1966   000DBA  C056  F001         	movff	_min,___awmod@dividend
  1967   000DBE  C057  F002         	movff	_min+1,___awmod@dividend+1
  1968   000DC2  0E00               	movlw	0
  1969   000DC4  6E04               	movwf	(___awmod@divisor+1)^0,c
  1970   000DC6  0E0A               	movlw	10
  1971   000DC8  6E03               	movwf	___awmod@divisor^0,c
  1972   000DCA  ECB0  F012         	call	___awmod	;wreg free
  1973   000DCE  5001               	movf	?___awmod^0,w,c
  1974   000DD0  0F30               	addlw	48
  1975   000DD2  EC94  F015         	call	_clcd_putch
  1976                           
  1977                           ;main.c: 182:                     clcd_putch(':', (0xC0 + (6)));
  1978   000DD6  0EC6               	movlw	198
  1979   000DD8  6E09               	movwf	clcd_putch@addr^0,c
  1980   000DDA  0E3A               	movlw	58
  1981   000DDC  EC94  F015         	call	_clcd_putch
  1982   000DE0                     
  1983                           ;main.c: 183:                     clcd_putch((sec/10) + '0', (0xC0 + (7)));
  1984   000DE0  0EC7               	movlw	199
  1985   000DE2  6E09               	movwf	clcd_putch@addr^0,c
  1986   000DE4  C054  F001         	movff	_sec,___awdiv@dividend
  1987   000DE8  C055  F002         	movff	_sec+1,___awdiv@dividend+1
  1988   000DEC  0E00               	movlw	0
  1989   000DEE  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1990   000DF0  0E0A               	movlw	10
  1991   000DF2  6E03               	movwf	___awdiv@divisor^0,c
  1992   000DF4  EC4E  F012         	call	___awdiv	;wreg free
  1993   000DF8  5001               	movf	?___awdiv^0,w,c
  1994   000DFA  0F30               	addlw	48
  1995   000DFC  EC94  F015         	call	_clcd_putch
  1996   000E00                     
  1997                           ;main.c: 184:                     clcd_putch((sec%10) + '0', (0xC0 + (8)));
  1998   000E00  0EC8               	movlw	200
  1999   000E02  6E09               	movwf	clcd_putch@addr^0,c
  2000   000E04  C054  F001         	movff	_sec,___awmod@dividend
  2001   000E08  C055  F002         	movff	_sec+1,___awmod@dividend+1
  2002   000E0C  0E00               	movlw	0
  2003   000E0E  6E04               	movwf	(___awmod@divisor+1)^0,c
  2004   000E10  0E0A               	movlw	10
  2005   000E12  6E03               	movwf	___awmod@divisor^0,c
  2006   000E14  ECB0  F012         	call	___awmod	;wreg free
  2007   000E18  5001               	movf	?___awmod^0,w,c
  2008   000E1A  0F30               	addlw	48
  2009   000E1C  EC94  F015         	call	_clcd_putch
  2010   000E20                     l3640:
  2011                           
  2012                           ;main.c: 187:                 if(set == 2){
  2013   000E20  0E02               	movlw	2
  2014   000E22  0100               	movlb	0	; () banked
  2015   000E24  1995               	xorwf	_set& (0+255),w,b
  2016   000E26  1196               	iorwf	(_set+1)& (0+255),w,b
  2017   000E28  A4D8               	btfss	status,2,c
  2018   000E2A  EF19  F007         	goto	u3791
  2019   000E2E  EF1B  F007         	goto	u3790
  2020   000E32                     u3791:
  2021   000E32  EF9B  F007         	goto	l3656
  2022   000E36                     u3790:
  2023   000E36                     
  2024                           ; BSR set to: 0
  2025                           ;main.c: 188:                     clcd_putch((hours/10) + '0', (0xC0 + (1)));
  2026   000E36  0EC1               	movlw	193
  2027   000E38  6E09               	movwf	clcd_putch@addr^0,c
  2028   000E3A  C058  F001         	movff	_hours,___awdiv@dividend
  2029   000E3E  C059  F002         	movff	_hours+1,___awdiv@dividend+1
  2030   000E42  0E00               	movlw	0
  2031   000E44  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2032   000E46  0E0A               	movlw	10
  2033   000E48  6E03               	movwf	___awdiv@divisor^0,c
  2034   000E4A  EC4E  F012         	call	___awdiv	;wreg free
  2035   000E4E  5001               	movf	?___awdiv^0,w,c
  2036   000E50  0F30               	addlw	48
  2037   000E52  EC94  F015         	call	_clcd_putch
  2038                           
  2039                           ;main.c: 189:                     clcd_putch((hours%10) + '0', (0xC0 + (2)));
  2040   000E56  0EC2               	movlw	194
  2041   000E58  6E09               	movwf	clcd_putch@addr^0,c
  2042   000E5A  C058  F001         	movff	_hours,___awmod@dividend
  2043   000E5E  C059  F002         	movff	_hours+1,___awmod@dividend+1
  2044   000E62  0E00               	movlw	0
  2045   000E64  6E04               	movwf	(___awmod@divisor+1)^0,c
  2046   000E66  0E0A               	movlw	10
  2047   000E68  6E03               	movwf	___awmod@divisor^0,c
  2048   000E6A  ECB0  F012         	call	___awmod	;wreg free
  2049   000E6E  5001               	movf	?___awmod^0,w,c
  2050   000E70  0F30               	addlw	48
  2051   000E72  EC94  F015         	call	_clcd_putch
  2052   000E76                     
  2053                           ;main.c: 190:                     clcd_putch(':', (0xC0 + (3)));
  2054   000E76  0EC3               	movlw	195
  2055   000E78  6E09               	movwf	clcd_putch@addr^0,c
  2056   000E7A  0E3A               	movlw	58
  2057   000E7C  EC94  F015         	call	_clcd_putch
  2058   000E80                     
  2059                           ;main.c: 191:                     if(blink){
  2060   000E80  0100               	movlb	0	; () banked
  2061   000E82  518F               	movf	main@blink& (0+255),w,b
  2062   000E84  1190               	iorwf	(main@blink+1)& (0+255),w,b
  2063   000E86  B4D8               	btfsc	status,2,c
  2064   000E88  EF48  F007         	goto	u3801
  2065   000E8C  EF4A  F007         	goto	u3800
  2066   000E90                     u3801:
  2067   000E90  EF6C  F007         	goto	l3650
  2068   000E94                     u3800:
  2069   000E94                     
  2070                           ; BSR set to: 0
  2071                           ;main.c: 192:                         clcd_putch((min/10) + '0', (0xC0 + (4)));
  2072   000E94  0EC4               	movlw	196
  2073   000E96  6E09               	movwf	clcd_putch@addr^0,c
  2074   000E98  C056  F001         	movff	_min,___awdiv@dividend
  2075   000E9C  C057  F002         	movff	_min+1,___awdiv@dividend+1
  2076   000EA0  0E00               	movlw	0
  2077   000EA2  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2078   000EA4  0E0A               	movlw	10
  2079   000EA6  6E03               	movwf	___awdiv@divisor^0,c
  2080   000EA8  EC4E  F012         	call	___awdiv	;wreg free
  2081   000EAC  5001               	movf	?___awdiv^0,w,c
  2082   000EAE  0F30               	addlw	48
  2083   000EB0  EC94  F015         	call	_clcd_putch
  2084                           
  2085                           ;main.c: 193:                         clcd_putch((min%10) + '0', (0xC0 + (5)));
  2086   000EB4  0EC5               	movlw	197
  2087   000EB6  6E09               	movwf	clcd_putch@addr^0,c
  2088   000EB8  C056  F001         	movff	_min,___awmod@dividend
  2089   000EBC  C057  F002         	movff	_min+1,___awmod@dividend+1
  2090   000EC0  0E00               	movlw	0
  2091   000EC2  6E04               	movwf	(___awmod@divisor+1)^0,c
  2092   000EC4  0E0A               	movlw	10
  2093   000EC6  6E03               	movwf	___awmod@divisor^0,c
  2094   000EC8  ECB0  F012         	call	___awmod	;wreg free
  2095   000ECC  5001               	movf	?___awmod^0,w,c
  2096   000ECE  0F30               	addlw	48
  2097   000ED0  EC94  F015         	call	_clcd_putch
  2098                           
  2099                           ;main.c: 194:                     }else{
  2100   000ED4  EF76  F007         	goto	l148
  2101   000ED8                     l3650:
  2102                           
  2103                           ; BSR set to: 0
  2104                           ;main.c: 195:                         clcd_putch(' ', (0xC0 + (4)));
  2105   000ED8  0EC4               	movlw	196
  2106   000EDA  6E09               	movwf	clcd_putch@addr^0,c
  2107   000EDC  0E20               	movlw	32
  2108   000EDE  EC94  F015         	call	_clcd_putch
  2109                           
  2110                           ;main.c: 196:                         clcd_putch(' ', (0xC0 + (5)));
  2111   000EE2  0EC5               	movlw	197
  2112   000EE4  6E09               	movwf	clcd_putch@addr^0,c
  2113   000EE6  0E20               	movlw	32
  2114   000EE8  EC94  F015         	call	_clcd_putch
  2115   000EEC                     l148:
  2116                           
  2117                           ;main.c: 198:                     clcd_putch(':', (0xC0 + (6)));
  2118   000EEC  0EC6               	movlw	198
  2119   000EEE  6E09               	movwf	clcd_putch@addr^0,c
  2120   000EF0  0E3A               	movlw	58
  2121   000EF2  EC94  F015         	call	_clcd_putch
  2122   000EF6                     
  2123                           ;main.c: 199:                     clcd_putch((sec/10) + '0', (0xC0 + (7)));
  2124   000EF6  0EC7               	movlw	199
  2125   000EF8  6E09               	movwf	clcd_putch@addr^0,c
  2126   000EFA  C054  F001         	movff	_sec,___awdiv@dividend
  2127   000EFE  C055  F002         	movff	_sec+1,___awdiv@dividend+1
  2128   000F02  0E00               	movlw	0
  2129   000F04  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2130   000F06  0E0A               	movlw	10
  2131   000F08  6E03               	movwf	___awdiv@divisor^0,c
  2132   000F0A  EC4E  F012         	call	___awdiv	;wreg free
  2133   000F0E  5001               	movf	?___awdiv^0,w,c
  2134   000F10  0F30               	addlw	48
  2135   000F12  EC94  F015         	call	_clcd_putch
  2136   000F16                     
  2137                           ;main.c: 200:                     clcd_putch((sec%10) + '0', (0xC0 + (8)));
  2138   000F16  0EC8               	movlw	200
  2139   000F18  6E09               	movwf	clcd_putch@addr^0,c
  2140   000F1A  C054  F001         	movff	_sec,___awmod@dividend
  2141   000F1E  C055  F002         	movff	_sec+1,___awmod@dividend+1
  2142   000F22  0E00               	movlw	0
  2143   000F24  6E04               	movwf	(___awmod@divisor+1)^0,c
  2144   000F26  0E0A               	movlw	10
  2145   000F28  6E03               	movwf	___awmod@divisor^0,c
  2146   000F2A  ECB0  F012         	call	___awmod	;wreg free
  2147   000F2E  5001               	movf	?___awmod^0,w,c
  2148   000F30  0F30               	addlw	48
  2149   000F32  EC94  F015         	call	_clcd_putch
  2150   000F36                     l3656:
  2151                           
  2152                           ;main.c: 203:                 if(set == 3){
  2153   000F36  0E03               	movlw	3
  2154   000F38  0100               	movlb	0	; () banked
  2155   000F3A  1995               	xorwf	_set& (0+255),w,b
  2156   000F3C  1196               	iorwf	(_set+1)& (0+255),w,b
  2157   000F3E  A4D8               	btfss	status,2,c
  2158   000F40  EFA4  F007         	goto	u3811
  2159   000F44  EFA6  F007         	goto	u3810
  2160   000F48                     u3811:
  2161   000F48  EF26  F008         	goto	l3674
  2162   000F4C                     u3810:
  2163   000F4C                     
  2164                           ; BSR set to: 0
  2165                           ;main.c: 204:                     clcd_putch((hours/10) + '0', (0xC0 + (1)));
  2166   000F4C  0EC1               	movlw	193
  2167   000F4E  6E09               	movwf	clcd_putch@addr^0,c
  2168   000F50  C058  F001         	movff	_hours,___awdiv@dividend
  2169   000F54  C059  F002         	movff	_hours+1,___awdiv@dividend+1
  2170   000F58  0E00               	movlw	0
  2171   000F5A  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2172   000F5C  0E0A               	movlw	10
  2173   000F5E  6E03               	movwf	___awdiv@divisor^0,c
  2174   000F60  EC4E  F012         	call	___awdiv	;wreg free
  2175   000F64  5001               	movf	?___awdiv^0,w,c
  2176   000F66  0F30               	addlw	48
  2177   000F68  EC94  F015         	call	_clcd_putch
  2178                           
  2179                           ;main.c: 205:                     clcd_putch((hours%10) + '0', (0xC0 + (2)));
  2180   000F6C  0EC2               	movlw	194
  2181   000F6E  6E09               	movwf	clcd_putch@addr^0,c
  2182   000F70  C058  F001         	movff	_hours,___awmod@dividend
  2183   000F74  C059  F002         	movff	_hours+1,___awmod@dividend+1
  2184   000F78  0E00               	movlw	0
  2185   000F7A  6E04               	movwf	(___awmod@divisor+1)^0,c
  2186   000F7C  0E0A               	movlw	10
  2187   000F7E  6E03               	movwf	___awmod@divisor^0,c
  2188   000F80  ECB0  F012         	call	___awmod	;wreg free
  2189   000F84  5001               	movf	?___awmod^0,w,c
  2190   000F86  0F30               	addlw	48
  2191   000F88  EC94  F015         	call	_clcd_putch
  2192   000F8C                     
  2193                           ;main.c: 206:                     clcd_putch(':', (0xC0 + (3)));
  2194   000F8C  0EC3               	movlw	195
  2195   000F8E  6E09               	movwf	clcd_putch@addr^0,c
  2196   000F90  0E3A               	movlw	58
  2197   000F92  EC94  F015         	call	_clcd_putch
  2198   000F96                     
  2199                           ;main.c: 207:                     clcd_putch((min/10) + '0', (0xC0 + (4)));
  2200   000F96  0EC4               	movlw	196
  2201   000F98  6E09               	movwf	clcd_putch@addr^0,c
  2202   000F9A  C056  F001         	movff	_min,___awdiv@dividend
  2203   000F9E  C057  F002         	movff	_min+1,___awdiv@dividend+1
  2204   000FA2  0E00               	movlw	0
  2205   000FA4  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2206   000FA6  0E0A               	movlw	10
  2207   000FA8  6E03               	movwf	___awdiv@divisor^0,c
  2208   000FAA  EC4E  F012         	call	___awdiv	;wreg free
  2209   000FAE  5001               	movf	?___awdiv^0,w,c
  2210   000FB0  0F30               	addlw	48
  2211   000FB2  EC94  F015         	call	_clcd_putch
  2212   000FB6                     
  2213                           ;main.c: 208:                     clcd_putch((min%10) + '0', (0xC0 + (5)));
  2214   000FB6  0EC5               	movlw	197
  2215   000FB8  6E09               	movwf	clcd_putch@addr^0,c
  2216   000FBA  C056  F001         	movff	_min,___awmod@dividend
  2217   000FBE  C057  F002         	movff	_min+1,___awmod@dividend+1
  2218   000FC2  0E00               	movlw	0
  2219   000FC4  6E04               	movwf	(___awmod@divisor+1)^0,c
  2220   000FC6  0E0A               	movlw	10
  2221   000FC8  6E03               	movwf	___awmod@divisor^0,c
  2222   000FCA  ECB0  F012         	call	___awmod	;wreg free
  2223   000FCE  5001               	movf	?___awmod^0,w,c
  2224   000FD0  0F30               	addlw	48
  2225   000FD2  EC94  F015         	call	_clcd_putch
  2226   000FD6                     
  2227                           ;main.c: 209:                     clcd_putch(':', (0xC0 + (6)));
  2228   000FD6  0EC6               	movlw	198
  2229   000FD8  6E09               	movwf	clcd_putch@addr^0,c
  2230   000FDA  0E3A               	movlw	58
  2231   000FDC  EC94  F015         	call	_clcd_putch
  2232   000FE0                     
  2233                           ;main.c: 210:                     if(blink){
  2234   000FE0  0100               	movlb	0	; () banked
  2235   000FE2  518F               	movf	main@blink& (0+255),w,b
  2236   000FE4  1190               	iorwf	(main@blink+1)& (0+255),w,b
  2237   000FE6  B4D8               	btfsc	status,2,c
  2238   000FE8  EFF8  F007         	goto	u3821
  2239   000FEC  EFFA  F007         	goto	u3820
  2240   000FF0                     u3821:
  2241   000FF0  EF1C  F008         	goto	l3672
  2242   000FF4                     u3820:
  2243   000FF4                     
  2244                           ; BSR set to: 0
  2245                           ;main.c: 211:                         clcd_putch((sec/10) + '0', (0xC0 + (7)));
  2246   000FF4  0EC7               	movlw	199
  2247   000FF6  6E09               	movwf	clcd_putch@addr^0,c
  2248   000FF8  C054  F001         	movff	_sec,___awdiv@dividend
  2249   000FFC  C055  F002         	movff	_sec+1,___awdiv@dividend+1
  2250   001000  0E00               	movlw	0
  2251   001002  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2252   001004  0E0A               	movlw	10
  2253   001006  6E03               	movwf	___awdiv@divisor^0,c
  2254   001008  EC4E  F012         	call	___awdiv	;wreg free
  2255   00100C  5001               	movf	?___awdiv^0,w,c
  2256   00100E  0F30               	addlw	48
  2257   001010  EC94  F015         	call	_clcd_putch
  2258                           
  2259                           ;main.c: 212:                         clcd_putch((sec%10) + '0', (0xC0 + (8)));
  2260   001014  0EC8               	movlw	200
  2261   001016  6E09               	movwf	clcd_putch@addr^0,c
  2262   001018  C054  F001         	movff	_sec,___awmod@dividend
  2263   00101C  C055  F002         	movff	_sec+1,___awmod@dividend+1
  2264   001020  0E00               	movlw	0
  2265   001022  6E04               	movwf	(___awmod@divisor+1)^0,c
  2266   001024  0E0A               	movlw	10
  2267   001026  6E03               	movwf	___awmod@divisor^0,c
  2268   001028  ECB0  F012         	call	___awmod	;wreg free
  2269   00102C  5001               	movf	?___awmod^0,w,c
  2270   00102E  0F30               	addlw	48
  2271   001030  EC94  F015         	call	_clcd_putch
  2272                           
  2273                           ;main.c: 213:                     }else{
  2274   001034  EF26  F008         	goto	l3674
  2275   001038                     l3672:
  2276                           
  2277                           ; BSR set to: 0
  2278                           ;main.c: 214:                         clcd_putch(' ', (0xC0 + (7)));
  2279   001038  0EC7               	movlw	199
  2280   00103A  6E09               	movwf	clcd_putch@addr^0,c
  2281   00103C  0E20               	movlw	32
  2282   00103E  EC94  F015         	call	_clcd_putch
  2283                           
  2284                           ;main.c: 215:                         clcd_putch(' ', (0xC0 + (8)));
  2285   001042  0EC8               	movlw	200
  2286   001044  6E09               	movwf	clcd_putch@addr^0,c
  2287   001046  0E20               	movlw	32
  2288   001048  EC94  F015         	call	_clcd_putch
  2289   00104C                     l3674:
  2290                           
  2291                           ;main.c: 220:             if((flag3 == 2 && star == 2)||(flag3 == 3 && star == 1)){
  2292   00104C  0E02               	movlw	2
  2293   00104E  185C               	xorwf	_flag3^0,w,c
  2294   001050  105D               	iorwf	(_flag3+1)^0,w,c
  2295   001052  A4D8               	btfss	status,2,c
  2296   001054  EF2E  F008         	goto	u3831
  2297   001058  EF30  F008         	goto	u3830
  2298   00105C                     u3831:
  2299   00105C  EF3A  F008         	goto	l3678
  2300   001060                     u3830:
  2301   001060  0E02               	movlw	2
  2302   001062  185A               	xorwf	_star^0,w,c
  2303   001064  105B               	iorwf	(_star+1)^0,w,c
  2304   001066  B4D8               	btfsc	status,2,c
  2305   001068  EF38  F008         	goto	u3841
  2306   00106C  EF3A  F008         	goto	u3840
  2307   001070                     u3841:
  2308   001070  EF4D  F008         	goto	l3682
  2309   001074                     u3840:
  2310   001074                     l3678:
  2311   001074  0E03               	movlw	3
  2312   001076  185C               	xorwf	_flag3^0,w,c
  2313   001078  105D               	iorwf	(_flag3+1)^0,w,c
  2314   00107A  A4D8               	btfss	status,2,c
  2315   00107C  EF42  F008         	goto	u3851
  2316   001080  EF44  F008         	goto	u3850
  2317   001084                     u3851:
  2318   001084  EF04  F00A         	goto	l3756
  2319   001088                     u3850:
  2320   001088  045A               	decf	_star^0,w,c
  2321   00108A  105B               	iorwf	(_star+1)^0,w,c
  2322   00108C  A4D8               	btfss	status,2,c
  2323   00108E  EF4B  F008         	goto	u3861
  2324   001092  EF4D  F008         	goto	u3860
  2325   001096                     u3861:
  2326   001096  EF04  F00A         	goto	l3756
  2327   00109A                     u3860:
  2328   00109A                     l3682:
  2329                           
  2330                           ;main.c: 221:                 if(stop_download){
  2331   00109A  0100               	movlb	0	; () banked
  2332   00109C  5191               	movf	main@stop_download& (0+255),w,b
  2333   00109E  1192               	iorwf	(main@stop_download+1)& (0+255),w,b
  2334   0010A0  B4D8               	btfsc	status,2,c
  2335   0010A2  EF55  F008         	goto	u3871
  2336   0010A6  EF57  F008         	goto	u3870
  2337   0010AA                     u3871:
  2338   0010AA  EFC3  F009         	goto	l3748
  2339   0010AE                     u3870:
  2340   0010AE                     
  2341                           ; BSR set to: 0
  2342                           ;main.c: 222:                 char download[10][18];;main.c: 223:                 int a=
      +                          0;
  2343   0010AE  0E00               	movlw	0
  2344   0010B0  6FC2               	movwf	(main@a+1)& (0+255),b
  2345   0010B2  0E00               	movlw	0
  2346   0010B4  6FC1               	movwf	main@a& (0+255),b
  2347                           
  2348                           ;main.c: 224:                 int b=0;
  2349   0010B6  0E00               	movlw	0
  2350   0010B8  6FC4               	movwf	(main@b+1)& (0+255),b
  2351   0010BA  0E00               	movlw	0
  2352   0010BC  6FC3               	movwf	main@b& (0+255),b
  2353                           
  2354                           ;main.c: 227:                 for( int i=0;i<(data_lim/10);i++){
  2355   0010BE  0E00               	movlw	0
  2356   0010C0  6FCC               	movwf	(main@i_170+1)& (0+255),b
  2357   0010C2  0E00               	movlw	0
  2358   0010C4  6FCB               	movwf	main@i_170& (0+255),b
  2359   0010C6  EF4B  F009         	goto	l3726
  2360   0010CA                     l3686:
  2361                           
  2362                           ; BSR set to: 0
  2363                           ;main.c: 228:                     for(int j=0;j<17;j++){
  2364   0010CA  0E00               	movlw	0
  2365   0010CC  6FCE               	movwf	(main@j_171+1)& (0+255),b
  2366   0010CE  0E00               	movlw	0
  2367   0010D0  6FCD               	movwf	main@j_171& (0+255),b
  2368   0010D2                     l3688:
  2369                           
  2370                           ; BSR set to: 0
  2371   0010D2  BFCE               	btfsc	(main@j_171+1)& (0+255),7,b
  2372   0010D4  EF75  F008         	goto	u3881
  2373   0010D8  51CE               	movf	(main@j_171+1)& (0+255),w,b
  2374   0010DA  E109               	bnz	u3880
  2375   0010DC  0E11               	movlw	17
  2376   0010DE  5DCD               	subwf	main@j_171& (0+255),w,b
  2377   0010E0  A0D8               	btfss	status,0,c
  2378   0010E2  EF75  F008         	goto	u3881
  2379   0010E6  EF77  F008         	goto	u3880
  2380   0010EA                     u3881:
  2381   0010EA  EF79  F008         	goto	l3692
  2382   0010EE                     u3880:
  2383   0010EE  EF33  F009         	goto	l3722
  2384   0010F2                     l3692:
  2385                           
  2386                           ; BSR set to: 0
  2387                           ;main.c: 229:                         if(j==1 || j==2 || j==11 || j==14){
  2388   0010F2  05CD               	decf	main@j_171& (0+255),w,b
  2389   0010F4  11CE               	iorwf	(main@j_171+1)& (0+255),w,b
  2390   0010F6  B4D8               	btfsc	status,2,c
  2391   0010F8  EF80  F008         	goto	u3891
  2392   0010FC  EF82  F008         	goto	u3890
  2393   001100                     u3891:
  2394   001100  EFA0  F008         	goto	l3700
  2395   001104                     u3890:
  2396   001104                     
  2397                           ; BSR set to: 0
  2398   001104  0E02               	movlw	2
  2399   001106  19CD               	xorwf	main@j_171& (0+255),w,b
  2400   001108  11CE               	iorwf	(main@j_171+1)& (0+255),w,b
  2401   00110A  B4D8               	btfsc	status,2,c
  2402   00110C  EF8A  F008         	goto	u3901
  2403   001110  EF8C  F008         	goto	u3900
  2404   001114                     u3901:
  2405   001114  EFA0  F008         	goto	l3700
  2406   001118                     u3900:
  2407   001118                     
  2408                           ; BSR set to: 0
  2409   001118  0E0B               	movlw	11
  2410   00111A  19CD               	xorwf	main@j_171& (0+255),w,b
  2411   00111C  11CE               	iorwf	(main@j_171+1)& (0+255),w,b
  2412   00111E  B4D8               	btfsc	status,2,c
  2413   001120  EF94  F008         	goto	u3911
  2414   001124  EF96  F008         	goto	u3910
  2415   001128                     u3911:
  2416   001128  EFA0  F008         	goto	l3700
  2417   00112C                     u3910:
  2418   00112C                     
  2419                           ; BSR set to: 0
  2420   00112C  0E0E               	movlw	14
  2421   00112E  19CD               	xorwf	main@j_171& (0+255),w,b
  2422   001130  11CE               	iorwf	(main@j_171+1)& (0+255),w,b
  2423   001132  A4D8               	btfss	status,2,c
  2424   001134  EF9E  F008         	goto	u3921
  2425   001138  EFA0  F008         	goto	u3920
  2426   00113C                     u3921:
  2427   00113C  EFBB  F008         	goto	l3702
  2428   001140                     u3920:
  2429   001140                     l3700:
  2430                           
  2431                           ; BSR set to: 0
  2432                           ;main.c: 230:                             download[i][j] = ' ';
  2433   001140  C0CB  F001         	movff	main@i_170,___wmul@multiplier
  2434   001144  C0CC  F002         	movff	main@i_170+1,___wmul@multiplier+1
  2435   001148  0E00               	movlw	0
  2436   00114A  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2437   00114C  0E12               	movlw	18
  2438   00114E  6E03               	movwf	___wmul@multiplicand^0,c
  2439   001150  EC3A  F015         	call	___wmul	;wreg free
  2440   001154  0E00               	movlw	low main@download
  2441   001156  2401               	addwf	?___wmul^0,w,c
  2442   001158  6E32               	movwf	??_main^0,c
  2443   00115A  0E01               	movlw	high main@download
  2444   00115C  2002               	addwfc	(?___wmul+1)^0,w,c
  2445   00115E  6E33               	movwf	(??_main+1)^0,c
  2446   001160  0100               	movlb	0	; () banked
  2447   001162  51CD               	movf	main@j_171& (0+255),w,b
  2448   001164  2432               	addwf	??_main^0,w,c
  2449   001166  6ED9               	movwf	fsr2l,c
  2450   001168  51CE               	movf	(main@j_171+1)& (0+255),w,b
  2451   00116A  2033               	addwfc	(??_main+1)^0,w,c
  2452   00116C  6EDA               	movwf	fsr2h,c
  2453   00116E  0E20               	movlw	32
  2454   001170  6EDF               	movwf	indf2,c
  2455                           
  2456                           ;main.c: 231:                         }else if(j==5 || j==8){
  2457   001172  EF2F  F009         	goto	l3718
  2458   001176                     l3702:
  2459                           
  2460                           ; BSR set to: 0
  2461   001176  0E05               	movlw	5
  2462   001178  19CD               	xorwf	main@j_171& (0+255),w,b
  2463   00117A  11CE               	iorwf	(main@j_171+1)& (0+255),w,b
  2464   00117C  B4D8               	btfsc	status,2,c
  2465   00117E  EFC3  F008         	goto	u3931
  2466   001182  EFC5  F008         	goto	u3930
  2467   001186                     u3931:
  2468   001186  EFCF  F008         	goto	l3706
  2469   00118A                     u3930:
  2470   00118A                     
  2471                           ; BSR set to: 0
  2472   00118A  0E08               	movlw	8
  2473   00118C  19CD               	xorwf	main@j_171& (0+255),w,b
  2474   00118E  11CE               	iorwf	(main@j_171+1)& (0+255),w,b
  2475   001190  A4D8               	btfss	status,2,c
  2476   001192  EFCD  F008         	goto	u3941
  2477   001196  EFCF  F008         	goto	u3940
  2478   00119A                     u3941:
  2479   00119A  EFEA  F008         	goto	l3708
  2480   00119E                     u3940:
  2481   00119E                     l3706:
  2482                           
  2483                           ; BSR set to: 0
  2484                           ;main.c: 232:                             download[i][j] = ':';
  2485   00119E  C0CB  F001         	movff	main@i_170,___wmul@multiplier
  2486   0011A2  C0CC  F002         	movff	main@i_170+1,___wmul@multiplier+1
  2487   0011A6  0E00               	movlw	0
  2488   0011A8  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2489   0011AA  0E12               	movlw	18
  2490   0011AC  6E03               	movwf	___wmul@multiplicand^0,c
  2491   0011AE  EC3A  F015         	call	___wmul	;wreg free
  2492   0011B2  0E00               	movlw	low main@download
  2493   0011B4  2401               	addwf	?___wmul^0,w,c
  2494   0011B6  6E32               	movwf	??_main^0,c
  2495   0011B8  0E01               	movlw	high main@download
  2496   0011BA  2002               	addwfc	(?___wmul+1)^0,w,c
  2497   0011BC  6E33               	movwf	(??_main+1)^0,c
  2498   0011BE  0100               	movlb	0	; () banked
  2499   0011C0  51CD               	movf	main@j_171& (0+255),w,b
  2500   0011C2  2432               	addwf	??_main^0,w,c
  2501   0011C4  6ED9               	movwf	fsr2l,c
  2502   0011C6  51CE               	movf	(main@j_171+1)& (0+255),w,b
  2503   0011C8  2033               	addwfc	(??_main+1)^0,w,c
  2504   0011CA  6EDA               	movwf	fsr2h,c
  2505   0011CC  0E3A               	movlw	58
  2506   0011CE  6EDF               	movwf	indf2,c
  2507                           
  2508                           ;main.c: 233:                         }else if(j==0){
  2509   0011D0  EF2F  F009         	goto	l3718
  2510   0011D4                     l3708:
  2511                           
  2512                           ; BSR set to: 0
  2513   0011D4  51CD               	movf	main@j_171& (0+255),w,b
  2514   0011D6  11CE               	iorwf	(main@j_171+1)& (0+255),w,b
  2515   0011D8  A4D8               	btfss	status,2,c
  2516   0011DA  EFF1  F008         	goto	u3951
  2517   0011DE  EFF3  F008         	goto	u3950
  2518   0011E2                     u3951:
  2519   0011E2  EF11  F009         	goto	l3714
  2520   0011E6                     u3950:
  2521   0011E6                     
  2522                           ; BSR set to: 0
  2523                           ;main.c: 234:                             download[i][j]='0' + a;
  2524   0011E6  C0CB  F001         	movff	main@i_170,___wmul@multiplier
  2525   0011EA  C0CC  F002         	movff	main@i_170+1,___wmul@multiplier+1
  2526   0011EE  0E00               	movlw	0
  2527   0011F0  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2528   0011F2  0E12               	movlw	18
  2529   0011F4  6E03               	movwf	___wmul@multiplicand^0,c
  2530   0011F6  EC3A  F015         	call	___wmul	;wreg free
  2531   0011FA  0E00               	movlw	low main@download
  2532   0011FC  2401               	addwf	?___wmul^0,w,c
  2533   0011FE  6E32               	movwf	??_main^0,c
  2534   001200  0E01               	movlw	high main@download
  2535   001202  2002               	addwfc	(?___wmul+1)^0,w,c
  2536   001204  6E33               	movwf	(??_main+1)^0,c
  2537   001206  0100               	movlb	0	; () banked
  2538   001208  51CD               	movf	main@j_171& (0+255),w,b
  2539   00120A  2432               	addwf	??_main^0,w,c
  2540   00120C  6ED9               	movwf	fsr2l,c
  2541   00120E  51CE               	movf	(main@j_171+1)& (0+255),w,b
  2542   001210  2033               	addwfc	(??_main+1)^0,w,c
  2543   001212  6EDA               	movwf	fsr2h,c
  2544   001214  51C1               	movf	main@a& (0+255),w,b
  2545   001216  0F30               	addlw	48
  2546   001218  6EDF               	movwf	indf2,c
  2547   00121A                     
  2548                           ; BSR set to: 0
  2549                           ;main.c: 235:                             a++;
  2550   00121A  4BC1               	infsnz	main@a& (0+255),f,b
  2551   00121C  2BC2               	incf	(main@a+1)& (0+255),f,b
  2552                           
  2553                           ;main.c: 236:                         }else{
  2554   00121E  EF2F  F009         	goto	l3718
  2555   001222                     l3714:
  2556                           
  2557                           ; BSR set to: 0
  2558                           ;main.c: 237:                             download[i][j]= read_external_eeprom(b++);
  2559   001222  C0CB  F001         	movff	main@i_170,___wmul@multiplier
  2560   001226  C0CC  F002         	movff	main@i_170+1,___wmul@multiplier+1
  2561   00122A  0E00               	movlw	0
  2562   00122C  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2563   00122E  0E12               	movlw	18
  2564   001230  6E03               	movwf	___wmul@multiplicand^0,c
  2565   001232  EC3A  F015         	call	___wmul	;wreg free
  2566   001236  0E00               	movlw	low main@download
  2567   001238  2401               	addwf	?___wmul^0,w,c
  2568   00123A  6E32               	movwf	??_main^0,c
  2569   00123C  0E01               	movlw	high main@download
  2570   00123E  2002               	addwfc	(?___wmul+1)^0,w,c
  2571   001240  6E33               	movwf	(??_main+1)^0,c
  2572   001242  0100               	movlb	0	; () banked
  2573   001244  51CD               	movf	main@j_171& (0+255),w,b
  2574   001246  2432               	addwf	??_main^0,w,c
  2575   001248  6ED9               	movwf	fsr2l,c
  2576   00124A  51CE               	movf	(main@j_171+1)& (0+255),w,b
  2577   00124C  2033               	addwfc	(??_main+1)^0,w,c
  2578   00124E  6EDA               	movwf	fsr2h,c
  2579   001250  51C3               	movf	main@b& (0+255),w,b
  2580   001252  EC10  F015         	call	_read_external_eeprom
  2581   001256  6EDF               	movwf	indf2,c
  2582   001258  0100               	movlb	0	; () banked
  2583   00125A  4BC3               	infsnz	main@b& (0+255),f,b
  2584   00125C  2BC4               	incf	(main@b+1)& (0+255),f,b
  2585   00125E                     l3718:
  2586                           
  2587                           ; BSR set to: 0
  2588                           ;main.c: 239:                     }
  2589   00125E  4BCD               	infsnz	main@j_171& (0+255),f,b
  2590   001260  2BCE               	incf	(main@j_171+1)& (0+255),f,b
  2591   001262  EF69  F008         	goto	l3688
  2592   001266                     l3722:
  2593                           
  2594                           ; BSR set to: 0
  2595                           ;main.c: 240:                     download[i][17] = '\0';
  2596   001266  C0CB  F001         	movff	main@i_170,___wmul@multiplier
  2597   00126A  C0CC  F002         	movff	main@i_170+1,___wmul@multiplier+1
  2598   00126E  0E00               	movlw	0
  2599   001270  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2600   001272  0E12               	movlw	18
  2601   001274  6E03               	movwf	___wmul@multiplicand^0,c
  2602   001276  EC3A  F015         	call	___wmul	;wreg free
  2603   00127A  0E11               	movlw	17
  2604   00127C  2601               	addwf	?___wmul^0,f,c
  2605   00127E  0E00               	movlw	0
  2606   001280  2202               	addwfc	(?___wmul+1)^0,f,c
  2607   001282  0E00               	movlw	low main@download
  2608   001284  2401               	addwf	?___wmul^0,w,c
  2609   001286  6ED9               	movwf	fsr2l,c
  2610   001288  0E01               	movlw	high main@download
  2611   00128A  2002               	addwfc	(?___wmul+1)^0,w,c
  2612   00128C  6EDA               	movwf	fsr2h,c
  2613   00128E  6ADF               	clrf	indf2,c
  2614   001290                     
  2615                           ;main.c: 241:                 }
  2616   001290  0100               	movlb	0	; () banked
  2617   001292  4BCB               	infsnz	main@i_170& (0+255),f,b
  2618   001294  2BCC               	incf	(main@i_170+1)& (0+255),f,b
  2619   001296                     l3726:
  2620                           
  2621                           ; BSR set to: 0
  2622   001296  C0E9  F001         	movff	_data_lim,___awdiv@dividend
  2623   00129A  C0EA  F002         	movff	_data_lim+1,___awdiv@dividend+1
  2624   00129E  0E00               	movlw	0
  2625   0012A0  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2626   0012A2  0E0A               	movlw	10
  2627   0012A4  6E03               	movwf	___awdiv@divisor^0,c
  2628   0012A6  EC4E  F012         	call	___awdiv	;wreg free
  2629   0012AA  5001               	movf	?___awdiv^0,w,c
  2630   0012AC  0100               	movlb	0	; () banked
  2631   0012AE  5DCB               	subwf	main@i_170& (0+255),w,b
  2632   0012B0  51CC               	movf	(main@i_170+1)& (0+255),w,b
  2633   0012B2  0A80               	xorlw	128
  2634   0012B4  6E32               	movwf	??_main^0,c
  2635   0012B6  5002               	movf	(?___awdiv+1)^0,w,c
  2636   0012B8  0A80               	xorlw	128
  2637   0012BA  5832               	subwfb	??_main^0,w,c
  2638   0012BC  A0D8               	btfss	status,0,c
  2639   0012BE  EF63  F009         	goto	u3961
  2640   0012C2  EF65  F009         	goto	u3960
  2641   0012C6                     u3961:
  2642   0012C6  EF65  F008         	goto	l3686
  2643   0012CA                     u3960:
  2644   0012CA                     
  2645                           ; BSR set to: 0
  2646                           ;main.c: 243:                 if(clear){
  2647   0012CA  51E3               	movf	_clear& (0+255),w,b
  2648   0012CC  11E4               	iorwf	(_clear+1)& (0+255),w,b
  2649   0012CE  B4D8               	btfsc	status,2,c
  2650   0012D0  EF6C  F009         	goto	u3971
  2651   0012D4  EF6E  F009         	goto	u3970
  2652   0012D8                     u3971:
  2653   0012D8  EFBF  F009         	goto	l3746
  2654   0012DC                     u3970:
  2655   0012DC                     
  2656                           ; BSR set to: 0
  2657                           ;main.c: 244:                     char download1[18]= "NO.  TIME   EV SP";
  2658   0012DC  EE20  F07B         	lfsr	2,main@F10534
  2659   0012E0  EE10  F035         	lfsr	1,main@download1
  2660   0012E4  0E11               	movlw	17
  2661   0012E6                     u3981:
  2662   0012E6  CFDB FFE3          	movff	plusw2,plusw1
  2663   0012EA  06E8               	decf	wreg,f,c
  2664   0012EC  E2FC               	bc	u3981
  2665   0012EE                     
  2666                           ; BSR set to: 0
  2667                           ;main.c: 245:                     puts(download1);
  2668   0012EE  0E35               	movlw	low main@download1
  2669   0012F0  6E07               	movwf	puts@s^0,c
  2670   0012F2  0E00               	movlw	high main@download1
  2671   0012F4  6E08               	movwf	(puts@s+1)^0,c
  2672   0012F6  EC40  F014         	call	_puts	;wreg free
  2673   0012FA                     
  2674                           ;main.c: 246:                     puts("\n\r");
  2675   0012FA  0E89               	movlw	low STR_14
  2676   0012FC  6E07               	movwf	puts@s^0,c
  2677   0012FE  0E06               	movlw	high STR_14
  2678   001300  6E08               	movwf	(puts@s+1)^0,c
  2679   001302  EC40  F014         	call	_puts	;wreg free
  2680   001306                     
  2681                           ;main.c: 249:                     for(int i=0;i<(data_lim/10);i++){
  2682   001306  0E00               	movlw	0
  2683   001308  0100               	movlb	0	; () banked
  2684   00130A  6FC8               	movwf	(main@i_175+1)& (0+255),b
  2685   00130C  0E00               	movlw	0
  2686   00130E  6FC7               	movwf	main@i_175& (0+255),b
  2687   001310  EFA5  F009         	goto	l3744
  2688   001314                     l3738:
  2689                           
  2690                           ; BSR set to: 0
  2691                           ;main.c: 250:                         puts(download[i]);
  2692   001314  C0C7  F001         	movff	main@i_175,___wmul@multiplier
  2693   001318  C0C8  F002         	movff	main@i_175+1,___wmul@multiplier+1
  2694   00131C  0E00               	movlw	0
  2695   00131E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2696   001320  0E12               	movlw	18
  2697   001322  6E03               	movwf	___wmul@multiplicand^0,c
  2698   001324  EC3A  F015         	call	___wmul	;wreg free
  2699   001328  0E00               	movlw	low main@download
  2700   00132A  2401               	addwf	?___wmul^0,w,c
  2701   00132C  6E07               	movwf	puts@s^0,c
  2702   00132E  0E01               	movlw	high main@download
  2703   001330  2002               	addwfc	(?___wmul+1)^0,w,c
  2704   001332  6E08               	movwf	(puts@s+1)^0,c
  2705   001334  EC40  F014         	call	_puts	;wreg free
  2706   001338                     
  2707                           ;main.c: 251:                         puts("\n\r");
  2708   001338  0E89               	movlw	low STR_14
  2709   00133A  6E07               	movwf	puts@s^0,c
  2710   00133C  0E06               	movlw	high STR_14
  2711   00133E  6E08               	movwf	(puts@s+1)^0,c
  2712   001340  EC40  F014         	call	_puts	;wreg free
  2713   001344                     
  2714                           ;main.c: 252:                     }
  2715   001344  0100               	movlb	0	; () banked
  2716   001346  4BC7               	infsnz	main@i_175& (0+255),f,b
  2717   001348  2BC8               	incf	(main@i_175+1)& (0+255),f,b
  2718   00134A                     l3744:
  2719                           
  2720                           ; BSR set to: 0
  2721   00134A  C0E9  F001         	movff	_data_lim,___awdiv@dividend
  2722   00134E  C0EA  F002         	movff	_data_lim+1,___awdiv@dividend+1
  2723   001352  0E00               	movlw	0
  2724   001354  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2725   001356  0E0A               	movlw	10
  2726   001358  6E03               	movwf	___awdiv@divisor^0,c
  2727   00135A  EC4E  F012         	call	___awdiv	;wreg free
  2728   00135E  5001               	movf	?___awdiv^0,w,c
  2729   001360  0100               	movlb	0	; () banked
  2730   001362  5DC7               	subwf	main@i_175& (0+255),w,b
  2731   001364  51C8               	movf	(main@i_175+1)& (0+255),w,b
  2732   001366  0A80               	xorlw	128
  2733   001368  6E32               	movwf	??_main^0,c
  2734   00136A  5002               	movf	(?___awdiv+1)^0,w,c
  2735   00136C  0A80               	xorlw	128
  2736   00136E  5832               	subwfb	??_main^0,w,c
  2737   001370  A0D8               	btfss	status,0,c
  2738   001372  EFBD  F009         	goto	u3991
  2739   001376  EFBF  F009         	goto	u3990
  2740   00137A                     u3991:
  2741   00137A  EF8A  F009         	goto	l3738
  2742   00137E                     u3990:
  2743   00137E                     l3746:
  2744                           
  2745                           ; BSR set to: 0
  2746                           ;main.c: 254:                 stop_download = 0;
  2747   00137E  0E00               	movlw	0
  2748   001380  6F92               	movwf	(main@stop_download+1)& (0+255),b
  2749   001382  0E00               	movlw	0
  2750   001384  6F91               	movwf	main@stop_download& (0+255),b
  2751   001386                     l3748:
  2752                           
  2753                           ; BSR set to: 0
  2754                           ;main.c: 256:                 clcd_print("DOWNLOADING ", (0x80 + (0)));
  2755   001386  0E3A               	movlw	low STR_16
  2756   001388  6E07               	movwf	clcd_print@data^0,c
  2757   00138A  0E06               	movlw	high STR_16
  2758   00138C  6E08               	movwf	(clcd_print@data+1)^0,c
  2759   00138E  0E80               	movlw	128
  2760   001390  6E09               	movwf	clcd_print@addr^0,c
  2761   001392  ECD9  F013         	call	_clcd_print	;wreg free
  2762   001396                     
  2763                           ;main.c: 257:                 clcd_print("LOGS...", (0xC0 + (8)));
  2764   001396  0E79               	movlw	low STR_17
  2765   001398  6E07               	movwf	clcd_print@data^0,c
  2766   00139A  0E06               	movlw	high STR_17
  2767   00139C  6E08               	movwf	(clcd_print@data+1)^0,c
  2768   00139E  0EC8               	movlw	200
  2769   0013A0  6E09               	movwf	clcd_print@addr^0,c
  2770   0013A2  ECD9  F013         	call	_clcd_print	;wreg free
  2771                           
  2772                           ;main.c: 258:                 stop = 0;
  2773   0013A6  0E00               	movlw	0
  2774   0013A8  0100               	movlb	0	; () banked
  2775   0013AA  6F94               	movwf	(_stop+1)& (0+255),b
  2776   0013AC  0E00               	movlw	0
  2777   0013AE  6F93               	movwf	_stop& (0+255),b
  2778   0013B0                     
  2779                           ; BSR set to: 0
  2780                           ;main.c: 259:                 if(delay++ > 400){
  2781   0013B0  51DD               	movf	main@delay& (0+255),w,b
  2782   0013B2  6E32               	movwf	??_main^0,c
  2783   0013B4  51DE               	movf	(main@delay+1)& (0+255),w,b
  2784   0013B6  6E33               	movwf	(??_main+1)^0,c
  2785   0013B8  4BDD               	infsnz	main@delay& (0+255),f,b
  2786   0013BA  2BDE               	incf	(main@delay+1)& (0+255),f,b
  2787   0013BC  BE33               	btfsc	(??_main+1)^0,7,c
  2788   0013BE  EFEA  F009         	goto	u4001
  2789   0013C2  0E91               	movlw	145
  2790   0013C4  5C32               	subwf	??_main^0,w,c
  2791   0013C6  0E01               	movlw	1
  2792   0013C8  5833               	subwfb	(??_main+1)^0,w,c
  2793   0013CA  A0D8               	btfss	status,0,c
  2794   0013CC  EFEA  F009         	goto	u4001
  2795   0013D0  EFEC  F009         	goto	u4000
  2796   0013D4                     u4001:
  2797   0013D4  EF04  F00A         	goto	l3756
  2798   0013D8                     u4000:
  2799   0013D8                     
  2800                           ; BSR set to: 0
  2801                           ;main.c: 260:                 flag1 = 2;
  2802   0013D8  0E00               	movlw	0
  2803   0013DA  6E5F               	movwf	(_flag1+1)^0,c
  2804   0013DC  0E02               	movlw	2
  2805   0013DE  6E5E               	movwf	_flag1^0,c
  2806                           
  2807                           ;main.c: 261:                 flag3 = 1;
  2808   0013E0  0E00               	movlw	0
  2809   0013E2  6E5D               	movwf	(_flag3+1)^0,c
  2810   0013E4  0E01               	movlw	1
  2811   0013E6  6E5C               	movwf	_flag3^0,c
  2812                           
  2813                           ;main.c: 262:                 star = 1;
  2814   0013E8  0E00               	movlw	0
  2815   0013EA  6E5B               	movwf	(_star+1)^0,c
  2816   0013EC  0E01               	movlw	1
  2817   0013EE  6E5A               	movwf	_star^0,c
  2818                           
  2819                           ;main.c: 263:                 delay = 0;
  2820   0013F0  0E00               	movlw	0
  2821   0013F2  6FDE               	movwf	(main@delay+1)& (0+255),b
  2822   0013F4  0E00               	movlw	0
  2823   0013F6  6FDD               	movwf	main@delay& (0+255),b
  2824                           
  2825                           ;main.c: 264:                 stop = 1;
  2826   0013F8  0E00               	movlw	0
  2827   0013FA  6F94               	movwf	(_stop+1)& (0+255),b
  2828   0013FC  0E01               	movlw	1
  2829   0013FE  6F93               	movwf	_stop& (0+255),b
  2830                           
  2831                           ;main.c: 265:                 stop_download = 1;
  2832   001400  0E00               	movlw	0
  2833   001402  6F92               	movwf	(main@stop_download+1)& (0+255),b
  2834   001404  0E01               	movlw	1
  2835   001406  6F91               	movwf	main@stop_download& (0+255),b
  2836   001408                     l3756:
  2837                           
  2838                           ;main.c: 269:             if (flag3 == 3 && star == 2){
  2839   001408  0E03               	movlw	3
  2840   00140A  185C               	xorwf	_flag3^0,w,c
  2841   00140C  105D               	iorwf	(_flag3+1)^0,w,c
  2842   00140E  A4D8               	btfss	status,2,c
  2843   001410  EF0C  F00A         	goto	u4011
  2844   001414  EF0E  F00A         	goto	u4010
  2845   001418                     u4011:
  2846   001418  EF55  F003         	goto	l3442
  2847   00141C                     u4010:
  2848   00141C  0E02               	movlw	2
  2849   00141E  185A               	xorwf	_star^0,w,c
  2850   001420  105B               	iorwf	(_star+1)^0,w,c
  2851   001422  A4D8               	btfss	status,2,c
  2852   001424  EF16  F00A         	goto	u4021
  2853   001428  EF18  F00A         	goto	u4020
  2854   00142C                     u4021:
  2855   00142C  EF55  F003         	goto	l3442
  2856   001430                     u4020:
  2857   001430                     
  2858                           ;main.c: 270:                 clear = 0;
  2859   001430  0E00               	movlw	0
  2860   001432  0100               	movlb	0	; () banked
  2861   001434  6FE4               	movwf	(_clear+1)& (0+255),b
  2862   001436  0E00               	movlw	0
  2863   001438  6FE3               	movwf	_clear& (0+255),b
  2864   00143A                     
  2865                           ; BSR set to: 0
  2866                           ;main.c: 271:                 clcd_print("CLEARING LOGS", (0x80 + (1)));
  2867   00143A  0E2C               	movlw	low STR_18
  2868   00143C  6E07               	movwf	clcd_print@data^0,c
  2869   00143E  0E06               	movlw	high STR_18
  2870   001440  6E08               	movwf	(clcd_print@data+1)^0,c
  2871   001442  0E81               	movlw	129
  2872   001444  6E09               	movwf	clcd_print@addr^0,c
  2873   001446  ECD9  F013         	call	_clcd_print	;wreg free
  2874   00144A                     
  2875                           ;main.c: 272:                 clcd_print("PLEASE WAIT...", (0xC0 + (1)));
  2876   00144A  0E01               	movlw	low STR_19
  2877   00144C  6E07               	movwf	clcd_print@data^0,c
  2878   00144E  0E06               	movlw	high STR_19
  2879   001450  6E08               	movwf	(clcd_print@data+1)^0,c
  2880   001452  0EC1               	movlw	193
  2881   001454  6E09               	movwf	clcd_print@addr^0,c
  2882   001456  ECD9  F013         	call	_clcd_print	;wreg free
  2883                           
  2884                           ;main.c: 273:                 stop = 0;
  2885   00145A  0E00               	movlw	0
  2886   00145C  0100               	movlb	0	; () banked
  2887   00145E  6F94               	movwf	(_stop+1)& (0+255),b
  2888   001460  0E00               	movlw	0
  2889   001462  6F93               	movwf	_stop& (0+255),b
  2890   001464                     
  2891                           ; BSR set to: 0
  2892                           ;main.c: 274:                 if(delay++ > 400){
  2893   001464  51DD               	movf	main@delay& (0+255),w,b
  2894   001466  6E32               	movwf	??_main^0,c
  2895   001468  51DE               	movf	(main@delay+1)& (0+255),w,b
  2896   00146A  6E33               	movwf	(??_main+1)^0,c
  2897   00146C  4BDD               	infsnz	main@delay& (0+255),f,b
  2898   00146E  2BDE               	incf	(main@delay+1)& (0+255),f,b
  2899   001470  BE33               	btfsc	(??_main+1)^0,7,c
  2900   001472  EF44  F00A         	goto	u4031
  2901   001476  0E91               	movlw	145
  2902   001478  5C32               	subwf	??_main^0,w,c
  2903   00147A  0E01               	movlw	1
  2904   00147C  5833               	subwfb	(??_main+1)^0,w,c
  2905   00147E  A0D8               	btfss	status,0,c
  2906   001480  EF44  F00A         	goto	u4031
  2907   001484  EF46  F00A         	goto	u4030
  2908   001488                     u4031:
  2909   001488  EF6B  F00A         	goto	l129
  2910   00148C                     u4030:
  2911   00148C                     
  2912                           ; BSR set to: 0
  2913                           ;main.c: 275:                 flag1 = 2;
  2914   00148C  0E00               	movlw	0
  2915   00148E  6E5F               	movwf	(_flag1+1)^0,c
  2916   001490  0E02               	movlw	2
  2917   001492  6E5E               	movwf	_flag1^0,c
  2918                           
  2919                           ;main.c: 276:                 flag3 =1;
  2920   001494  0E00               	movlw	0
  2921   001496  6E5D               	movwf	(_flag3+1)^0,c
  2922   001498  0E01               	movlw	1
  2923   00149A  6E5C               	movwf	_flag3^0,c
  2924                           
  2925                           ;main.c: 277:                 star = 1;
  2926   00149C  0E00               	movlw	0
  2927   00149E  6E5B               	movwf	(_star+1)^0,c
  2928   0014A0  0E01               	movlw	1
  2929   0014A2  6E5A               	movwf	_star^0,c
  2930                           
  2931                           ;main.c: 278:                 delay = 0;
  2932   0014A4  0E00               	movlw	0
  2933   0014A6  6FDE               	movwf	(main@delay+1)& (0+255),b
  2934   0014A8  0E00               	movlw	0
  2935   0014AA  6FDD               	movwf	main@delay& (0+255),b
  2936                           
  2937                           ;main.c: 279:                 clearing_log = 1;
  2938   0014AC  0E00               	movlw	0
  2939   0014AE  6FE0               	movwf	(_clearing_log+1)& (0+255),b
  2940   0014B0  0E01               	movlw	1
  2941   0014B2  6FDF               	movwf	_clearing_log& (0+255),b
  2942   0014B4                     
  2943                           ; BSR set to: 0
  2944                           ;main.c: 280:                 store_data(write);
  2945   0014B4  0E49               	movlw	low main@write
  2946   0014B6  6E06               	movwf	store_data@write^0,c
  2947   0014B8  0E00               	movlw	high main@write
  2948   0014BA  6E07               	movwf	(store_data@write+1)^0,c
  2949   0014BC  EC8E  F010         	call	_store_data	;wreg free
  2950   0014C0                     
  2951                           ;main.c: 281:                 clearing_log = 0;
  2952   0014C0  0E00               	movlw	0
  2953   0014C2  0100               	movlb	0	; () banked
  2954   0014C4  6FE0               	movwf	(_clearing_log+1)& (0+255),b
  2955   0014C6  0E00               	movlw	0
  2956   0014C8  6FDF               	movwf	_clearing_log& (0+255),b
  2957   0014CA                     
  2958                           ; BSR set to: 0
  2959                           ;main.c: 282:                 stop = 1;
  2960   0014CA  0E00               	movlw	0
  2961   0014CC  6F94               	movwf	(_stop+1)& (0+255),b
  2962   0014CE  0E01               	movlw	1
  2963   0014D0  6F93               	movwf	_stop& (0+255),b
  2964   0014D2  EF55  F003         	goto	l3442
  2965   0014D6                     l129:
  2966                           
  2967                           ; BSR set to: 0
  2968   0014D6  EF55  F003         	goto	l3442
  2969   0014DA  EF00  F000         	goto	start
  2970   0014DE                     __end_of_main:
  2971                           	callstack 0
  2972                           
  2973 ;; *************** function _store_data *****************
  2974 ;; Defined at:
  2975 ;;		line 16 in file "store_data.c"
  2976 ;; Parameters:    Size  Location     Type
  2977 ;;  write           2    5[COMRAM] PTR unsigned char 
  2978 ;;		 -> main@write(10), 
  2979 ;; Auto vars:     Size  Location     Type
  2980 ;;  temp            1    9[COMRAM] unsigned char 
  2981 ;;  i               2   14[COMRAM] int 
  2982 ;;  i               2   12[COMRAM] int 
  2983 ;;  i               2   10[COMRAM] int 
  2984 ;;  clr             2   16[COMRAM] int 
  2985 ;;  shift_index     2    7[COMRAM] int 
  2986 ;; Return value:  Size  Location     Type
  2987 ;;                  1    wreg      void 
  2988 ;; Registers used:
  2989 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2990 ;; Tracked objects:
  2991 ;;		On entry : 0/0
  2992 ;;		On exit  : 0/0
  2993 ;;		Unchanged: 0/0
  2994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2995 ;;      Params:         2       0       0       0       0       0       0
  2996 ;;      Locals:        11       0       0       0       0       0       0
  2997 ;;      Temps:          0       0       0       0       0       0       0
  2998 ;;      Totals:        13       0       0       0       0       0       0
  2999 ;;Total ram usage:       13 bytes
  3000 ;; Hardware stack levels used: 1
  3001 ;; Hardware stack levels required when called: 4
  3002 ;; This function calls:
  3003 ;;		_read_external_eeprom
  3004 ;;		_write_external_eeprom
  3005 ;; This function is called by:
  3006 ;;		_main
  3007 ;; This function uses a non-reentrant model
  3008 ;;
  3009                           
  3010                           	psect	text1
  3011   00211C                     __ptext1:
  3012                           	callstack 0
  3013   00211C                     _store_data:
  3014                           	callstack 26
  3015   00211C                     
  3016                           ;store_data.c: 17:     int shift_index = 10, clr = 0;
  3017   00211C  0E00               	movlw	0
  3018   00211E  6E09               	movwf	(store_data@shift_index+1)^0,c
  3019   002120  0E0A               	movlw	10
  3020   002122  6E08               	movwf	store_data@shift_index^0,c
  3021   002124                     
  3022                           ;store_data.c: 19:     if(clearing_log == 1){
  3023   002124  0100               	movlb	0	; () banked
  3024   002126  05DF               	decf	_clearing_log& (0+255),w,b
  3025   002128  11E0               	iorwf	(_clearing_log+1)& (0+255),w,b
  3026   00212A  A4D8               	btfss	status,2,c
  3027   00212C  EF9A  F010         	goto	u3031
  3028   002130  EF9C  F010         	goto	u3030
  3029   002134                     u3031:
  3030   002134  EFB9  F010         	goto	l3142
  3031   002138                     u3030:
  3032   002138                     
  3033                           ; BSR set to: 0
  3034                           ;store_data.c: 20:         data_lim = 0;
  3035   002138  0E00               	movlw	0
  3036   00213A  6FEA               	movwf	(_data_lim+1)& (0+255),b
  3037   00213C  0E00               	movlw	0
  3038   00213E  6FE9               	movwf	_data_lim& (0+255),b
  3039                           
  3040                           ;store_data.c: 21:         for(clr=0;clr<100;clr++){
  3041   002140  0E00               	movlw	0
  3042   002142  6E12               	movwf	(store_data@clr+1)^0,c
  3043   002144  0E00               	movlw	0
  3044   002146  6E11               	movwf	store_data@clr^0,c
  3045   002148                     l3136:
  3046                           
  3047                           ;store_data.c: 22:             write_external_eeprom(clr,0);
  3048   002148  0E00               	movlw	0
  3049   00214A  6E02               	movwf	write_external_eeprom@data^0,c
  3050   00214C  5011               	movf	store_data@clr^0,w,c
  3051   00214E  ECB6  F014         	call	_write_external_eeprom
  3052   002152                     
  3053                           ;store_data.c: 23:         }
  3054   002152  4A11               	infsnz	store_data@clr^0,f,c
  3055   002154  2A12               	incf	(store_data@clr+1)^0,f,c
  3056   002156  BE12               	btfsc	(store_data@clr+1)^0,7,c
  3057   002158  EFB7  F010         	goto	u3041
  3058   00215C  5012               	movf	(store_data@clr+1)^0,w,c
  3059   00215E  E109               	bnz	u3040
  3060   002160  0E64               	movlw	100
  3061   002162  5C11               	subwf	store_data@clr^0,w,c
  3062   002164  A0D8               	btfss	status,0,c
  3063   002166  EFB7  F010         	goto	u3041
  3064   00216A  EFB9  F010         	goto	u3040
  3065   00216E                     u3041:
  3066   00216E  EFA4  F010         	goto	l3136
  3067   002172                     u3040:
  3068   002172                     l3142:
  3069                           
  3070                           ;store_data.c: 27:     if (data_lim == 100) {
  3071   002172  0E64               	movlw	100
  3072   002174  0100               	movlb	0	; () banked
  3073   002176  19E9               	xorwf	_data_lim& (0+255),w,b
  3074   002178  11EA               	iorwf	(_data_lim+1)& (0+255),w,b
  3075   00217A  A4D8               	btfss	status,2,c
  3076   00217C  EFC2  F010         	goto	u3051
  3077   002180  EFC4  F010         	goto	u3050
  3078   002184                     u3051:
  3079   002184  EFCC  F010         	goto	l3146
  3080   002188                     u3050:
  3081   002188                     
  3082                           ; BSR set to: 0
  3083                           ;store_data.c: 28:         data_lim = 0;
  3084   002188  0E00               	movlw	0
  3085   00218A  6FEA               	movwf	(_data_lim+1)& (0+255),b
  3086   00218C  0E00               	movlw	0
  3087   00218E  6FE9               	movwf	_data_lim& (0+255),b
  3088                           
  3089                           ;store_data.c: 29:         clearing_log = 2;
  3090   002190  0E00               	movlw	0
  3091   002192  6FE0               	movwf	(_clearing_log+1)& (0+255),b
  3092   002194  0E02               	movlw	2
  3093   002196  6FDF               	movwf	_clearing_log& (0+255),b
  3094   002198                     l3146:
  3095                           
  3096                           ; BSR set to: 0
  3097                           ;store_data.c: 32:         if(clearing_log == 2){
  3098   002198  0E02               	movlw	2
  3099   00219A  19DF               	xorwf	_clearing_log& (0+255),w,b
  3100   00219C  11E0               	iorwf	(_clearing_log+1)& (0+255),w,b
  3101   00219E  A4D8               	btfss	status,2,c
  3102   0021A0  EFD4  F010         	goto	u3061
  3103   0021A4  EFD6  F010         	goto	u3060
  3104   0021A8                     u3061:
  3105   0021A8  EF1B  F011         	goto	l3180
  3106   0021AC                     u3060:
  3107   0021AC                     
  3108                           ; BSR set to: 0
  3109                           ;store_data.c: 33:         for (int i = 0; i < 90; i++) {
  3110   0021AC  0E00               	movlw	0
  3111   0021AE  6E0C               	movwf	(store_data@i+1)^0,c
  3112   0021B0  0E00               	movlw	0
  3113   0021B2  6E0B               	movwf	store_data@i^0,c
  3114   0021B4                     l3154:
  3115                           
  3116                           ; BSR set to: 0
  3117                           ;store_data.c: 34:             unsigned char temp = read_external_eeprom(shift_index++);
  3118   0021B4  5008               	movf	store_data@shift_index^0,w,c
  3119   0021B6  EC10  F015         	call	_read_external_eeprom
  3120   0021BA  6E0A               	movwf	store_data@temp^0,c
  3121   0021BC  4A08               	infsnz	store_data@shift_index^0,f,c
  3122   0021BE  2A09               	incf	(store_data@shift_index+1)^0,f,c
  3123   0021C0                     
  3124                           ;store_data.c: 35:             write_external_eeprom(data_lim++, temp);
  3125   0021C0  C00A  F002         	movff	store_data@temp,write_external_eeprom@data
  3126   0021C4  0100               	movlb	0	; () banked
  3127   0021C6  51E9               	movf	_data_lim& (0+255),w,b
  3128   0021C8  ECB6  F014         	call	_write_external_eeprom
  3129   0021CC  0100               	movlb	0	; () banked
  3130   0021CE  4BE9               	infsnz	_data_lim& (0+255),f,b
  3131   0021D0  2BEA               	incf	(_data_lim+1)& (0+255),f,b
  3132   0021D2                     
  3133                           ; BSR set to: 0
  3134                           ;store_data.c: 36:         }
  3135   0021D2  4A0B               	infsnz	store_data@i^0,f,c
  3136   0021D4  2A0C               	incf	(store_data@i+1)^0,f,c
  3137   0021D6                     
  3138                           ; BSR set to: 0
  3139   0021D6  BE0C               	btfsc	(store_data@i+1)^0,7,c
  3140   0021D8  EFF7  F010         	goto	u3071
  3141   0021DC  500C               	movf	(store_data@i+1)^0,w,c
  3142   0021DE  E109               	bnz	u3070
  3143   0021E0  0E5A               	movlw	90
  3144   0021E2  5C0B               	subwf	store_data@i^0,w,c
  3145   0021E4  A0D8               	btfss	status,0,c
  3146   0021E6  EFF7  F010         	goto	u3071
  3147   0021EA  EFF9  F010         	goto	u3070
  3148   0021EE                     u3071:
  3149   0021EE  EFDA  F010         	goto	l3154
  3150   0021F2                     u3070:
  3151   0021F2                     
  3152                           ; BSR set to: 0
  3153                           ;store_data.c: 37:         for (int i = 0; i < 10; i++) {
  3154   0021F2  0E00               	movlw	0
  3155   0021F4  6E0E               	movwf	(store_data@i_321+1)^0,c
  3156   0021F6  0E00               	movlw	0
  3157   0021F8  6E0D               	movwf	store_data@i_321^0,c
  3158   0021FA                     l3172:
  3159                           
  3160                           ; BSR set to: 0
  3161                           ;store_data.c: 38:         write_external_eeprom(data_lim++, write[i]);
  3162   0021FA  500D               	movf	store_data@i_321^0,w,c
  3163   0021FC  2406               	addwf	store_data@write^0,w,c
  3164   0021FE  6ED9               	movwf	fsr2l,c
  3165   002200  500E               	movf	(store_data@i_321+1)^0,w,c
  3166   002202  2007               	addwfc	(store_data@write+1)^0,w,c
  3167   002204  6EDA               	movwf	fsr2h,c
  3168   002206  50DF               	movf	indf2,w,c
  3169   002208  6E02               	movwf	write_external_eeprom@data^0,c
  3170   00220A  51E9               	movf	_data_lim& (0+255),w,b
  3171   00220C  ECB6  F014         	call	_write_external_eeprom
  3172   002210  0100               	movlb	0	; () banked
  3173   002212  4BE9               	infsnz	_data_lim& (0+255),f,b
  3174   002214  2BEA               	incf	(_data_lim+1)& (0+255),f,b
  3175   002216                     
  3176                           ; BSR set to: 0
  3177                           ;store_data.c: 39:     }
  3178   002216  4A0D               	infsnz	store_data@i_321^0,f,c
  3179   002218  2A0E               	incf	(store_data@i_321+1)^0,f,c
  3180   00221A                     
  3181                           ; BSR set to: 0
  3182   00221A  BE0E               	btfsc	(store_data@i_321+1)^0,7,c
  3183   00221C  EF19  F011         	goto	u3081
  3184   002220  500E               	movf	(store_data@i_321+1)^0,w,c
  3185   002222  E109               	bnz	u3080
  3186   002224  0E0A               	movlw	10
  3187   002226  5C0D               	subwf	store_data@i_321^0,w,c
  3188   002228  A0D8               	btfss	status,0,c
  3189   00222A  EF19  F011         	goto	u3081
  3190   00222E  EF1B  F011         	goto	u3080
  3191   002232                     u3081:
  3192   002232  EFFD  F010         	goto	l3172
  3193   002236                     u3080:
  3194   002236                     l3180:
  3195                           
  3196                           ; BSR set to: 0
  3197                           ;store_data.c: 43:     if(clearing_log == 0){
  3198   002236  51DF               	movf	_clearing_log& (0+255),w,b
  3199   002238  11E0               	iorwf	(_clearing_log+1)& (0+255),w,b
  3200   00223A  A4D8               	btfss	status,2,c
  3201   00223C  EF22  F011         	goto	u3091
  3202   002240  EF24  F011         	goto	u3090
  3203   002244                     u3091:
  3204   002244  EF46  F011         	goto	l373
  3205   002248                     u3090:
  3206   002248                     
  3207                           ; BSR set to: 0
  3208                           ;store_data.c: 44:         for (int i = 0; i < 10; i++) {
  3209   002248  0E00               	movlw	0
  3210   00224A  6E10               	movwf	(store_data@i_322+1)^0,c
  3211   00224C  0E00               	movlw	0
  3212   00224E  6E0F               	movwf	store_data@i_322^0,c
  3213   002250                     l3188:
  3214                           
  3215                           ; BSR set to: 0
  3216                           ;store_data.c: 45:         write_external_eeprom(data_lim++, write[i]);
  3217   002250  500F               	movf	store_data@i_322^0,w,c
  3218   002252  2406               	addwf	store_data@write^0,w,c
  3219   002254  6ED9               	movwf	fsr2l,c
  3220   002256  5010               	movf	(store_data@i_322+1)^0,w,c
  3221   002258  2007               	addwfc	(store_data@write+1)^0,w,c
  3222   00225A  6EDA               	movwf	fsr2h,c
  3223   00225C  50DF               	movf	indf2,w,c
  3224   00225E  6E02               	movwf	write_external_eeprom@data^0,c
  3225   002260  51E9               	movf	_data_lim& (0+255),w,b
  3226   002262  ECB6  F014         	call	_write_external_eeprom
  3227   002266  0100               	movlb	0	; () banked
  3228   002268  4BE9               	infsnz	_data_lim& (0+255),f,b
  3229   00226A  2BEA               	incf	(_data_lim+1)& (0+255),f,b
  3230   00226C                     
  3231                           ; BSR set to: 0
  3232                           ;store_data.c: 46:         }
  3233   00226C  4A0F               	infsnz	store_data@i_322^0,f,c
  3234   00226E  2A10               	incf	(store_data@i_322+1)^0,f,c
  3235   002270                     
  3236                           ; BSR set to: 0
  3237   002270  BE10               	btfsc	(store_data@i_322+1)^0,7,c
  3238   002272  EF44  F011         	goto	u3101
  3239   002276  5010               	movf	(store_data@i_322+1)^0,w,c
  3240   002278  E109               	bnz	u3100
  3241   00227A  0E0A               	movlw	10
  3242   00227C  5C0F               	subwf	store_data@i_322^0,w,c
  3243   00227E  A0D8               	btfss	status,0,c
  3244   002280  EF44  F011         	goto	u3101
  3245   002284  EF46  F011         	goto	u3100
  3246   002288                     u3101:
  3247   002288  EF28  F011         	goto	l3188
  3248   00228C                     u3100:
  3249   00228C                     l373:
  3250                           
  3251                           ; BSR set to: 0
  3252   00228C  0012               	return		;funcret
  3253   00228E                     __end_of_store_data:
  3254                           	callstack 0
  3255                           
  3256 ;; *************** function _write_external_eeprom *****************
  3257 ;; Defined at:
  3258 ;;		line 16 in file "external_eeprom.c"
  3259 ;; Parameters:    Size  Location     Type
  3260 ;;  address         1    wreg     unsigned char 
  3261 ;;  data            1    1[COMRAM] unsigned char 
  3262 ;; Auto vars:     Size  Location     Type
  3263 ;;  address         1    4[COMRAM] unsigned char 
  3264 ;;  wait            2    2[COMRAM] unsigned int 
  3265 ;; Return value:  Size  Location     Type
  3266 ;;                  1    wreg      void 
  3267 ;; Registers used:
  3268 ;;		wreg, status,2, status,0, cstack
  3269 ;; Tracked objects:
  3270 ;;		On entry : 0/0
  3271 ;;		On exit  : 0/0
  3272 ;;		Unchanged: 0/0
  3273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3274 ;;      Params:         1       0       0       0       0       0       0
  3275 ;;      Locals:         3       0       0       0       0       0       0
  3276 ;;      Temps:          0       0       0       0       0       0       0
  3277 ;;      Totals:         4       0       0       0       0       0       0
  3278 ;;Total ram usage:        4 bytes
  3279 ;; Hardware stack levels used: 1
  3280 ;; Hardware stack levels required when called: 2
  3281 ;; This function calls:
  3282 ;;		_i2c_start
  3283 ;;		_i2c_stop
  3284 ;;		_i2c_write
  3285 ;; This function is called by:
  3286 ;;		_store_data
  3287 ;; This function uses a non-reentrant model
  3288 ;;
  3289                           
  3290                           	psect	text2
  3291   00296C                     __ptext2:
  3292                           	callstack 0
  3293   00296C                     _write_external_eeprom:
  3294                           	callstack 27
  3295                           
  3296                           ; BSR set to: 0
  3297                           ;incstack = 0
  3298                           ;write_external_eeprom@address stored from wreg
  3299   00296C  6E05               	movwf	write_external_eeprom@address^0,c
  3300   00296E                     
  3301                           ;external_eeprom.c: 17:  i2c_start();
  3302   00296E  ECCD  F015         	call	_i2c_start	;wreg free
  3303   002972                     
  3304                           ;external_eeprom.c: 18:  i2c_write(0xA0);
  3305   002972  0EA0               	movlw	160
  3306   002974  ECBD  F015         	call	_i2c_write
  3307   002978                     
  3308                           ;external_eeprom.c: 19:  i2c_write(address);
  3309   002978  5005               	movf	write_external_eeprom@address^0,w,c
  3310   00297A  ECBD  F015         	call	_i2c_write
  3311   00297E                     
  3312                           ;external_eeprom.c: 20:  i2c_write(data);
  3313   00297E  5002               	movf	write_external_eeprom@data^0,w,c
  3314   002980  ECBD  F015         	call	_i2c_write
  3315   002984                     
  3316                           ;external_eeprom.c: 21:  i2c_stop();
  3317   002984  ECC9  F015         	call	_i2c_stop	;wreg free
  3318   002988                     
  3319                           ;external_eeprom.c: 22:     for(unsigned int wait = 3000; wait--;);
  3320   002988  0E0B               	movlw	11
  3321   00298A  6E04               	movwf	(write_external_eeprom@wait+1)^0,c
  3322   00298C  0EB8               	movlw	184
  3323   00298E  6E03               	movwf	write_external_eeprom@wait^0,c
  3324   002990                     l2770:
  3325   002990  0603               	decf	write_external_eeprom@wait^0,f,c
  3326   002992  A0D8               	btfss	status,0,c
  3327   002994  0604               	decf	(write_external_eeprom@wait+1)^0,f,c
  3328   002996  2803               	incf	write_external_eeprom@wait^0,w,c
  3329   002998  E106               	bnz	u2191
  3330   00299A  2804               	incf	(write_external_eeprom@wait+1)^0,w,c
  3331   00299C  A4D8               	btfss	status,2,c
  3332   00299E  EFD3  F014         	goto	u2191
  3333   0029A2  EFD5  F014         	goto	u2190
  3334   0029A6                     u2191:
  3335   0029A6  EFC8  F014         	goto	l2770
  3336   0029AA                     u2190:
  3337   0029AA  0012               	return		;funcret
  3338   0029AC                     __end_of_write_external_eeprom:
  3339                           	callstack 0
  3340                           
  3341 ;; *************** function _read_external_eeprom *****************
  3342 ;; Defined at:
  3343 ;;		line 25 in file "external_eeprom.c"
  3344 ;; Parameters:    Size  Location     Type
  3345 ;;  address         1    wreg     unsigned char 
  3346 ;; Auto vars:     Size  Location     Type
  3347 ;;  address         1    1[COMRAM] unsigned char 
  3348 ;;  data            1    2[COMRAM] unsigned char 
  3349 ;; Return value:  Size  Location     Type
  3350 ;;                  1    wreg      unsigned char 
  3351 ;; Registers used:
  3352 ;;		wreg, status,2, cstack
  3353 ;; Tracked objects:
  3354 ;;		On entry : 0/0
  3355 ;;		On exit  : 0/0
  3356 ;;		Unchanged: 0/0
  3357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3358 ;;      Params:         0       0       0       0       0       0       0
  3359 ;;      Locals:         2       0       0       0       0       0       0
  3360 ;;      Temps:          0       0       0       0       0       0       0
  3361 ;;      Totals:         2       0       0       0       0       0       0
  3362 ;;Total ram usage:        2 bytes
  3363 ;; Hardware stack levels used: 1
  3364 ;; Hardware stack levels required when called: 3
  3365 ;; This function calls:
  3366 ;;		_i2c_read
  3367 ;;		_i2c_rep_start
  3368 ;;		_i2c_start
  3369 ;;		_i2c_stop
  3370 ;;		_i2c_write
  3371 ;; This function is called by:
  3372 ;;		_main
  3373 ;;		_store_data
  3374 ;; This function uses a non-reentrant model
  3375 ;;
  3376                           
  3377                           	psect	text3
  3378   002A20                     __ptext3:
  3379                           	callstack 0
  3380   002A20                     _read_external_eeprom:
  3381                           	callstack 26
  3382                           
  3383                           ;incstack = 0
  3384                           ;read_external_eeprom@address stored from wreg
  3385   002A20  6E02               	movwf	read_external_eeprom@address^0,c
  3386   002A22                     
  3387                           ;external_eeprom.c: 26:  unsigned char data;;external_eeprom.c: 27:     i2c_start();
  3388   002A22  ECCD  F015         	call	_i2c_start	;wreg free
  3389   002A26                     
  3390                           ;external_eeprom.c: 28:  i2c_write(0xA0);
  3391   002A26  0EA0               	movlw	160
  3392   002A28  ECBD  F015         	call	_i2c_write
  3393   002A2C                     
  3394                           ;external_eeprom.c: 29:  i2c_write(address);
  3395   002A2C  5002               	movf	read_external_eeprom@address^0,w,c
  3396   002A2E  ECBD  F015         	call	_i2c_write
  3397   002A32                     
  3398                           ;external_eeprom.c: 30:  i2c_rep_start();
  3399   002A32  ECD1  F015         	call	_i2c_rep_start	;wreg free
  3400   002A36                     
  3401                           ;external_eeprom.c: 31:  i2c_write(0xA1);
  3402   002A36  0EA1               	movlw	161
  3403   002A38  ECBD  F015         	call	_i2c_write
  3404                           
  3405                           ;external_eeprom.c: 32:  data = i2c_read();
  3406   002A3C  ECC3  F015         	call	_i2c_read	;wreg free
  3407   002A40  6E03               	movwf	read_external_eeprom@data^0,c
  3408   002A42                     
  3409                           ;external_eeprom.c: 33:  i2c_stop();
  3410   002A42  ECC9  F015         	call	_i2c_stop	;wreg free
  3411                           
  3412                           ;external_eeprom.c: 34:     return data;
  3413   002A46  5003               	movf	read_external_eeprom@data^0,w,c
  3414   002A48  0012               	return		;funcret
  3415   002A4A                     __end_of_read_external_eeprom:
  3416                           	callstack 0
  3417                           
  3418 ;; *************** function _read_switches *****************
  3419 ;; Defined at:
  3420 ;;		line 99 in file "matrix_keypad.c"
  3421 ;; Parameters:    Size  Location     Type
  3422 ;;  detection_ty    1    wreg     unsigned char 
  3423 ;; Auto vars:     Size  Location     Type
  3424 ;;  detection_ty    1    0[COMRAM] unsigned char 
  3425 ;; Return value:  Size  Location     Type
  3426 ;;                  1    wreg      unsigned char 
  3427 ;; Registers used:
  3428 ;;		wreg, status,2, status,0, cstack
  3429 ;; Tracked objects:
  3430 ;;		On entry : 0/0
  3431 ;;		On exit  : 0/0
  3432 ;;		Unchanged: 0/0
  3433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3434 ;;      Params:         0       0       0       0       0       0       0
  3435 ;;      Locals:         1       0       0       0       0       0       0
  3436 ;;      Temps:          0       0       0       0       0       0       0
  3437 ;;      Totals:         1       0       0       0       0       0       0
  3438 ;;Total ram usage:        1 bytes
  3439 ;; Hardware stack levels used: 1
  3440 ;; Hardware stack levels required when called: 1
  3441 ;; This function calls:
  3442 ;;		_scan_key
  3443 ;; This function is called by:
  3444 ;;		_main
  3445 ;; This function uses a non-reentrant model
  3446 ;;
  3447                           
  3448                           	psect	text4
  3449   00273A                     __ptext4:
  3450                           	callstack 0
  3451   00273A                     _read_switches:
  3452                           	callstack 29
  3453                           
  3454                           ;incstack = 0
  3455                           ;read_switches@detection_type stored from wreg
  3456   00273A  6E01               	movwf	read_switches@detection_type^0,c
  3457   00273C                     
  3458                           ;matrix_keypad.c: 99: unsigned char read_switches(unsigned char detection_type);matrix_k
      +                          eypad.c: 100: {;matrix_keypad.c: 101:  static unsigned char once = 1, key;;matrix_keypad
      +                          .c: 103:  if (detection_type == 1)
  3459   00273C  0401               	decf	read_switches@detection_type^0,w,c
  3460   00273E  A4D8               	btfss	status,2,c
  3461   002740  EFA4  F013         	goto	u2381
  3462   002744  EFA6  F013         	goto	u2380
  3463   002748                     u2381:
  3464   002748  EFCB  F013         	goto	l2920
  3465   00274C                     u2380:
  3466   00274C                     
  3467                           ;matrix_keypad.c: 104:  {;matrix_keypad.c: 105:   key = scan_key();
  3468   00274C  EC47  F011         	call	_scan_key	;wreg free
  3469   002750  0100               	movlb	0	; () banked
  3470   002752  6FEB               	movwf	read_switches@key& (0+255),b
  3471   002754                     
  3472                           ; BSR set to: 0
  3473                           ;matrix_keypad.c: 106:   if(key != 0xFF && once )
  3474   002754  29EB               	incf	read_switches@key& (0+255),w,b
  3475   002756  B4D8               	btfsc	status,2,c
  3476   002758  EFB0  F013         	goto	u2391
  3477   00275C  EFB2  F013         	goto	u2390
  3478   002760                     u2391:
  3479   002760  EFBF  F013         	goto	l2916
  3480   002764                     u2390:
  3481   002764                     
  3482                           ; BSR set to: 0
  3483   002764  5199               	movf	read_switches@once& (0+255),w,b
  3484   002766  B4D8               	btfsc	status,2,c
  3485   002768  EFB8  F013         	goto	u2401
  3486   00276C  EFBA  F013         	goto	u2400
  3487   002770                     u2401:
  3488   002770  EFBF  F013         	goto	l2916
  3489   002774                     u2400:
  3490   002774                     
  3491                           ; BSR set to: 0
  3492                           ;matrix_keypad.c: 107:   {;matrix_keypad.c: 108:    once = 0;
  3493   002774  0E00               	movlw	0
  3494   002776  6F99               	movwf	read_switches@once& (0+255),b
  3495                           
  3496                           ;matrix_keypad.c: 109:    return key;
  3497   002778  51EB               	movf	read_switches@key& (0+255),w,b
  3498   00277A  EFD8  F013         	goto	l230
  3499   00277E                     l2916:
  3500                           
  3501                           ; BSR set to: 0
  3502   00277E  29EB               	incf	read_switches@key& (0+255),w,b
  3503   002780  A4D8               	btfss	status,2,c
  3504   002782  EFC5  F013         	goto	u2411
  3505   002786  EFC7  F013         	goto	u2410
  3506   00278A                     u2411:
  3507   00278A  EFD7  F013         	goto	l2926
  3508   00278E                     u2410:
  3509   00278E                     
  3510                           ; BSR set to: 0
  3511                           ;matrix_keypad.c: 112:   {;matrix_keypad.c: 113:    once = 1;
  3512   00278E  0E01               	movlw	1
  3513   002790  6F99               	movwf	read_switches@once& (0+255),b
  3514   002792  EFD7  F013         	goto	l2926
  3515   002796                     l2920:
  3516   002796  5001               	movf	read_switches@detection_type^0,w,c
  3517   002798  A4D8               	btfss	status,2,c
  3518   00279A  EFD1  F013         	goto	u2421
  3519   00279E  EFD3  F013         	goto	u2420
  3520   0027A2                     u2421:
  3521   0027A2  EFD7  F013         	goto	l2926
  3522   0027A6                     u2420:
  3523   0027A6                     
  3524                           ;matrix_keypad.c: 117:  {;matrix_keypad.c: 118:   return scan_key();
  3525   0027A6  EC47  F011         	call	_scan_key	;wreg free
  3526   0027AA  EFD8  F013         	goto	l230
  3527   0027AE                     l2926:
  3528                           
  3529                           ;matrix_keypad.c: 121:  return 0xFF;
  3530   0027AE  0EFF               	movlw	255
  3531   0027B0                     l230:
  3532   0027B0  0012               	return		;funcret
  3533   0027B2                     __end_of_read_switches:
  3534                           	callstack 0
  3535                           
  3536 ;; *************** function _scan_key *****************
  3537 ;; Defined at:
  3538 ;;		line 26 in file "matrix_keypad.c"
  3539 ;; Parameters:    Size  Location     Type
  3540 ;;		None
  3541 ;; Auto vars:     Size  Location     Type
  3542 ;;		None
  3543 ;; Return value:  Size  Location     Type
  3544 ;;                  1    wreg      unsigned char 
  3545 ;; Registers used:
  3546 ;;		wreg
  3547 ;; Tracked objects:
  3548 ;;		On entry : 0/0
  3549 ;;		On exit  : 0/0
  3550 ;;		Unchanged: 0/0
  3551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3552 ;;      Params:         0       0       0       0       0       0       0
  3553 ;;      Locals:         0       0       0       0       0       0       0
  3554 ;;      Temps:          0       0       0       0       0       0       0
  3555 ;;      Totals:         0       0       0       0       0       0       0
  3556 ;;Total ram usage:        0 bytes
  3557 ;; Hardware stack levels used: 1
  3558 ;; This function calls:
  3559 ;;		Nothing
  3560 ;; This function is called by:
  3561 ;;		_read_switches
  3562 ;; This function uses a non-reentrant model
  3563 ;;
  3564                           
  3565                           	psect	text5
  3566   00228E                     __ptext5:
  3567                           	callstack 0
  3568   00228E                     _scan_key:
  3569                           	callstack 29
  3570   00228E                     
  3571                           ;matrix_keypad.c: 29:  PORTBbits.RB5 = 0;
  3572   00228E  9A81               	bcf	129,5,c	;volatile
  3573                           
  3574                           ;matrix_keypad.c: 30:  PORTBbits.RB6 = 1;
  3575   002290  8C81               	bsf	129,6,c	;volatile
  3576                           
  3577                           ;matrix_keypad.c: 31:  PORTBbits.RB7 = 1;
  3578   002292  8E81               	bsf	129,7,c	;volatile
  3579                           
  3580                           ;matrix_keypad.c: 33:  if (PORTBbits.RB1 == 0)
  3581   002294  B281               	btfsc	129,1,c	;volatile
  3582   002296  EF4F  F011         	goto	u2071
  3583   00229A  EF51  F011         	goto	u2070
  3584   00229E                     u2071:
  3585   00229E  EF54  F011         	goto	l200
  3586   0022A2                     u2070:
  3587   0022A2                     
  3588                           ;matrix_keypad.c: 34:  {;matrix_keypad.c: 35:   return 1;
  3589   0022A2  0E01               	movlw	1
  3590   0022A4  EFCA  F011         	goto	l201
  3591   0022A8                     l200:
  3592   0022A8  B481               	btfsc	129,2,c	;volatile
  3593   0022AA  EF59  F011         	goto	u2081
  3594   0022AE  EF5B  F011         	goto	u2080
  3595   0022B2                     u2081:
  3596   0022B2  EF5E  F011         	goto	l203
  3597   0022B6                     u2080:
  3598   0022B6                     
  3599                           ;matrix_keypad.c: 38:  {;matrix_keypad.c: 39:   return 4;
  3600   0022B6  0E04               	movlw	4
  3601   0022B8  EFCA  F011         	goto	l201
  3602   0022BC                     l203:
  3603   0022BC  B681               	btfsc	129,3,c	;volatile
  3604   0022BE  EF63  F011         	goto	u2091
  3605   0022C2  EF65  F011         	goto	u2090
  3606   0022C6                     u2091:
  3607   0022C6  EF68  F011         	goto	l205
  3608   0022CA                     u2090:
  3609   0022CA                     
  3610                           ;matrix_keypad.c: 42:  {;matrix_keypad.c: 43:   return 7;
  3611   0022CA  0E07               	movlw	7
  3612   0022CC  EFCA  F011         	goto	l201
  3613   0022D0                     l205:
  3614   0022D0  B881               	btfsc	129,4,c	;volatile
  3615   0022D2  EF6D  F011         	goto	u2101
  3616   0022D6  EF6F  F011         	goto	u2100
  3617   0022DA                     u2101:
  3618   0022DA  EF72  F011         	goto	l202
  3619   0022DE                     u2100:
  3620   0022DE                     
  3621                           ;matrix_keypad.c: 46:  {;matrix_keypad.c: 47:   return 10;
  3622   0022DE  0E0A               	movlw	10
  3623   0022E0  EFCA  F011         	goto	l201
  3624   0022E4                     l202:
  3625                           
  3626                           ;matrix_keypad.c: 51:  PORTBbits.RB5 = 1;
  3627   0022E4  8A81               	bsf	129,5,c	;volatile
  3628                           
  3629                           ;matrix_keypad.c: 52:  PORTBbits.RB6 = 0;
  3630   0022E6  9C81               	bcf	129,6,c	;volatile
  3631                           
  3632                           ;matrix_keypad.c: 53:  PORTBbits.RB7 = 1;
  3633   0022E8  8E81               	bsf	129,7,c	;volatile
  3634                           
  3635                           ;matrix_keypad.c: 55:  if (PORTBbits.RB1 == 0)
  3636   0022EA  B281               	btfsc	129,1,c	;volatile
  3637   0022EC  EF7A  F011         	goto	u2111
  3638   0022F0  EF7C  F011         	goto	u2110
  3639   0022F4                     u2111:
  3640   0022F4  EF7F  F011         	goto	l208
  3641   0022F8                     u2110:
  3642   0022F8                     
  3643                           ;matrix_keypad.c: 56:  {;matrix_keypad.c: 57:   return 2;
  3644   0022F8  0E02               	movlw	2
  3645   0022FA  EFCA  F011         	goto	l201
  3646   0022FE                     l208:
  3647   0022FE  B481               	btfsc	129,2,c	;volatile
  3648   002300  EF84  F011         	goto	u2121
  3649   002304  EF86  F011         	goto	u2120
  3650   002308                     u2121:
  3651   002308  EF89  F011         	goto	l210
  3652   00230C                     u2120:
  3653   00230C                     
  3654                           ;matrix_keypad.c: 60:  {;matrix_keypad.c: 61:   return 5;
  3655   00230C  0E05               	movlw	5
  3656   00230E  EFCA  F011         	goto	l201
  3657   002312                     l210:
  3658   002312  B681               	btfsc	129,3,c	;volatile
  3659   002314  EF8E  F011         	goto	u2131
  3660   002318  EF90  F011         	goto	u2130
  3661   00231C                     u2131:
  3662   00231C  EF93  F011         	goto	l212
  3663   002320                     u2130:
  3664   002320                     
  3665                           ;matrix_keypad.c: 64:  {;matrix_keypad.c: 65:   return 8;
  3666   002320  0E08               	movlw	8
  3667   002322  EFCA  F011         	goto	l201
  3668   002326                     l212:
  3669   002326  B881               	btfsc	129,4,c	;volatile
  3670   002328  EF98  F011         	goto	u2141
  3671   00232C  EF9A  F011         	goto	u2140
  3672   002330                     u2141:
  3673   002330  EF9D  F011         	goto	l209
  3674   002334                     u2140:
  3675   002334                     
  3676                           ;matrix_keypad.c: 68:  {;matrix_keypad.c: 69:   return 11;
  3677   002334  0E0B               	movlw	11
  3678   002336  EFCA  F011         	goto	l201
  3679   00233A                     l209:
  3680                           
  3681                           ;matrix_keypad.c: 73:  PORTBbits.RB5 = 1;
  3682   00233A  8A81               	bsf	129,5,c	;volatile
  3683                           
  3684                           ;matrix_keypad.c: 74:  PORTBbits.RB6 = 1;
  3685   00233C  8C81               	bsf	129,6,c	;volatile
  3686                           
  3687                           ;matrix_keypad.c: 75:  PORTBbits.RB7 = 0;
  3688   00233E  9E81               	bcf	129,7,c	;volatile
  3689                           
  3690                           ;matrix_keypad.c: 77:  PORTBbits.RB7 = 0;
  3691   002340  9E81               	bcf	129,7,c	;volatile
  3692                           
  3693                           ;matrix_keypad.c: 79:  if (PORTBbits.RB1 == 0)
  3694   002342  B281               	btfsc	129,1,c	;volatile
  3695   002344  EFA6  F011         	goto	u2151
  3696   002348  EFA8  F011         	goto	u2150
  3697   00234C                     u2151:
  3698   00234C  EFAB  F011         	goto	l215
  3699   002350                     u2150:
  3700   002350                     
  3701                           ;matrix_keypad.c: 80:  {;matrix_keypad.c: 81:   return 3;
  3702   002350  0E03               	movlw	3
  3703   002352  EFCA  F011         	goto	l201
  3704   002356                     l215:
  3705   002356  B481               	btfsc	129,2,c	;volatile
  3706   002358  EFB0  F011         	goto	u2161
  3707   00235C  EFB2  F011         	goto	u2160
  3708   002360                     u2161:
  3709   002360  EFB5  F011         	goto	l217
  3710   002364                     u2160:
  3711   002364                     
  3712                           ;matrix_keypad.c: 84:  {;matrix_keypad.c: 85:   return 6;
  3713   002364  0E06               	movlw	6
  3714   002366  EFCA  F011         	goto	l201
  3715   00236A                     l217:
  3716   00236A  B681               	btfsc	129,3,c	;volatile
  3717   00236C  EFBA  F011         	goto	u2171
  3718   002370  EFBC  F011         	goto	u2170
  3719   002374                     u2171:
  3720   002374  EFBF  F011         	goto	l219
  3721   002378                     u2170:
  3722   002378                     
  3723                           ;matrix_keypad.c: 88:  {;matrix_keypad.c: 89:   return 9;
  3724   002378  0E09               	movlw	9
  3725   00237A  EFCA  F011         	goto	l201
  3726   00237E                     l219:
  3727   00237E  B881               	btfsc	129,4,c	;volatile
  3728   002380  EFC4  F011         	goto	u2181
  3729   002384  EFC6  F011         	goto	u2180
  3730   002388                     u2181:
  3731   002388  EFC9  F011         	goto	l218
  3732   00238C                     u2180:
  3733   00238C                     
  3734                           ;matrix_keypad.c: 92:  {;matrix_keypad.c: 93:   return 12;
  3735   00238C  0E0C               	movlw	12
  3736   00238E  EFCA  F011         	goto	l201
  3737   002392                     l218:
  3738   002392                     
  3739                           ;matrix_keypad.c: 96:  return 0xFF;
  3740   002392  0EFF               	movlw	255
  3741   002394                     l201:
  3742   002394  0012               	return		;funcret
  3743   002396                     __end_of_scan_key:
  3744                           	callstack 0
  3745                           
  3746 ;; *************** function _read_adc *****************
  3747 ;; Defined at:
  3748 ;;		line 51 in file "adc.c"
  3749 ;; Parameters:    Size  Location     Type
  3750 ;;  channel         1    wreg     unsigned char 
  3751 ;; Auto vars:     Size  Location     Type
  3752 ;;  channel         1    6[COMRAM] unsigned char 
  3753 ;;  reg_val         2    4[COMRAM] unsigned short 
  3754 ;; Return value:  Size  Location     Type
  3755 ;;                  2    0[COMRAM] unsigned short 
  3756 ;; Registers used:
  3757 ;;		wreg, status,2, status,0
  3758 ;; Tracked objects:
  3759 ;;		On entry : 0/0
  3760 ;;		On exit  : 0/0
  3761 ;;		Unchanged: 0/0
  3762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3763 ;;      Params:         2       0       0       0       0       0       0
  3764 ;;      Locals:         3       0       0       0       0       0       0
  3765 ;;      Temps:          2       0       0       0       0       0       0
  3766 ;;      Totals:         7       0       0       0       0       0       0
  3767 ;;Total ram usage:        7 bytes
  3768 ;; Hardware stack levels used: 1
  3769 ;; This function calls:
  3770 ;;		Nothing
  3771 ;; This function is called by:
  3772 ;;		_main
  3773 ;; This function uses a non-reentrant model
  3774 ;;
  3775                           
  3776                           	psect	text6
  3777   002926                     __ptext6:
  3778                           	callstack 0
  3779   002926                     _read_adc:
  3780                           	callstack 30
  3781                           
  3782                           ;incstack = 0
  3783                           ;read_adc@channel stored from wreg
  3784   002926  6E07               	movwf	read_adc@channel^0,c
  3785   002928                     
  3786                           ;adc.c: 51: unsigned short read_adc(unsigned char channel);adc.c: 52: {;adc.c: 53:  unsi
      +                          gned short reg_val;;adc.c: 56:  ADCON0 = (ADCON0 & 0xC3) | (channel << 2);
  3787   002928  C007  F003         	movff	read_adc@channel,??_read_adc
  3788   00292C  90D8               	bcf	status,0,c
  3789   00292E  3603               	rlcf	??_read_adc^0,f,c
  3790   002930  90D8               	bcf	status,0,c
  3791   002932  3603               	rlcf	??_read_adc^0,f,c
  3792   002934  50C2               	movf	194,w,c	;volatile
  3793   002936  0BC3               	andlw	195
  3794   002938  1003               	iorwf	??_read_adc^0,w,c
  3795   00293A  6EC2               	movwf	194,c	;volatile
  3796   00293C                     
  3797                           ;adc.c: 59:  GO = 1;
  3798   00293C  82C2               	bsf	4034,1,c	;volatile
  3799   00293E                     l347:
  3800   00293E  B2C2               	btfsc	4034,1,c	;volatile
  3801   002940  EFA4  F014         	goto	u2371
  3802   002944  EFA6  F014         	goto	u2370
  3803   002948                     u2371:
  3804   002948  EF9F  F014         	goto	l347
  3805   00294C                     u2370:
  3806   00294C                     
  3807                           ;adc.c: 61:  reg_val = (ADRESH << 8) | ADRESL;
  3808   00294C  50C3               	movf	195,w,c	;volatile
  3809   00294E  CFC4 F003          	movff	4036,??_read_adc	;volatile
  3810   002952  6A04               	clrf	(??_read_adc+1)^0,c
  3811   002954  C003  F004         	movff	??_read_adc,??_read_adc+1
  3812   002958  6A03               	clrf	??_read_adc^0,c
  3813   00295A  1003               	iorwf	??_read_adc^0,w,c
  3814   00295C  6E05               	movwf	read_adc@reg_val^0,c
  3815   00295E  5004               	movf	(??_read_adc+1)^0,w,c
  3816   002960  6E06               	movwf	(read_adc@reg_val+1)^0,c
  3817   002962                     
  3818                           ;adc.c: 63:  return reg_val;
  3819   002962  C005  F001         	movff	read_adc@reg_val,?_read_adc
  3820   002966  C006  F002         	movff	read_adc@reg_val+1,?_read_adc+1
  3821   00296A  0012               	return		;funcret
  3822   00296C                     __end_of_read_adc:
  3823                           	callstack 0
  3824                           
  3825 ;; *************** function _puts *****************
  3826 ;; Defined at:
  3827 ;;		line 69 in file "uart.c"
  3828 ;; Parameters:    Size  Location     Type
  3829 ;;  s               2    6[COMRAM] PTR const unsigned char 
  3830 ;;		 -> STR_15(3), STR_14(3), main@download1(18), main@download(180), 
  3831 ;; Auto vars:     Size  Location     Type
  3832 ;;		None
  3833 ;; Return value:  Size  Location     Type
  3834 ;;                  2    6[COMRAM] int 
  3835 ;; Registers used:
  3836 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3837 ;; Tracked objects:
  3838 ;;		On entry : 0/0
  3839 ;;		On exit  : 0/0
  3840 ;;		Unchanged: 0/0
  3841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3842 ;;      Params:         2       0       0       0       0       0       0
  3843 ;;      Locals:         0       0       0       0       0       0       0
  3844 ;;      Temps:          0       0       0       0       0       0       0
  3845 ;;      Totals:         2       0       0       0       0       0       0
  3846 ;;Total ram usage:        2 bytes
  3847 ;; Hardware stack levels used: 1
  3848 ;; Hardware stack levels required when called: 1
  3849 ;; This function calls:
  3850 ;;		_putch
  3851 ;; This function is called by:
  3852 ;;		_main
  3853 ;; This function uses a non-reentrant model
  3854 ;;
  3855                           
  3856                           	psect	text7
  3857   002880                     __ptext7:
  3858                           	callstack 0
  3859   002880                     _puts:
  3860                           	callstack 29
  3861   002880                     
  3862                           ;uart.c: 69: int puts(const char *s);uart.c: 70: {;uart.c: 71:  while(*s)
  3863   002880  EF56  F014         	goto	l3202
  3864   002884                     l3198:
  3865                           
  3866                           ;uart.c: 72:  {;uart.c: 73:   putch(*s++);
  3867   002884  C007  FFF6         	movff	puts@s,tblptrl
  3868   002888  C008  FFF7         	movff	puts@s+1,tblptrh
  3869   00288C  6AF8               	clrf	tblptru,c
  3870   00288E  0E05               	movlw	(high __ramtop+-1)
  3871   002890  64F7               	cpfsgt	tblptrh,c
  3872   002892  D003               	bra	u3117
  3873   002894  0008               	tblrd		*
  3874   002896  50F5               	movf	tablat,w,c
  3875   002898  D005               	bra	u3110
  3876   00289A                     u3117:
  3877   00289A  CFF6 FFE9          	movff	tblptrl,fsr0l
  3878   00289E  CFF7 FFEA          	movff	tblptrh,fsr0h
  3879   0028A2  50EF               	movf	indf0,w,c
  3880   0028A4                     u3110:
  3881   0028A4  EC88  F015         	call	_putch
  3882   0028A8  4A07               	infsnz	puts@s^0,f,c
  3883   0028AA  2A08               	incf	(puts@s+1)^0,f,c
  3884   0028AC                     l3202:
  3885                           
  3886                           ;uart.c: 71:  while(*s)
  3887   0028AC  C007  FFF6         	movff	puts@s,tblptrl
  3888   0028B0  C008  FFF7         	movff	puts@s+1,tblptrh
  3889   0028B4  6AF8               	clrf	tblptru,c
  3890   0028B6  0E05               	movlw	(high __ramtop+-1)
  3891   0028B8  64F7               	cpfsgt	tblptrh,c
  3892   0028BA  D003               	bra	u3127
  3893   0028BC  0008               	tblrd		*
  3894   0028BE  50F5               	movf	tablat,w,c
  3895   0028C0  D005               	bra	u3120
  3896   0028C2                     u3127:
  3897   0028C2  CFF6 FFE9          	movff	tblptrl,fsr0l
  3898   0028C6  CFF7 FFEA          	movff	tblptrh,fsr0h
  3899   0028CA  50EF               	movf	indf0,w,c
  3900   0028CC                     u3120:
  3901   0028CC  0900               	iorlw	0
  3902   0028CE  A4D8               	btfss	status,2,c
  3903   0028D0  EF6C  F014         	goto	u3131
  3904   0028D4  EF6E  F014         	goto	u3130
  3905   0028D8                     u3131:
  3906   0028D8  EF42  F014         	goto	l3198
  3907   0028DC                     u3130:
  3908   0028DC  0012               	return		;funcret
  3909   0028DE                     __end_of_puts:
  3910                           	callstack 0
  3911                           
  3912 ;; *************** function _putch *****************
  3913 ;; Defined at:
  3914 ;;		line 57 in file "uart.c"
  3915 ;; Parameters:    Size  Location     Type
  3916 ;;  byte            1    wreg     unsigned char 
  3917 ;; Auto vars:     Size  Location     Type
  3918 ;;  byte            1    0[COMRAM] unsigned char 
  3919 ;; Return value:  Size  Location     Type
  3920 ;;                  1    wreg      void 
  3921 ;; Registers used:
  3922 ;;		wreg
  3923 ;; Tracked objects:
  3924 ;;		On entry : 0/0
  3925 ;;		On exit  : 0/0
  3926 ;;		Unchanged: 0/0
  3927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3928 ;;      Params:         0       0       0       0       0       0       0
  3929 ;;      Locals:         1       0       0       0       0       0       0
  3930 ;;      Temps:          0       0       0       0       0       0       0
  3931 ;;      Totals:         1       0       0       0       0       0       0
  3932 ;;Total ram usage:        1 bytes
  3933 ;; Hardware stack levels used: 1
  3934 ;; This function calls:
  3935 ;;		Nothing
  3936 ;; This function is called by:
  3937 ;;		_puts
  3938 ;;		_getche
  3939 ;; This function uses a non-reentrant model
  3940 ;;
  3941                           
  3942                           	psect	text8
  3943   002B10                     __ptext8:
  3944                           	callstack 0
  3945   002B10                     _putch:
  3946                           	callstack 29
  3947                           
  3948                           ;incstack = 0
  3949                           ;putch@byte stored from wreg
  3950   002B10  6E01               	movwf	putch@byte^0,c
  3951   002B12                     l566:
  3952                           
  3953                           ;uart.c: 61:  while(!TXIF)
  3954   002B12  A89E               	btfss	3998,4,c	;volatile
  3955   002B14  EF8E  F015         	goto	u2201
  3956   002B18  EF90  F015         	goto	u2200
  3957   002B1C                     u2201:
  3958   002B1C  EF89  F015         	goto	l566
  3959   002B20                     u2200:
  3960   002B20                     
  3961                           ;uart.c: 65:  TXIF = 0;
  3962   002B20  989E               	bcf	3998,4,c	;volatile
  3963   002B22                     
  3964                           ;uart.c: 66:  TXREG = byte;
  3965   002B22  C001  FFAD         	movff	putch@byte,4013	;volatile
  3966   002B26  0012               	return		;funcret
  3967   002B28                     __end_of_putch:
  3968                           	callstack 0
  3969                           
  3970 ;; *************** function _main_menu *****************
  3971 ;; Defined at:
  3972 ;;		line 16 in file "main_menu.c"
  3973 ;; Parameters:    Size  Location     Type
  3974 ;;  key             1    wreg     unsigned char 
  3975 ;; Auto vars:     Size  Location     Type
  3976 ;;  key             1   12[COMRAM] unsigned char 
  3977 ;; Return value:  Size  Location     Type
  3978 ;;                  1    wreg      void 
  3979 ;; Registers used:
  3980 ;;		wreg, status,2, status,0, cstack
  3981 ;; Tracked objects:
  3982 ;;		On entry : 0/0
  3983 ;;		On exit  : 0/0
  3984 ;;		Unchanged: 0/0
  3985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3986 ;;      Params:         0       0       0       0       0       0       0
  3987 ;;      Locals:         1       0       0       0       0       0       0
  3988 ;;      Temps:          2       0       0       0       0       0       0
  3989 ;;      Totals:         3       0       0       0       0       0       0
  3990 ;;Total ram usage:        3 bytes
  3991 ;; Hardware stack levels used: 1
  3992 ;; Hardware stack levels required when called: 3
  3993 ;; This function calls:
  3994 ;;		___awdiv
  3995 ;;		___awmod
  3996 ;;		_write_ds1307
  3997 ;; This function is called by:
  3998 ;;		_main
  3999 ;; This function uses a non-reentrant model
  4000 ;;
  4001                           
  4002                           	psect	text9
  4003   001D78                     __ptext9:
  4004                           	callstack 0
  4005   001D78                     _main_menu:
  4006                           	callstack 27
  4007                           
  4008                           ;incstack = 0
  4009                           ;main_menu@key stored from wreg
  4010   001D78  6E0D               	movwf	main_menu@key^0,c
  4011   001D7A                     
  4012                           ;main_menu.c: 18:     if(key == 11){
  4013   001D7A  0E0B               	movlw	11
  4014   001D7C  180D               	xorwf	main_menu@key^0,w,c
  4015   001D7E  A4D8               	btfss	status,2,c
  4016   001D80  EFC4  F00E         	goto	u2911
  4017   001D84  EFC6  F00E         	goto	u2910
  4018   001D88                     u2911:
  4019   001D88  EF84  F00F         	goto	l3110
  4020   001D8C                     u2910:
  4021   001D8C                     
  4022                           ;main_menu.c: 19:         flag1++;
  4023   001D8C  4A5E               	infsnz	_flag1^0,f,c
  4024   001D8E  2A5F               	incf	(_flag1+1)^0,f,c
  4025   001D90                     
  4026                           ;main_menu.c: 22:         if(flag1 == 4){
  4027   001D90  0E04               	movlw	4
  4028   001D92  185E               	xorwf	_flag1^0,w,c
  4029   001D94  105F               	iorwf	(_flag1+1)^0,w,c
  4030   001D96  A4D8               	btfss	status,2,c
  4031   001D98  EFD0  F00E         	goto	u2921
  4032   001D9C  EFD2  F00E         	goto	u2920
  4033   001DA0                     u2921:
  4034   001DA0  EF61  F00F         	goto	l3102
  4035   001DA4                     u2920:
  4036   001DA4                     
  4037                           ;main_menu.c: 23:             flag1 = 3;
  4038   001DA4  0E00               	movlw	0
  4039   001DA6  6E5F               	movwf	(_flag1+1)^0,c
  4040   001DA8  0E03               	movlw	3
  4041   001DAA  6E5E               	movwf	_flag1^0,c
  4042   001DAC                     
  4043                           ;main_menu.c: 26:             if((flag3 == 2 && star == 1) || (flag3 == 1 && star == 2))
      +                          {
  4044   001DAC  0E02               	movlw	2
  4045   001DAE  185C               	xorwf	_flag3^0,w,c
  4046   001DB0  105D               	iorwf	(_flag3+1)^0,w,c
  4047   001DB2  A4D8               	btfss	status,2,c
  4048   001DB4  EFDE  F00E         	goto	u2931
  4049   001DB8  EFE0  F00E         	goto	u2930
  4050   001DBC                     u2931:
  4051   001DBC  EFE9  F00E         	goto	l3092
  4052   001DC0                     u2930:
  4053   001DC0  045A               	decf	_star^0,w,c
  4054   001DC2  105B               	iorwf	(_star+1)^0,w,c
  4055   001DC4  B4D8               	btfsc	status,2,c
  4056   001DC6  EFE7  F00E         	goto	u2941
  4057   001DCA  EFE9  F00E         	goto	u2940
  4058   001DCE                     u2941:
  4059   001DCE  EFFC  F00E         	goto	l3096
  4060   001DD2                     u2940:
  4061   001DD2                     l3092:
  4062   001DD2  045C               	decf	_flag3^0,w,c
  4063   001DD4  105D               	iorwf	(_flag3+1)^0,w,c
  4064   001DD6  A4D8               	btfss	status,2,c
  4065   001DD8  EFF0  F00E         	goto	u2951
  4066   001DDC  EFF2  F00E         	goto	u2950
  4067   001DE0                     u2951:
  4068   001DE0  EF5D  F00F         	goto	l3100
  4069   001DE4                     u2950:
  4070   001DE4  0E02               	movlw	2
  4071   001DE6  185A               	xorwf	_star^0,w,c
  4072   001DE8  105B               	iorwf	(_star+1)^0,w,c
  4073   001DEA  A4D8               	btfss	status,2,c
  4074   001DEC  EFFA  F00E         	goto	u2961
  4075   001DF0  EFFC  F00E         	goto	u2960
  4076   001DF4                     u2961:
  4077   001DF4  EF5D  F00F         	goto	l3100
  4078   001DF8                     u2960:
  4079   001DF8                     l3096:
  4080                           
  4081                           ;main_menu.c: 27:                 write_ds1307(0x02,((hours/10) << 4) | (hours % 10));
  4082   001DF8  C058  F001         	movff	_hours,___awmod@dividend
  4083   001DFC  C059  F002         	movff	_hours+1,___awmod@dividend+1
  4084   001E00  0E00               	movlw	0
  4085   001E02  6E04               	movwf	(___awmod@divisor+1)^0,c
  4086   001E04  0E0A               	movlw	10
  4087   001E06  6E03               	movwf	___awmod@divisor^0,c
  4088   001E08  ECB0  F012         	call	___awmod	;wreg free
  4089   001E0C  C001  F00B         	movff	?___awmod,??_main_menu
  4090   001E10  C002  F00C         	movff	?___awmod+1,??_main_menu+1
  4091   001E14  C058  F001         	movff	_hours,___awdiv@dividend
  4092   001E18  C059  F002         	movff	_hours+1,___awdiv@dividend+1
  4093   001E1C  0E00               	movlw	0
  4094   001E1E  6E04               	movwf	(___awdiv@divisor+1)^0,c
  4095   001E20  0E0A               	movlw	10
  4096   001E22  6E03               	movwf	___awdiv@divisor^0,c
  4097   001E24  EC4E  F012         	call	___awdiv	;wreg free
  4098   001E28  3801               	swapf	?___awdiv^0,w,c
  4099   001E2A  0BF0               	andlw	240
  4100   001E2C  100B               	iorwf	??_main_menu^0,w,c
  4101   001E2E  6E09               	movwf	write_ds1307@data^0,c
  4102   001E30  0E02               	movlw	2
  4103   001E32  EC6C  F015         	call	_write_ds1307
  4104                           
  4105                           ;main_menu.c: 28:                 write_ds1307(0x01,((min/10) <<4) | (min%10));
  4106   001E36  C056  F001         	movff	_min,___awmod@dividend
  4107   001E3A  C057  F002         	movff	_min+1,___awmod@dividend+1
  4108   001E3E  0E00               	movlw	0
  4109   001E40  6E04               	movwf	(___awmod@divisor+1)^0,c
  4110   001E42  0E0A               	movlw	10
  4111   001E44  6E03               	movwf	___awmod@divisor^0,c
  4112   001E46  ECB0  F012         	call	___awmod	;wreg free
  4113   001E4A  C001  F00B         	movff	?___awmod,??_main_menu
  4114   001E4E  C002  F00C         	movff	?___awmod+1,??_main_menu+1
  4115   001E52  C056  F001         	movff	_min,___awdiv@dividend
  4116   001E56  C057  F002         	movff	_min+1,___awdiv@dividend+1
  4117   001E5A  0E00               	movlw	0
  4118   001E5C  6E04               	movwf	(___awdiv@divisor+1)^0,c
  4119   001E5E  0E0A               	movlw	10
  4120   001E60  6E03               	movwf	___awdiv@divisor^0,c
  4121   001E62  EC4E  F012         	call	___awdiv	;wreg free
  4122   001E66  3801               	swapf	?___awdiv^0,w,c
  4123   001E68  0BF0               	andlw	240
  4124   001E6A  100B               	iorwf	??_main_menu^0,w,c
  4125   001E6C  6E09               	movwf	write_ds1307@data^0,c
  4126   001E6E  0E01               	movlw	1
  4127   001E70  EC6C  F015         	call	_write_ds1307
  4128                           
  4129                           ;main_menu.c: 29:                 write_ds1307(0x00,((sec/10) <<4) | (sec%10) );
  4130   001E74  C054  F001         	movff	_sec,___awmod@dividend
  4131   001E78  C055  F002         	movff	_sec+1,___awmod@dividend+1
  4132   001E7C  0E00               	movlw	0
  4133   001E7E  6E04               	movwf	(___awmod@divisor+1)^0,c
  4134   001E80  0E0A               	movlw	10
  4135   001E82  6E03               	movwf	___awmod@divisor^0,c
  4136   001E84  ECB0  F012         	call	___awmod	;wreg free
  4137   001E88  C001  F00B         	movff	?___awmod,??_main_menu
  4138   001E8C  C002  F00C         	movff	?___awmod+1,??_main_menu+1
  4139   001E90  C054  F001         	movff	_sec,___awdiv@dividend
  4140   001E94  C055  F002         	movff	_sec+1,___awdiv@dividend+1
  4141   001E98  0E00               	movlw	0
  4142   001E9A  6E04               	movwf	(___awdiv@divisor+1)^0,c
  4143   001E9C  0E0A               	movlw	10
  4144   001E9E  6E03               	movwf	___awdiv@divisor^0,c
  4145   001EA0  EC4E  F012         	call	___awdiv	;wreg free
  4146   001EA4  3801               	swapf	?___awdiv^0,w,c
  4147   001EA6  0BF0               	andlw	240
  4148   001EA8  100B               	iorwf	??_main_menu^0,w,c
  4149   001EAA  6E09               	movwf	write_ds1307@data^0,c
  4150   001EAC  0E00               	movlw	0
  4151   001EAE  EC6C  F015         	call	_write_ds1307
  4152   001EB2                     
  4153                           ;main_menu.c: 30:                 flag1 = 1;
  4154   001EB2  0E00               	movlw	0
  4155   001EB4  6E5F               	movwf	(_flag1+1)^0,c
  4156   001EB6  0E01               	movlw	1
  4157   001EB8  6E5E               	movwf	_flag1^0,c
  4158   001EBA                     l3100:
  4159   001EBA  0E00               	movlw	0
  4160   001EBC  6E5B               	movwf	(_star+1)^0,c
  4161   001EBE  0E01               	movlw	1
  4162   001EC0  6E5A               	movwf	_star^0,c
  4163   001EC2                     l3102:
  4164                           
  4165                           ;main_menu.c: 35:         if(flag3 == 2 && star == 2 && flag1 == 3){
  4166   001EC2  0E02               	movlw	2
  4167   001EC4  185C               	xorwf	_flag3^0,w,c
  4168   001EC6  105D               	iorwf	(_flag3+1)^0,w,c
  4169   001EC8  A4D8               	btfss	status,2,c
  4170   001ECA  EF69  F00F         	goto	u2971
  4171   001ECE  EF6B  F00F         	goto	u2970
  4172   001ED2                     u2971:
  4173   001ED2  EF84  F00F         	goto	l3110
  4174   001ED6                     u2970:
  4175   001ED6  0E02               	movlw	2
  4176   001ED8  185A               	xorwf	_star^0,w,c
  4177   001EDA  105B               	iorwf	(_star+1)^0,w,c
  4178   001EDC  A4D8               	btfss	status,2,c
  4179   001EDE  EF73  F00F         	goto	u2981
  4180   001EE2  EF75  F00F         	goto	u2980
  4181   001EE6                     u2981:
  4182   001EE6  EF84  F00F         	goto	l3110
  4183   001EEA                     u2980:
  4184   001EEA  0E03               	movlw	3
  4185   001EEC  185E               	xorwf	_flag1^0,w,c
  4186   001EEE  105F               	iorwf	(_flag1+1)^0,w,c
  4187   001EF0  A4D8               	btfss	status,2,c
  4188   001EF2  EF7D  F00F         	goto	u2991
  4189   001EF6  EF7F  F00F         	goto	u2990
  4190   001EFA                     u2991:
  4191   001EFA  EF84  F00F         	goto	l3110
  4192   001EFE                     u2990:
  4193   001EFE                     
  4194                           ;main_menu.c: 36:             storing_data = 0;
  4195   001EFE  0E00               	movlw	0
  4196   001F00  0100               	movlb	0	; () banked
  4197   001F02  6FE2               	movwf	(_storing_data+1)& (0+255),b
  4198   001F04  0E00               	movlw	0
  4199   001F06  6FE1               	movwf	_storing_data& (0+255),b
  4200   001F08                     l3110:
  4201                           
  4202                           ;main_menu.c: 40:     if(key == 12){
  4203   001F08  0E0C               	movlw	12
  4204   001F0A  180D               	xorwf	main_menu@key^0,w,c
  4205   001F0C  A4D8               	btfss	status,2,c
  4206   001F0E  EF8B  F00F         	goto	u3001
  4207   001F12  EF8D  F00F         	goto	u3000
  4208   001F16                     u3001:
  4209   001F16  EFB3  F00F         	goto	l407
  4210   001F1A                     u3000:
  4211   001F1A                     
  4212                           ;main_menu.c: 41:         if(stop == 1){
  4213   001F1A  0100               	movlb	0	; () banked
  4214   001F1C  0593               	decf	_stop& (0+255),w,b
  4215   001F1E  1194               	iorwf	(_stop+1)& (0+255),w,b
  4216   001F20  A4D8               	btfss	status,2,c
  4217   001F22  EF95  F00F         	goto	u3011
  4218   001F26  EF97  F00F         	goto	u3010
  4219   001F2A                     u3011:
  4220   001F2A  EFB3  F00F         	goto	l407
  4221   001F2E                     u3010:
  4222   001F2E                     
  4223                           ; BSR set to: 0
  4224                           ;main_menu.c: 42:         flag1--;
  4225   001F2E  065E               	decf	_flag1^0,f,c
  4226   001F30  A0D8               	btfss	status,0,c
  4227   001F32  065F               	decf	(_flag1+1)^0,f,c
  4228   001F34                     
  4229                           ; BSR set to: 0
  4230                           ;main_menu.c: 43:         star = 1;
  4231   001F34  0E00               	movlw	0
  4232   001F36  6E5B               	movwf	(_star+1)^0,c
  4233   001F38  0E01               	movlw	1
  4234   001F3A  6E5A               	movwf	_star^0,c
  4235   001F3C                     
  4236                           ; BSR set to: 0
  4237                           ;main_menu.c: 44:         flag3 =1;
  4238   001F3C  0E00               	movlw	0
  4239   001F3E  6E5D               	movwf	(_flag3+1)^0,c
  4240   001F40  0E01               	movlw	1
  4241   001F42  6E5C               	movwf	_flag3^0,c
  4242   001F44                     
  4243                           ; BSR set to: 0
  4244                           ;main_menu.c: 45:         storing_data = 0;
  4245   001F44  0E00               	movlw	0
  4246   001F46  6FE2               	movwf	(_storing_data+1)& (0+255),b
  4247   001F48  0E00               	movlw	0
  4248   001F4A  6FE1               	movwf	_storing_data& (0+255),b
  4249   001F4C                     
  4250                           ; BSR set to: 0
  4251                           ;main_menu.c: 48:         if(flag1 == 0){
  4252   001F4C  505E               	movf	_flag1^0,w,c
  4253   001F4E  105F               	iorwf	(_flag1+1)^0,w,c
  4254   001F50  A4D8               	btfss	status,2,c
  4255   001F52  EFAD  F00F         	goto	u3021
  4256   001F56  EFAF  F00F         	goto	u3020
  4257   001F5A                     u3021:
  4258   001F5A  EFB3  F00F         	goto	l407
  4259   001F5E                     u3020:
  4260   001F5E                     
  4261                           ; BSR set to: 0
  4262                           ;main_menu.c: 49:             flag1 = 1;
  4263   001F5E  0E00               	movlw	0
  4264   001F60  6E5F               	movwf	(_flag1+1)^0,c
  4265   001F62  0E01               	movlw	1
  4266   001F64  6E5E               	movwf	_flag1^0,c
  4267   001F66                     l407:
  4268   001F66  0012               	return		;funcret
  4269   001F68                     __end_of_main_menu:
  4270                           	callstack 0
  4271                           
  4272 ;; *************** function ___awmod *****************
  4273 ;; Defined at:
  4274 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
  4275 ;; Parameters:    Size  Location     Type
  4276 ;;  dividend        2    0[COMRAM] int 
  4277 ;;  divisor         2    2[COMRAM] int 
  4278 ;; Auto vars:     Size  Location     Type
  4279 ;;  sign            1    5[COMRAM] unsigned char 
  4280 ;;  counter         1    4[COMRAM] unsigned char 
  4281 ;; Return value:  Size  Location     Type
  4282 ;;                  2    0[COMRAM] int 
  4283 ;; Registers used:
  4284 ;;		wreg, status,2, status,0
  4285 ;; Tracked objects:
  4286 ;;		On entry : 0/0
  4287 ;;		On exit  : 0/0
  4288 ;;		Unchanged: 0/0
  4289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4290 ;;      Params:         4       0       0       0       0       0       0
  4291 ;;      Locals:         2       0       0       0       0       0       0
  4292 ;;      Temps:          0       0       0       0       0       0       0
  4293 ;;      Totals:         6       0       0       0       0       0       0
  4294 ;;Total ram usage:        6 bytes
  4295 ;; Hardware stack levels used: 1
  4296 ;; This function calls:
  4297 ;;		Nothing
  4298 ;; This function is called by:
  4299 ;;		_main
  4300 ;;		_main_menu
  4301 ;; This function uses a non-reentrant model
  4302 ;;
  4303                           
  4304                           	psect	text10
  4305   002560                     __ptext10:
  4306                           	callstack 0
  4307   002560                     ___awmod:
  4308                           	callstack 29
  4309   002560  0E00               	movlw	0
  4310   002562  6E06               	movwf	___awmod@sign^0,c
  4311   002564  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  4312   002566  EFB9  F012         	goto	u2270
  4313   00256A  EFB7  F012         	goto	u2271
  4314   00256E                     u2271:
  4315   00256E  EFBF  F012         	goto	l2828
  4316   002572                     u2270:
  4317   002572  6C01               	negf	___awmod@dividend^0,c
  4318   002574  1E02               	comf	(___awmod@dividend+1)^0,f,c
  4319   002576  B0D8               	btfsc	status,0,c
  4320   002578  2A02               	incf	(___awmod@dividend+1)^0,f,c
  4321   00257A  0E01               	movlw	1
  4322   00257C  6E06               	movwf	___awmod@sign^0,c
  4323   00257E                     l2828:
  4324   00257E  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  4325   002580  EFC6  F012         	goto	u2280
  4326   002584  EFC4  F012         	goto	u2281
  4327   002588                     u2281:
  4328   002588  EFCA  F012         	goto	l2832
  4329   00258C                     u2280:
  4330   00258C  6C03               	negf	___awmod@divisor^0,c
  4331   00258E  1E04               	comf	(___awmod@divisor+1)^0,f,c
  4332   002590  B0D8               	btfsc	status,0,c
  4333   002592  2A04               	incf	(___awmod@divisor+1)^0,f,c
  4334   002594                     l2832:
  4335   002594  5003               	movf	___awmod@divisor^0,w,c
  4336   002596  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  4337   002598  B4D8               	btfsc	status,2,c
  4338   00259A  EFD1  F012         	goto	u2291
  4339   00259E  EFD3  F012         	goto	u2290
  4340   0025A2                     u2291:
  4341   0025A2  EFF7  F012         	goto	l2848
  4342   0025A6                     u2290:
  4343   0025A6  0E01               	movlw	1
  4344   0025A8  6E05               	movwf	___awmod@counter^0,c
  4345   0025AA  EFDB  F012         	goto	l2838
  4346   0025AE                     l2836:
  4347   0025AE  90D8               	bcf	status,0,c
  4348   0025B0  3603               	rlcf	___awmod@divisor^0,f,c
  4349   0025B2  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  4350   0025B4  2A05               	incf	___awmod@counter^0,f,c
  4351   0025B6                     l2838:
  4352   0025B6  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  4353   0025B8  EFE0  F012         	goto	u2301
  4354   0025BC  EFE2  F012         	goto	u2300
  4355   0025C0                     u2301:
  4356   0025C0  EFD7  F012         	goto	l2836
  4357   0025C4                     u2300:
  4358   0025C4                     l2840:
  4359   0025C4  5003               	movf	___awmod@divisor^0,w,c
  4360   0025C6  5C01               	subwf	___awmod@dividend^0,w,c
  4361   0025C8  5004               	movf	(___awmod@divisor+1)^0,w,c
  4362   0025CA  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  4363   0025CC  A0D8               	btfss	status,0,c
  4364   0025CE  EFEB  F012         	goto	u2311
  4365   0025D2  EFED  F012         	goto	u2310
  4366   0025D6                     u2311:
  4367   0025D6  EFF1  F012         	goto	l2844
  4368   0025DA                     u2310:
  4369   0025DA  5003               	movf	___awmod@divisor^0,w,c
  4370   0025DC  5E01               	subwf	___awmod@dividend^0,f,c
  4371   0025DE  5004               	movf	(___awmod@divisor+1)^0,w,c
  4372   0025E0  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  4373   0025E2                     l2844:
  4374   0025E2  90D8               	bcf	status,0,c
  4375   0025E4  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  4376   0025E6  3203               	rrcf	___awmod@divisor^0,f,c
  4377   0025E8  2E05               	decfsz	___awmod@counter^0,f,c
  4378   0025EA  EFE2  F012         	goto	l2840
  4379   0025EE                     l2848:
  4380   0025EE  5006               	movf	___awmod@sign^0,w,c
  4381   0025F0  B4D8               	btfsc	status,2,c
  4382   0025F2  EFFD  F012         	goto	u2321
  4383   0025F6  EFFF  F012         	goto	u2320
  4384   0025FA                     u2321:
  4385   0025FA  EF03  F013         	goto	l2852
  4386   0025FE                     u2320:
  4387   0025FE  6C01               	negf	___awmod@dividend^0,c
  4388   002600  1E02               	comf	(___awmod@dividend+1)^0,f,c
  4389   002602  B0D8               	btfsc	status,0,c
  4390   002604  2A02               	incf	(___awmod@dividend+1)^0,f,c
  4391   002606                     l2852:
  4392   002606  C001  F001         	movff	___awmod@dividend,?___awmod
  4393   00260A  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  4394   00260E  0012               	return		;funcret
  4395   002610                     __end_of___awmod:
  4396                           	callstack 0
  4397                           
  4398 ;; *************** function ___awdiv *****************
  4399 ;; Defined at:
  4400 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
  4401 ;; Parameters:    Size  Location     Type
  4402 ;;  dividend        2    0[COMRAM] int 
  4403 ;;  divisor         2    2[COMRAM] int 
  4404 ;; Auto vars:     Size  Location     Type
  4405 ;;  quotient        2    6[COMRAM] int 
  4406 ;;  sign            1    5[COMRAM] unsigned char 
  4407 ;;  counter         1    4[COMRAM] unsigned char 
  4408 ;; Return value:  Size  Location     Type
  4409 ;;                  2    0[COMRAM] int 
  4410 ;; Registers used:
  4411 ;;		wreg, status,2, status,0
  4412 ;; Tracked objects:
  4413 ;;		On entry : 0/0
  4414 ;;		On exit  : 0/0
  4415 ;;		Unchanged: 0/0
  4416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4417 ;;      Params:         4       0       0       0       0       0       0
  4418 ;;      Locals:         4       0       0       0       0       0       0
  4419 ;;      Temps:          0       0       0       0       0       0       0
  4420 ;;      Totals:         8       0       0       0       0       0       0
  4421 ;;Total ram usage:        8 bytes
  4422 ;; Hardware stack levels used: 1
  4423 ;; This function calls:
  4424 ;;		Nothing
  4425 ;; This function is called by:
  4426 ;;		_main
  4427 ;;		_main_menu
  4428 ;; This function uses a non-reentrant model
  4429 ;;
  4430                           
  4431                           	psect	text11
  4432   00249C                     __ptext11:
  4433                           	callstack 0
  4434   00249C                     ___awdiv:
  4435                           	callstack 29
  4436   00249C  0E00               	movlw	0
  4437   00249E  6E06               	movwf	___awdiv@sign^0,c
  4438   0024A0  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  4439   0024A2  EF57  F012         	goto	u2210
  4440   0024A6  EF55  F012         	goto	u2211
  4441   0024AA                     u2211:
  4442   0024AA  EF5D  F012         	goto	l2784
  4443   0024AE                     u2210:
  4444   0024AE  6C03               	negf	___awdiv@divisor^0,c
  4445   0024B0  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  4446   0024B2  B0D8               	btfsc	status,0,c
  4447   0024B4  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  4448   0024B6  0E01               	movlw	1
  4449   0024B8  6E06               	movwf	___awdiv@sign^0,c
  4450   0024BA                     l2784:
  4451   0024BA  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  4452   0024BC  EF64  F012         	goto	u2220
  4453   0024C0  EF62  F012         	goto	u2221
  4454   0024C4                     u2221:
  4455   0024C4  EF6A  F012         	goto	l2790
  4456   0024C8                     u2220:
  4457   0024C8  6C01               	negf	___awdiv@dividend^0,c
  4458   0024CA  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  4459   0024CC  B0D8               	btfsc	status,0,c
  4460   0024CE  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  4461   0024D0  0E01               	movlw	1
  4462   0024D2  1A06               	xorwf	___awdiv@sign^0,f,c
  4463   0024D4                     l2790:
  4464   0024D4  0E00               	movlw	0
  4465   0024D6  6E08               	movwf	(___awdiv@quotient+1)^0,c
  4466   0024D8  0E00               	movlw	0
  4467   0024DA  6E07               	movwf	___awdiv@quotient^0,c
  4468   0024DC  5003               	movf	___awdiv@divisor^0,w,c
  4469   0024DE  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  4470   0024E0  B4D8               	btfsc	status,2,c
  4471   0024E2  EF75  F012         	goto	u2231
  4472   0024E6  EF77  F012         	goto	u2230
  4473   0024EA                     u2231:
  4474   0024EA  EF9F  F012         	goto	l2812
  4475   0024EE                     u2230:
  4476   0024EE  0E01               	movlw	1
  4477   0024F0  6E05               	movwf	___awdiv@counter^0,c
  4478   0024F2  EF7F  F012         	goto	l2798
  4479   0024F6                     l2796:
  4480   0024F6  90D8               	bcf	status,0,c
  4481   0024F8  3603               	rlcf	___awdiv@divisor^0,f,c
  4482   0024FA  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  4483   0024FC  2A05               	incf	___awdiv@counter^0,f,c
  4484   0024FE                     l2798:
  4485   0024FE  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  4486   002500  EF84  F012         	goto	u2241
  4487   002504  EF86  F012         	goto	u2240
  4488   002508                     u2241:
  4489   002508  EF7B  F012         	goto	l2796
  4490   00250C                     u2240:
  4491   00250C                     l2800:
  4492   00250C  90D8               	bcf	status,0,c
  4493   00250E  3607               	rlcf	___awdiv@quotient^0,f,c
  4494   002510  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  4495   002512  5003               	movf	___awdiv@divisor^0,w,c
  4496   002514  5C01               	subwf	___awdiv@dividend^0,w,c
  4497   002516  5004               	movf	(___awdiv@divisor+1)^0,w,c
  4498   002518  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  4499   00251A  A0D8               	btfss	status,0,c
  4500   00251C  EF92  F012         	goto	u2251
  4501   002520  EF94  F012         	goto	u2250
  4502   002524                     u2251:
  4503   002524  EF99  F012         	goto	l2808
  4504   002528                     u2250:
  4505   002528  5003               	movf	___awdiv@divisor^0,w,c
  4506   00252A  5E01               	subwf	___awdiv@dividend^0,f,c
  4507   00252C  5004               	movf	(___awdiv@divisor+1)^0,w,c
  4508   00252E  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  4509   002530  8007               	bsf	___awdiv@quotient^0,0,c
  4510   002532                     l2808:
  4511   002532  90D8               	bcf	status,0,c
  4512   002534  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  4513   002536  3203               	rrcf	___awdiv@divisor^0,f,c
  4514   002538  2E05               	decfsz	___awdiv@counter^0,f,c
  4515   00253A  EF86  F012         	goto	l2800
  4516   00253E                     l2812:
  4517   00253E  5006               	movf	___awdiv@sign^0,w,c
  4518   002540  B4D8               	btfsc	status,2,c
  4519   002542  EFA5  F012         	goto	u2261
  4520   002546  EFA7  F012         	goto	u2260
  4521   00254A                     u2261:
  4522   00254A  EFAB  F012         	goto	l2816
  4523   00254E                     u2260:
  4524   00254E  6C07               	negf	___awdiv@quotient^0,c
  4525   002550  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  4526   002552  B0D8               	btfsc	status,0,c
  4527   002554  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  4528   002556                     l2816:
  4529   002556  C007  F001         	movff	___awdiv@quotient,?___awdiv
  4530   00255A  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  4531   00255E  0012               	return		;funcret
  4532   002560                     __end_of___awdiv:
  4533                           	callstack 0
  4534                           
  4535 ;; *************** function _init_config *****************
  4536 ;; Defined at:
  4537 ;;		line 25 in file "main.c"
  4538 ;; Parameters:    Size  Location     Type
  4539 ;;		None
  4540 ;; Auto vars:     Size  Location     Type
  4541 ;;		None
  4542 ;; Return value:  Size  Location     Type
  4543 ;;                  1    wreg      void 
  4544 ;; Registers used:
  4545 ;;		wreg, status,2, status,0, cstack
  4546 ;; Tracked objects:
  4547 ;;		On entry : 0/0
  4548 ;;		On exit  : 0/0
  4549 ;;		Unchanged: 0/0
  4550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4551 ;;      Params:         0       0       0       0       0       0       0
  4552 ;;      Locals:         0       0       0       0       0       0       0
  4553 ;;      Temps:          0       0       0       0       0       0       0
  4554 ;;      Totals:         0       0       0       0       0       0       0
  4555 ;;Total ram usage:        0 bytes
  4556 ;; Hardware stack levels used: 1
  4557 ;; Hardware stack levels required when called: 5
  4558 ;; This function calls:
  4559 ;;		_init_adc
  4560 ;;		_init_clcd
  4561 ;;		_init_ds1307
  4562 ;;		_init_i2c
  4563 ;;		_init_matrix_keypad
  4564 ;;		_init_uart
  4565 ;; This function is called by:
  4566 ;;		_main
  4567 ;; This function uses a non-reentrant model
  4568 ;;
  4569                           
  4570                           	psect	text12
  4571   002AF6                     __ptext12:
  4572                           	callstack 0
  4573   002AF6                     _init_config:
  4574                           	callstack 25
  4575   002AF6                     
  4576                           ;main.c: 27:     init_clcd();
  4577   002AF6  EC08  F013         	call	_init_clcd	;wreg free
  4578   002AFA                     
  4579                           ;main.c: 28:     init_adc();
  4580   002AFA  EC4D  F015         	call	_init_adc	;wreg free
  4581   002AFE                     
  4582                           ;main.c: 29:     init_matrix_keypad();
  4583   002AFE  ECAB  F015         	call	_init_matrix_keypad	;wreg free
  4584                           
  4585                           ;main.c: 30:     init_i2c();
  4586   002B02  ECA0  F015         	call	_init_i2c	;wreg free
  4587   002B06                     
  4588                           ;main.c: 31:     init_ds1307();
  4589   002B06  EC6F  F014         	call	_init_ds1307	;wreg free
  4590   002B0A                     
  4591                           ;main.c: 32:     init_uart();
  4592   002B0A  EC5D  F015         	call	_init_uart	;wreg free
  4593   002B0E  0012               	return		;funcret
  4594   002B10                     __end_of_init_config:
  4595                           	callstack 0
  4596                           
  4597 ;; *************** function _init_uart *****************
  4598 ;; Defined at:
  4599 ;;		line 11 in file "uart.c"
  4600 ;; Parameters:    Size  Location     Type
  4601 ;;		None
  4602 ;; Auto vars:     Size  Location     Type
  4603 ;;		None
  4604 ;; Return value:  Size  Location     Type
  4605 ;;                  1    wreg      void 
  4606 ;; Registers used:
  4607 ;;		wreg, status,2
  4608 ;; Tracked objects:
  4609 ;;		On entry : 0/0
  4610 ;;		On exit  : 0/0
  4611 ;;		Unchanged: 0/0
  4612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4613 ;;      Params:         0       0       0       0       0       0       0
  4614 ;;      Locals:         0       0       0       0       0       0       0
  4615 ;;      Temps:          0       0       0       0       0       0       0
  4616 ;;      Totals:         0       0       0       0       0       0       0
  4617 ;;Total ram usage:        0 bytes
  4618 ;; Hardware stack levels used: 1
  4619 ;; This function calls:
  4620 ;;		Nothing
  4621 ;; This function is called by:
  4622 ;;		_init_config
  4623 ;; This function uses a non-reentrant model
  4624 ;;
  4625                           
  4626                           	psect	text13
  4627   002ABA                     __ptext13:
  4628                           	callstack 0
  4629   002ABA                     _init_uart:
  4630                           	callstack 29
  4631   002ABA                     
  4632                           ;uart.c: 14:  TRISC7 = 1;
  4633   002ABA  8E94               	bsf	3988,7,c	;volatile
  4634                           
  4635                           ;uart.c: 15:  TRISC6 = 0;
  4636   002ABC  9C94               	bcf	3988,6,c	;volatile
  4637                           
  4638                           ;uart.c: 19:  TX9 = 0;
  4639   002ABE  9CAC               	bcf	4012,6,c	;volatile
  4640                           
  4641                           ;uart.c: 21:  TXEN = 1;
  4642   002AC0  8AAC               	bsf	4012,5,c	;volatile
  4643                           
  4644                           ;uart.c: 24:  SYNC = 0;
  4645   002AC2  98AC               	bcf	4012,4,c	;volatile
  4646                           
  4647                           ;uart.c: 26:  SENDB = 0;
  4648   002AC4  96AC               	bcf	4012,3,c	;volatile
  4649                           
  4650                           ;uart.c: 29:  BRGH = 1;
  4651   002AC6  84AC               	bsf	4012,2,c	;volatile
  4652                           
  4653                           ;uart.c: 33:  SPEN = 1;
  4654   002AC8  8EAB               	bsf	4011,7,c	;volatile
  4655                           
  4656                           ;uart.c: 35:  RX9 = 0;
  4657   002ACA  9CAB               	bcf	4011,6,c	;volatile
  4658                           
  4659                           ;uart.c: 37:  CREN = 1;
  4660   002ACC  88AB               	bsf	4011,4,c	;volatile
  4661                           
  4662                           ;uart.c: 42:  BRG16 = 0;
  4663   002ACE  96B8               	bcf	4024,3,c	;volatile
  4664                           
  4665                           ;uart.c: 43:  ABDEN = 0;
  4666   002AD0  90B8               	bcf	4024,0,c	;volatile
  4667   002AD2                     
  4668                           ;uart.c: 47:  SPBRG = 129;
  4669   002AD2  0E81               	movlw	129
  4670   002AD4  6EAF               	movwf	175,c	;volatile
  4671   002AD6  0012               	return		;funcret
  4672   002AD8                     __end_of_init_uart:
  4673                           	callstack 0
  4674                           
  4675 ;; *************** function _init_matrix_keypad *****************
  4676 ;; Defined at:
  4677 ;;		line 12 in file "matrix_keypad.c"
  4678 ;; Parameters:    Size  Location     Type
  4679 ;;		None
  4680 ;; Auto vars:     Size  Location     Type
  4681 ;;		None
  4682 ;; Return value:  Size  Location     Type
  4683 ;;                  1    wreg      void 
  4684 ;; Registers used:
  4685 ;;		wreg, status,2, status,0
  4686 ;; Tracked objects:
  4687 ;;		On entry : 0/0
  4688 ;;		On exit  : 0/0
  4689 ;;		Unchanged: 0/0
  4690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4691 ;;      Params:         0       0       0       0       0       0       0
  4692 ;;      Locals:         0       0       0       0       0       0       0
  4693 ;;      Temps:          0       0       0       0       0       0       0
  4694 ;;      Totals:         0       0       0       0       0       0       0
  4695 ;;Total ram usage:        0 bytes
  4696 ;; Hardware stack levels used: 1
  4697 ;; This function calls:
  4698 ;;		Nothing
  4699 ;; This function is called by:
  4700 ;;		_init_config
  4701 ;; This function uses a non-reentrant model
  4702 ;;
  4703                           
  4704                           	psect	text14
  4705   002B56                     __ptext14:
  4706                           	callstack 0
  4707   002B56                     _init_matrix_keypad:
  4708                           	callstack 29
  4709   002B56                     
  4710                           ;matrix_keypad.c: 15:  ADCON1 = 0x0F;
  4711   002B56  0E0F               	movlw	15
  4712   002B58  6EC1               	movwf	193,c	;volatile
  4713                           
  4714                           ;matrix_keypad.c: 18:  TRISB = 0x1E;
  4715   002B5A  0E1E               	movlw	30
  4716   002B5C  6E93               	movwf	147,c	;volatile
  4717   002B5E                     
  4718                           ;matrix_keypad.c: 21:  RBPU = 0;
  4719   002B5E  9EF1               	bcf	4081,7,c	;volatile
  4720   002B60                     
  4721                           ;matrix_keypad.c: 23:  PORTB = PORTB | 0xE0;
  4722   002B60  5081               	movf	129,w,c	;volatile
  4723   002B62  09E0               	iorlw	224
  4724   002B64  6E81               	movwf	129,c	;volatile
  4725   002B66  0012               	return		;funcret
  4726   002B68                     __end_of_init_matrix_keypad:
  4727                           	callstack 0
  4728                           
  4729 ;; *************** function _init_i2c *****************
  4730 ;; Defined at:
  4731 ;;		line 12 in file "i2c.c"
  4732 ;; Parameters:    Size  Location     Type
  4733 ;;		None
  4734 ;; Auto vars:     Size  Location     Type
  4735 ;;		None
  4736 ;; Return value:  Size  Location     Type
  4737 ;;                  1    wreg      void 
  4738 ;; Registers used:
  4739 ;;		wreg, status,2
  4740 ;; Tracked objects:
  4741 ;;		On entry : 0/0
  4742 ;;		On exit  : 0/0
  4743 ;;		Unchanged: 0/0
  4744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4745 ;;      Params:         0       0       0       0       0       0       0
  4746 ;;      Locals:         0       0       0       0       0       0       0
  4747 ;;      Temps:          0       0       0       0       0       0       0
  4748 ;;      Totals:         0       0       0       0       0       0       0
  4749 ;;Total ram usage:        0 bytes
  4750 ;; Hardware stack levels used: 1
  4751 ;; This function calls:
  4752 ;;		Nothing
  4753 ;; This function is called by:
  4754 ;;		_init_config
  4755 ;; This function uses a non-reentrant model
  4756 ;;
  4757                           
  4758                           	psect	text15
  4759   002B40                     __ptext15:
  4760                           	callstack 0
  4761   002B40                     _init_i2c:
  4762                           	callstack 29
  4763   002B40                     
  4764                           ;i2c.c: 15:  TRISC3 = 1;
  4765   002B40  8694               	bsf	3988,3,c	;volatile
  4766                           
  4767                           ;i2c.c: 16:  TRISC4 = 1;
  4768   002B42  8894               	bsf	3988,4,c	;volatile
  4769   002B44                     
  4770                           ;i2c.c: 18:  SSPCON1 = 0x28;
  4771   002B44  0E28               	movlw	40
  4772   002B46  6EC6               	movwf	198,c	;volatile
  4773                           
  4774                           ;i2c.c: 20:  SSPADD = 0x31;
  4775   002B48  0E31               	movlw	49
  4776   002B4A  6EC8               	movwf	200,c	;volatile
  4777   002B4C                     
  4778                           ;i2c.c: 22:  CKE = 0;
  4779   002B4C  9CC7               	bcf	4039,6,c	;volatile
  4780   002B4E                     
  4781                           ;i2c.c: 24:  SMP = 1;
  4782   002B4E  8EC7               	bsf	4039,7,c	;volatile
  4783   002B50                     
  4784                           ;i2c.c: 26:  SSPIF = 0;
  4785   002B50  969E               	bcf	3998,3,c	;volatile
  4786   002B52                     
  4787                           ;i2c.c: 28:  BCLIF = 0;
  4788   002B52  96A1               	bcf	4001,3,c	;volatile
  4789   002B54  0012               	return		;funcret
  4790   002B56                     __end_of_init_i2c:
  4791                           	callstack 0
  4792                           
  4793 ;; *************** function _init_ds1307 *****************
  4794 ;; Defined at:
  4795 ;;		line 21 in file "ds1307.c"
  4796 ;; Parameters:    Size  Location     Type
  4797 ;;		None
  4798 ;; Auto vars:     Size  Location     Type
  4799 ;;  dummy           1   10[COMRAM] unsigned char 
  4800 ;; Return value:  Size  Location     Type
  4801 ;;                  1    wreg      void 
  4802 ;; Registers used:
  4803 ;;		wreg, status,2, status,0, cstack
  4804 ;; Tracked objects:
  4805 ;;		On entry : 0/0
  4806 ;;		On exit  : 0/0
  4807 ;;		Unchanged: 0/0
  4808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4809 ;;      Params:         0       0       0       0       0       0       0
  4810 ;;      Locals:         1       0       0       0       0       0       0
  4811 ;;      Temps:          0       0       0       0       0       0       0
  4812 ;;      Totals:         1       0       0       0       0       0       0
  4813 ;;Total ram usage:        1 bytes
  4814 ;; Hardware stack levels used: 1
  4815 ;; Hardware stack levels required when called: 4
  4816 ;; This function calls:
  4817 ;;		_read_ds1307
  4818 ;;		_write_ds1307
  4819 ;; This function is called by:
  4820 ;;		_init_config
  4821 ;; This function uses a non-reentrant model
  4822 ;;
  4823                           
  4824                           	psect	text16
  4825   0028DE                     __ptext16:
  4826                           	callstack 0
  4827   0028DE                     _init_ds1307:
  4828                           	callstack 25
  4829   0028DE                     
  4830                           ;ds1307.c: 23:  unsigned char dummy;;ds1307.c: 26:  dummy = read_ds1307(0x00);
  4831   0028DE  0E00               	movlw	0
  4832   0028E0  EC25  F015         	call	_read_ds1307
  4833   0028E4  6E0B               	movwf	init_ds1307@dummy^0,c
  4834   0028E6                     
  4835                           ;ds1307.c: 27:  write_ds1307(0x00, dummy | 0x80);
  4836   0028E6  500B               	movf	init_ds1307@dummy^0,w,c
  4837   0028E8  0980               	iorlw	128
  4838   0028EA  6E09               	movwf	write_ds1307@data^0,c
  4839   0028EC  0E00               	movlw	0
  4840   0028EE  EC6C  F015         	call	_write_ds1307
  4841   0028F2                     
  4842                           ;ds1307.c: 30:  dummy = read_ds1307(0x02);
  4843   0028F2  0E02               	movlw	2
  4844   0028F4  EC25  F015         	call	_read_ds1307
  4845   0028F8  6E0B               	movwf	init_ds1307@dummy^0,c
  4846                           
  4847                           ;ds1307.c: 31:  write_ds1307(0x02, (dummy & 0xB7));
  4848   0028FA  500B               	movf	init_ds1307@dummy^0,w,c
  4849   0028FC  0BB7               	andlw	183
  4850   0028FE  6E09               	movwf	write_ds1307@data^0,c
  4851   002900  0E02               	movlw	2
  4852   002902  EC6C  F015         	call	_write_ds1307
  4853   002906                     
  4854                           ;ds1307.c: 46:  write_ds1307(0x07, 0x93);
  4855   002906  0E93               	movlw	147
  4856   002908  6E09               	movwf	write_ds1307@data^0,c
  4857   00290A  0E07               	movlw	7
  4858   00290C  EC6C  F015         	call	_write_ds1307
  4859   002910                     
  4860                           ;ds1307.c: 49:  dummy = read_ds1307(0x00);
  4861   002910  0E00               	movlw	0
  4862   002912  EC25  F015         	call	_read_ds1307
  4863   002916  6E0B               	movwf	init_ds1307@dummy^0,c
  4864                           
  4865                           ;ds1307.c: 50:  write_ds1307(0x00, dummy & 0x7F);
  4866   002918  500B               	movf	init_ds1307@dummy^0,w,c
  4867   00291A  0B7F               	andlw	127
  4868   00291C  6E09               	movwf	write_ds1307@data^0,c
  4869   00291E  0E00               	movlw	0
  4870   002920  EC6C  F015         	call	_write_ds1307
  4871   002924  0012               	return		;funcret
  4872   002926                     __end_of_init_ds1307:
  4873                           	callstack 0
  4874                           
  4875 ;; *************** function _write_ds1307 *****************
  4876 ;; Defined at:
  4877 ;;		line 54 in file "ds1307.c"
  4878 ;; Parameters:    Size  Location     Type
  4879 ;;  address         1    wreg     unsigned char 
  4880 ;;  data            1    8[COMRAM] unsigned char 
  4881 ;; Auto vars:     Size  Location     Type
  4882 ;;  address         1    9[COMRAM] unsigned char 
  4883 ;; Return value:  Size  Location     Type
  4884 ;;                  1    wreg      void 
  4885 ;; Registers used:
  4886 ;;		wreg, status,2, cstack
  4887 ;; Tracked objects:
  4888 ;;		On entry : 0/0
  4889 ;;		On exit  : 0/0
  4890 ;;		Unchanged: 0/0
  4891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4892 ;;      Params:         1       0       0       0       0       0       0
  4893 ;;      Locals:         1       0       0       0       0       0       0
  4894 ;;      Temps:          0       0       0       0       0       0       0
  4895 ;;      Totals:         2       0       0       0       0       0       0
  4896 ;;Total ram usage:        2 bytes
  4897 ;; Hardware stack levels used: 1
  4898 ;; Hardware stack levels required when called: 2
  4899 ;; This function calls:
  4900 ;;		_i2c_start
  4901 ;;		_i2c_stop
  4902 ;;		_i2c_write
  4903 ;; This function is called by:
  4904 ;;		_main_menu
  4905 ;;		_init_ds1307
  4906 ;; This function uses a non-reentrant model
  4907 ;;
  4908                           
  4909                           	psect	text17
  4910   002AD8                     __ptext17:
  4911                           	callstack 0
  4912   002AD8                     _write_ds1307:
  4913                           	callstack 27
  4914                           
  4915                           ;incstack = 0
  4916                           ;write_ds1307@address stored from wreg
  4917   002AD8  6E0A               	movwf	write_ds1307@address^0,c
  4918   002ADA                     
  4919                           ;ds1307.c: 54: void write_ds1307(unsigned char address, unsigned char data);ds1307.c: 55
      +                          : {;ds1307.c: 56:  i2c_start();
  4920   002ADA  ECCD  F015         	call	_i2c_start	;wreg free
  4921   002ADE                     
  4922                           ;ds1307.c: 57:  i2c_write(0xD0);
  4923   002ADE  0ED0               	movlw	208
  4924   002AE0  ECBD  F015         	call	_i2c_write
  4925   002AE4                     
  4926                           ;ds1307.c: 58:  i2c_write(address);
  4927   002AE4  500A               	movf	write_ds1307@address^0,w,c
  4928   002AE6  ECBD  F015         	call	_i2c_write
  4929   002AEA                     
  4930                           ;ds1307.c: 59:  i2c_write(data);
  4931   002AEA  5009               	movf	write_ds1307@data^0,w,c
  4932   002AEC  ECBD  F015         	call	_i2c_write
  4933   002AF0                     
  4934                           ;ds1307.c: 60:  i2c_stop();
  4935   002AF0  ECC9  F015         	call	_i2c_stop	;wreg free
  4936   002AF4  0012               	return		;funcret
  4937   002AF6                     __end_of_write_ds1307:
  4938                           	callstack 0
  4939                           
  4940 ;; *************** function _init_clcd *****************
  4941 ;; Defined at:
  4942 ;;		line 35 in file "clcd.c"
  4943 ;; Parameters:    Size  Location     Type
  4944 ;;		None
  4945 ;; Auto vars:     Size  Location     Type
  4946 ;;		None
  4947 ;; Return value:  Size  Location     Type
  4948 ;;                  1    wreg      void 
  4949 ;; Registers used:
  4950 ;;		wreg, status,2, status,0, cstack
  4951 ;; Tracked objects:
  4952 ;;		On entry : 0/0
  4953 ;;		On exit  : 0/0
  4954 ;;		Unchanged: 0/0
  4955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4956 ;;      Params:         0       0       0       0       0       0       0
  4957 ;;      Locals:         0       0       0       0       0       0       0
  4958 ;;      Temps:          1       0       0       0       0       0       0
  4959 ;;      Totals:         1       0       0       0       0       0       0
  4960 ;;Total ram usage:        1 bytes
  4961 ;; Hardware stack levels used: 1
  4962 ;; Hardware stack levels required when called: 1
  4963 ;; This function calls:
  4964 ;;		_clcd_write
  4965 ;; This function is called by:
  4966 ;;		_init_config
  4967 ;; This function uses a non-reentrant model
  4968 ;;
  4969                           
  4970                           	psect	text18
  4971   002610                     __ptext18:
  4972                           	callstack 0
  4973   002610                     _init_clcd:
  4974                           	callstack 28
  4975   002610                     
  4976                           ;clcd.c: 38:  TRISD = 0x00;
  4977   002610  0E00               	movlw	0
  4978   002612  6E95               	movwf	149,c	;volatile
  4979   002614                     
  4980                           ;clcd.c: 40:  TRISC = TRISC & 0xF8;
  4981   002614  5094               	movf	148,w,c	;volatile
  4982   002616  0BF8               	andlw	248
  4983   002618  6E94               	movwf	148,c	;volatile
  4984   00261A                     
  4985                           ;clcd.c: 42:  RC0 = 0;
  4986   00261A  9082               	bcf	3970,0,c	;volatile
  4987   00261C                     
  4988                           ;clcd.c: 46:     _delay((unsigned long)((30)*(20000000/4000.0)));
  4989   00261C  0EC3               	movlw	195
  4990   00261E  6E03               	movwf	??_init_clcd^0,c
  4991   002620  0ECD               	movlw	205
  4992   002622                     u4047:
  4993   002622  2EE8               	decfsz	wreg,f,c
  4994   002624  D7FE               	bra	u4047
  4995   002626  2E03               	decfsz	??_init_clcd^0,f,c
  4996   002628  D7FC               	bra	u4047
  4997   00262A  F000               	nop	
  4998   00262C                     
  4999                           ;clcd.c: 49:     clcd_write(0x33, 0 );
  5000   00262C  0E00               	movlw	0
  5001   00262E  6E01               	movwf	clcd_write@control_bit^0,c
  5002   002630  0E33               	movlw	51
  5003   002632  ECF3  F014         	call	_clcd_write
  5004   002636                     
  5005                           ;clcd.c: 50:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  5006   002636  0E1B               	movlw	27
  5007   002638  6E03               	movwf	??_init_clcd^0,c
  5008   00263A  0E9E               	movlw	158
  5009   00263C                     u4057:
  5010   00263C  2EE8               	decfsz	wreg,f,c
  5011   00263E  D7FE               	bra	u4057
  5012   002640  2E03               	decfsz	??_init_clcd^0,f,c
  5013   002642  D7FC               	bra	u4057
  5014   002644  D000               	nop2	
  5015   002646                     
  5016                           ;clcd.c: 51:     clcd_write(0x33, 0 );
  5017   002646  0E00               	movlw	0
  5018   002648  6E01               	movwf	clcd_write@control_bit^0,c
  5019   00264A  0E33               	movlw	51
  5020   00264C  ECF3  F014         	call	_clcd_write
  5021   002650                     
  5022                           ;clcd.c: 52:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  5023   002650  0EA6               	movlw	166
  5024   002652                     u4067:
  5025   002652  2EE8               	decfsz	wreg,f,c
  5026   002654  D7FE               	bra	u4067
  5027   002656  D000               	nop2	
  5028   002658                     
  5029                           ;clcd.c: 53:     clcd_write(0x33, 0 );
  5030   002658  0E00               	movlw	0
  5031   00265A  6E01               	movwf	clcd_write@control_bit^0,c
  5032   00265C  0E33               	movlw	51
  5033   00265E  ECF3  F014         	call	_clcd_write
  5034   002662                     
  5035                           ;clcd.c: 54:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  5036   002662  D000               	nop2		;2 cycle nop
  5037   002664  D000               	nop2		;2 cycle nop
  5038   002666  F000               	nop	
  5039   002668                     
  5040                           ;clcd.c: 56:     clcd_write(0x02, 0);
  5041   002668  0E00               	movlw	0
  5042   00266A  6E01               	movwf	clcd_write@control_bit^0,c
  5043   00266C  0E02               	movlw	2
  5044   00266E  ECF3  F014         	call	_clcd_write
  5045   002672                     
  5046                           ;clcd.c: 57:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  5047   002672  0EA6               	movlw	166
  5048   002674                     u4077:
  5049   002674  2EE8               	decfsz	wreg,f,c
  5050   002676  D7FE               	bra	u4077
  5051   002678  D000               	nop2	
  5052   00267A                     
  5053                           ;clcd.c: 58:     clcd_write(0x38, 0);
  5054   00267A  0E00               	movlw	0
  5055   00267C  6E01               	movwf	clcd_write@control_bit^0,c
  5056   00267E  0E38               	movlw	56
  5057   002680  ECF3  F014         	call	_clcd_write
  5058   002684                     
  5059                           ;clcd.c: 59:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  5060   002684  0EA6               	movlw	166
  5061   002686                     u4087:
  5062   002686  2EE8               	decfsz	wreg,f,c
  5063   002688  D7FE               	bra	u4087
  5064   00268A  D000               	nop2	
  5065   00268C                     
  5066                           ;clcd.c: 60:     clcd_write(0x01, 0);
  5067   00268C  0E00               	movlw	0
  5068   00268E  6E01               	movwf	clcd_write@control_bit^0,c
  5069   002690  0E01               	movlw	1
  5070   002692  ECF3  F014         	call	_clcd_write
  5071   002696                     
  5072                           ;clcd.c: 61:     _delay((unsigned long)((500)*(20000000/4000000.0)));
  5073   002696  0E04               	movlw	4
  5074   002698  6E03               	movwf	??_init_clcd^0,c
  5075   00269A  0E3E               	movlw	62
  5076   00269C                     u4097:
  5077   00269C  2EE8               	decfsz	wreg,f,c
  5078   00269E  D7FE               	bra	u4097
  5079   0026A0  2E03               	decfsz	??_init_clcd^0,f,c
  5080   0026A2  D7FC               	bra	u4097
  5081   0026A4                     
  5082                           ;clcd.c: 62:     clcd_write(0x0C, 0);
  5083   0026A4  0E00               	movlw	0
  5084   0026A6  6E01               	movwf	clcd_write@control_bit^0,c
  5085   0026A8  0E0C               	movlw	12
  5086   0026AA  ECF3  F014         	call	_clcd_write
  5087   0026AE                     
  5088                           ;clcd.c: 63:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  5089   0026AE  0EA6               	movlw	166
  5090   0026B0                     u4107:
  5091   0026B0  2EE8               	decfsz	wreg,f,c
  5092   0026B2  D7FE               	bra	u4107
  5093   0026B4  D000               	nop2	
  5094   0026B6  0012               	return		;funcret
  5095   0026B8                     __end_of_init_clcd:
  5096                           	callstack 0
  5097                           
  5098 ;; *************** function _init_adc *****************
  5099 ;; Defined at:
  5100 ;;		line 12 in file "adc.c"
  5101 ;; Parameters:    Size  Location     Type
  5102 ;;		None
  5103 ;; Auto vars:     Size  Location     Type
  5104 ;;		None
  5105 ;; Return value:  Size  Location     Type
  5106 ;;                  1    wreg      void 
  5107 ;; Registers used:
  5108 ;;		wreg, status,2
  5109 ;; Tracked objects:
  5110 ;;		On entry : 0/0
  5111 ;;		On exit  : 0/0
  5112 ;;		Unchanged: 0/0
  5113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5114 ;;      Params:         0       0       0       0       0       0       0
  5115 ;;      Locals:         0       0       0       0       0       0       0
  5116 ;;      Temps:          0       0       0       0       0       0       0
  5117 ;;      Totals:         0       0       0       0       0       0       0
  5118 ;;Total ram usage:        0 bytes
  5119 ;; Hardware stack levels used: 1
  5120 ;; This function calls:
  5121 ;;		Nothing
  5122 ;; This function is called by:
  5123 ;;		_init_config
  5124 ;; This function uses a non-reentrant model
  5125 ;;
  5126                           
  5127                           	psect	text19
  5128   002A9A                     __ptext19:
  5129                           	callstack 0
  5130   002A9A                     _init_adc:
  5131                           	callstack 29
  5132   002A9A                     
  5133                           ;adc.c: 15:  ADFM = 1;
  5134   002A9A  8EC0               	bsf	4032,7,c	;volatile
  5135                           
  5136                           ;adc.c: 21:  ACQT2 = 1;
  5137   002A9C  8AC0               	bsf	4032,5,c	;volatile
  5138                           
  5139                           ;adc.c: 22:  ACQT1 = 0;
  5140   002A9E  98C0               	bcf	4032,4,c	;volatile
  5141                           
  5142                           ;adc.c: 23:  ACQT0 = 0;
  5143   002AA0  96C0               	bcf	4032,3,c	;volatile
  5144                           
  5145                           ;adc.c: 29:  ADCS0 = 0;
  5146   002AA2  90C0               	bcf	4032,0,c	;volatile
  5147                           
  5148                           ;adc.c: 30:  ADCS1 = 1;
  5149   002AA4  82C0               	bsf	4032,1,c	;volatile
  5150                           
  5151                           ;adc.c: 31:  ADCS2 = 0;
  5152   002AA6  94C0               	bcf	4032,2,c	;volatile
  5153                           
  5154                           ;adc.c: 34:  GODONE = 0;
  5155   002AA8  92C2               	bcf	4034,1,c	;volatile
  5156                           
  5157                           ;adc.c: 39:  VCFG1 = 0;
  5158   002AAA  9AC1               	bcf	4033,5,c	;volatile
  5159                           
  5160                           ;adc.c: 41:  VCFG0 = 0;
  5161   002AAC  98C1               	bcf	4033,4,c	;volatile
  5162   002AAE                     
  5163                           ;adc.c: 44:  ADRESH = 0;
  5164   002AAE  0E00               	movlw	0
  5165   002AB0  6EC4               	movwf	196,c	;volatile
  5166                           
  5167                           ;adc.c: 45:  ADRESL = 0;
  5168   002AB2  0E00               	movlw	0
  5169   002AB4  6EC3               	movwf	195,c	;volatile
  5170   002AB6                     
  5171                           ;adc.c: 48:  ADON = 1;
  5172   002AB6  80C2               	bsf	4034,0,c	;volatile
  5173   002AB8  0012               	return		;funcret
  5174   002ABA                     __end_of_init_adc:
  5175                           	callstack 0
  5176                           
  5177 ;; *************** function _get_time *****************
  5178 ;; Defined at:
  5179 ;;		line 13 in file "rtc.c"
  5180 ;; Parameters:    Size  Location     Type
  5181 ;;		None
  5182 ;; Auto vars:     Size  Location     Type
  5183 ;;		None
  5184 ;; Return value:  Size  Location     Type
  5185 ;;                  1    wreg      void 
  5186 ;; Registers used:
  5187 ;;		wreg, status,2, status,0, cstack
  5188 ;; Tracked objects:
  5189 ;;		On entry : 0/0
  5190 ;;		On exit  : 0/0
  5191 ;;		Unchanged: 0/0
  5192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5193 ;;      Params:         0       0       0       0       0       0       0
  5194 ;;      Locals:         0       0       0       0       0       0       0
  5195 ;;      Temps:          0       0       0       0       0       0       0
  5196 ;;      Totals:         0       0       0       0       0       0       0
  5197 ;;Total ram usage:        0 bytes
  5198 ;; Hardware stack levels used: 1
  5199 ;; Hardware stack levels required when called: 4
  5200 ;; This function calls:
  5201 ;;		_read_ds1307
  5202 ;; This function is called by:
  5203 ;;		_main
  5204 ;; This function uses a non-reentrant model
  5205 ;;
  5206                           
  5207                           	psect	text20
  5208   0026B8                     __ptext20:
  5209                           	callstack 0
  5210   0026B8                     _get_time:
  5211                           	callstack 26
  5212   0026B8                     
  5213                           ;rtc.c: 15:  clock_reg[0] = read_ds1307(0x02);
  5214   0026B8  0E02               	movlw	2
  5215   0026BA  EC25  F015         	call	_read_ds1307
  5216   0026BE  0100               	movlb	0	; () banked
  5217   0026C0  6FD8               	movwf	_clock_reg& (0+255),b
  5218                           
  5219                           ;rtc.c: 16:  clock_reg[1] = read_ds1307(0x01);
  5220   0026C2  0E01               	movlw	1
  5221   0026C4  EC25  F015         	call	_read_ds1307
  5222   0026C8  0100               	movlb	0	; () banked
  5223   0026CA  6FD9               	movwf	(_clock_reg+1)& (0+255),b
  5224                           
  5225                           ;rtc.c: 17:  clock_reg[2] = read_ds1307(0x00);
  5226   0026CC  0E00               	movlw	0
  5227   0026CE  EC25  F015         	call	_read_ds1307
  5228   0026D2  0100               	movlb	0	; () banked
  5229   0026D4  6FDA               	movwf	(_clock_reg+2)& (0+255),b
  5230   0026D6                     
  5231                           ; BSR set to: 0
  5232                           ;rtc.c: 19:  if (clock_reg[0] & 0x40)
  5233   0026D6  ADD8               	btfss	_clock_reg& (0+255),6,b
  5234   0026D8  EF70  F013         	goto	u2361
  5235   0026DC  EF72  F013         	goto	u2360
  5236   0026E0                     u2361:
  5237   0026E0  EF7D  F013         	goto	l2882
  5238   0026E4                     u2360:
  5239   0026E4                     
  5240                           ; BSR set to: 0
  5241                           ;rtc.c: 20:  {;rtc.c: 21:   time[0] = '0' + ((clock_reg[0] >> 4) & 0x01);
  5242   0026E4  39D8               	swapf	_clock_reg& (0+255),w,b
  5243   0026E6  0B0F               	andlw	15
  5244   0026E8  0B01               	andlw	1
  5245   0026EA  0F30               	addlw	48
  5246   0026EC  6FCF               	movwf	_time& (0+255),b
  5247                           
  5248                           ;rtc.c: 22:   time[1] = '0' + (clock_reg[0] & 0x0F);
  5249   0026EE  51D8               	movf	_clock_reg& (0+255),w,b
  5250   0026F0  0B0F               	andlw	15
  5251   0026F2  0F30               	addlw	48
  5252   0026F4  6FD0               	movwf	(_time+1)& (0+255),b
  5253                           
  5254                           ;rtc.c: 23:  }
  5255   0026F6  EF86  F013         	goto	l2884
  5256   0026FA                     l2882:
  5257                           
  5258                           ; BSR set to: 0
  5259                           ;rtc.c: 25:  {;rtc.c: 26:   time[0] = '0' + ((clock_reg[0] >> 4) & 0x03);
  5260   0026FA  39D8               	swapf	_clock_reg& (0+255),w,b
  5261   0026FC  0B0F               	andlw	15
  5262   0026FE  0B03               	andlw	3
  5263   002700  0F30               	addlw	48
  5264   002702  6FCF               	movwf	_time& (0+255),b
  5265                           
  5266                           ;rtc.c: 27:   time[1] = '0' + (clock_reg[0] & 0x0F);
  5267   002704  51D8               	movf	_clock_reg& (0+255),w,b
  5268   002706  0B0F               	andlw	15
  5269   002708  0F30               	addlw	48
  5270   00270A  6FD0               	movwf	(_time+1)& (0+255),b
  5271   00270C                     l2884:
  5272                           
  5273                           ; BSR set to: 0
  5274                           ;rtc.c: 29:  time[2] = ':';
  5275   00270C  0E3A               	movlw	58
  5276   00270E  6FD1               	movwf	(_time+2)& (0+255),b
  5277   002710                     
  5278                           ; BSR set to: 0
  5279                           ;rtc.c: 30:  time[3] = '0' + ((clock_reg[1] >> 4) & 0x0F);
  5280   002710  39D9               	swapf	(_clock_reg+1)& (0+255),w,b
  5281   002712  0B0F               	andlw	15
  5282   002714  0B0F               	andlw	15
  5283   002716  0F30               	addlw	48
  5284   002718  6FD2               	movwf	(_time+3)& (0+255),b
  5285   00271A                     
  5286                           ; BSR set to: 0
  5287                           ;rtc.c: 31:  time[4] = '0' + (clock_reg[1] & 0x0F);
  5288   00271A  51D9               	movf	(_clock_reg+1)& (0+255),w,b
  5289   00271C  0B0F               	andlw	15
  5290   00271E  0F30               	addlw	48
  5291   002720  6FD3               	movwf	(_time+4)& (0+255),b
  5292   002722                     
  5293                           ; BSR set to: 0
  5294                           ;rtc.c: 32:  time[5] = ':';
  5295   002722  0E3A               	movlw	58
  5296   002724  6FD4               	movwf	(_time+5)& (0+255),b
  5297                           
  5298                           ;rtc.c: 33:  time[6] = '0' + ((clock_reg[2] >> 4) & 0x0F);
  5299   002726  39DA               	swapf	(_clock_reg+2)& (0+255),w,b
  5300   002728  0B0F               	andlw	15
  5301   00272A  0B0F               	andlw	15
  5302   00272C  0F30               	addlw	48
  5303   00272E  6FD5               	movwf	(_time+6)& (0+255),b
  5304                           
  5305                           ;rtc.c: 34:  time[7] = '0' + (clock_reg[2] & 0x0F);
  5306   002730  51DA               	movf	(_clock_reg+2)& (0+255),w,b
  5307   002732  0B0F               	andlw	15
  5308   002734  0F30               	addlw	48
  5309   002736  6FD6               	movwf	(_time+7)& (0+255),b
  5310   002738                     
  5311                           ; BSR set to: 0
  5312   002738  0012               	return		;funcret
  5313   00273A                     __end_of_get_time:
  5314                           	callstack 0
  5315                           
  5316 ;; *************** function _read_ds1307 *****************
  5317 ;; Defined at:
  5318 ;;		line 63 in file "ds1307.c"
  5319 ;; Parameters:    Size  Location     Type
  5320 ;;  address         1    wreg     unsigned char 
  5321 ;; Auto vars:     Size  Location     Type
  5322 ;;  address         1    1[COMRAM] unsigned char 
  5323 ;;  data            1    2[COMRAM] unsigned char 
  5324 ;; Return value:  Size  Location     Type
  5325 ;;                  1    wreg      unsigned char 
  5326 ;; Registers used:
  5327 ;;		wreg, status,2, cstack
  5328 ;; Tracked objects:
  5329 ;;		On entry : 0/0
  5330 ;;		On exit  : 0/0
  5331 ;;		Unchanged: 0/0
  5332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5333 ;;      Params:         0       0       0       0       0       0       0
  5334 ;;      Locals:         2       0       0       0       0       0       0
  5335 ;;      Temps:          0       0       0       0       0       0       0
  5336 ;;      Totals:         2       0       0       0       0       0       0
  5337 ;;Total ram usage:        2 bytes
  5338 ;; Hardware stack levels used: 1
  5339 ;; Hardware stack levels required when called: 3
  5340 ;; This function calls:
  5341 ;;		_i2c_read
  5342 ;;		_i2c_rep_start
  5343 ;;		_i2c_start
  5344 ;;		_i2c_stop
  5345 ;;		_i2c_write
  5346 ;; This function is called by:
  5347 ;;		_init_ds1307
  5348 ;;		_get_time
  5349 ;; This function uses a non-reentrant model
  5350 ;;
  5351                           
  5352                           	psect	text21
  5353   002A4A                     __ptext21:
  5354                           	callstack 0
  5355   002A4A                     _read_ds1307:
  5356                           	callstack 25
  5357                           
  5358                           ; BSR set to: 0
  5359                           ;incstack = 0
  5360                           ;read_ds1307@address stored from wreg
  5361   002A4A  6E02               	movwf	read_ds1307@address^0,c
  5362   002A4C                     
  5363                           ;ds1307.c: 63: unsigned char read_ds1307(unsigned char address);ds1307.c: 64: {;ds1307.c
      +                          : 65:  unsigned char data;;ds1307.c: 67:  i2c_start();
  5364   002A4C  ECCD  F015         	call	_i2c_start	;wreg free
  5365   002A50                     
  5366                           ;ds1307.c: 68:  i2c_write(0xD0);
  5367   002A50  0ED0               	movlw	208
  5368   002A52  ECBD  F015         	call	_i2c_write
  5369   002A56                     
  5370                           ;ds1307.c: 69:  i2c_write(address);
  5371   002A56  5002               	movf	read_ds1307@address^0,w,c
  5372   002A58  ECBD  F015         	call	_i2c_write
  5373   002A5C                     
  5374                           ;ds1307.c: 70:  i2c_rep_start();
  5375   002A5C  ECD1  F015         	call	_i2c_rep_start	;wreg free
  5376   002A60                     
  5377                           ;ds1307.c: 71:  i2c_write(0xD1);
  5378   002A60  0ED1               	movlw	209
  5379   002A62  ECBD  F015         	call	_i2c_write
  5380                           
  5381                           ;ds1307.c: 72:  data = i2c_read();
  5382   002A66  ECC3  F015         	call	_i2c_read	;wreg free
  5383   002A6A  6E03               	movwf	read_ds1307@data^0,c
  5384   002A6C                     
  5385                           ;ds1307.c: 73:  i2c_stop();
  5386   002A6C  ECC9  F015         	call	_i2c_stop	;wreg free
  5387                           
  5388                           ;ds1307.c: 75:  return data;
  5389   002A70  5003               	movf	read_ds1307@data^0,w,c
  5390   002A72  0012               	return		;funcret
  5391   002A74                     __end_of_read_ds1307:
  5392                           	callstack 0
  5393                           
  5394 ;; *************** function _i2c_write *****************
  5395 ;; Defined at:
  5396 ;;		line 63 in file "i2c.c"
  5397 ;; Parameters:    Size  Location     Type
  5398 ;;  data            1    wreg     unsigned char 
  5399 ;; Auto vars:     Size  Location     Type
  5400 ;;  data            1    0[COMRAM] unsigned char 
  5401 ;; Return value:  Size  Location     Type
  5402 ;;                  1    wreg      void 
  5403 ;; Registers used:
  5404 ;;		wreg, cstack
  5405 ;; Tracked objects:
  5406 ;;		On entry : 0/0
  5407 ;;		On exit  : 0/0
  5408 ;;		Unchanged: 0/0
  5409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5410 ;;      Params:         0       0       0       0       0       0       0
  5411 ;;      Locals:         1       0       0       0       0       0       0
  5412 ;;      Temps:          0       0       0       0       0       0       0
  5413 ;;      Totals:         1       0       0       0       0       0       0
  5414 ;;Total ram usage:        1 bytes
  5415 ;; Hardware stack levels used: 1
  5416 ;; Hardware stack levels required when called: 1
  5417 ;; This function calls:
  5418 ;;		_i2c_idle
  5419 ;; This function is called by:
  5420 ;;		_write_ds1307
  5421 ;;		_read_ds1307
  5422 ;;		_write_external_eeprom
  5423 ;;		_read_external_eeprom
  5424 ;; This function uses a non-reentrant model
  5425 ;;
  5426                           
  5427                           	psect	text22
  5428   002B7A                     __ptext22:
  5429                           	callstack 0
  5430   002B7A                     _i2c_write:
  5431                           	callstack 27
  5432                           
  5433                           ;incstack = 0
  5434                           ;i2c_write@data stored from wreg
  5435   002B7A  6E01               	movwf	i2c_write@data^0,c
  5436   002B7C                     
  5437                           ;i2c.c: 63: void i2c_write(unsigned char data);i2c.c: 64: {;i2c.c: 65:  SSPBUF = data;
  5438   002B7C  C001  FFC9         	movff	i2c_write@data,4041	;volatile
  5439   002B80                     
  5440                           ;i2c.c: 66:  i2c_idle();
  5441   002B80  ECB4  F015         	call	_i2c_idle	;wreg free
  5442   002B84  0012               	return		;funcret
  5443   002B86                     __end_of_i2c_write:
  5444                           	callstack 0
  5445                           
  5446 ;; *************** function _i2c_stop *****************
  5447 ;; Defined at:
  5448 ;;		line 51 in file "i2c.c"
  5449 ;; Parameters:    Size  Location     Type
  5450 ;;		None
  5451 ;; Auto vars:     Size  Location     Type
  5452 ;;		None
  5453 ;; Return value:  Size  Location     Type
  5454 ;;                  1    wreg      void 
  5455 ;; Registers used:
  5456 ;;		cstack
  5457 ;; Tracked objects:
  5458 ;;		On entry : 0/0
  5459 ;;		On exit  : 0/0
  5460 ;;		Unchanged: 0/0
  5461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5462 ;;      Params:         0       0       0       0       0       0       0
  5463 ;;      Locals:         0       0       0       0       0       0       0
  5464 ;;      Temps:          0       0       0       0       0       0       0
  5465 ;;      Totals:         0       0       0       0       0       0       0
  5466 ;;Total ram usage:        0 bytes
  5467 ;; Hardware stack levels used: 1
  5468 ;; Hardware stack levels required when called: 1
  5469 ;; This function calls:
  5470 ;;		_i2c_idle
  5471 ;; This function is called by:
  5472 ;;		_write_ds1307
  5473 ;;		_read_ds1307
  5474 ;;		_write_external_eeprom
  5475 ;;		_read_external_eeprom
  5476 ;; This function uses a non-reentrant model
  5477 ;;
  5478                           
  5479                           	psect	text23
  5480   002B92                     __ptext23:
  5481                           	callstack 0
  5482   002B92                     _i2c_stop:
  5483                           	callstack 27
  5484   002B92                     
  5485                           ;i2c.c: 53:  PEN = 1;
  5486   002B92  84C5               	bsf	4037,2,c	;volatile
  5487   002B94                     
  5488                           ;i2c.c: 54:  i2c_idle();
  5489   002B94  ECB4  F015         	call	_i2c_idle	;wreg free
  5490   002B98  0012               	return		;funcret
  5491   002B9A                     __end_of_i2c_stop:
  5492                           	callstack 0
  5493                           
  5494 ;; *************** function _i2c_start *****************
  5495 ;; Defined at:
  5496 ;;		line 45 in file "i2c.c"
  5497 ;; Parameters:    Size  Location     Type
  5498 ;;		None
  5499 ;; Auto vars:     Size  Location     Type
  5500 ;;		None
  5501 ;; Return value:  Size  Location     Type
  5502 ;;                  1    wreg      void 
  5503 ;; Registers used:
  5504 ;;		cstack
  5505 ;; Tracked objects:
  5506 ;;		On entry : 0/0
  5507 ;;		On exit  : 0/0
  5508 ;;		Unchanged: 0/0
  5509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5510 ;;      Params:         0       0       0       0       0       0       0
  5511 ;;      Locals:         0       0       0       0       0       0       0
  5512 ;;      Temps:          0       0       0       0       0       0       0
  5513 ;;      Totals:         0       0       0       0       0       0       0
  5514 ;;Total ram usage:        0 bytes
  5515 ;; Hardware stack levels used: 1
  5516 ;; Hardware stack levels required when called: 1
  5517 ;; This function calls:
  5518 ;;		_i2c_idle
  5519 ;; This function is called by:
  5520 ;;		_write_ds1307
  5521 ;;		_read_ds1307
  5522 ;;		_write_external_eeprom
  5523 ;;		_read_external_eeprom
  5524 ;; This function uses a non-reentrant model
  5525 ;;
  5526                           
  5527                           	psect	text24
  5528   002B9A                     __ptext24:
  5529                           	callstack 0
  5530   002B9A                     _i2c_start:
  5531                           	callstack 27
  5532   002B9A                     
  5533                           ;i2c.c: 47:  SEN = 1;
  5534   002B9A  80C5               	bsf	4037,0,c	;volatile
  5535   002B9C                     
  5536                           ;i2c.c: 48:  i2c_idle();
  5537   002B9C  ECB4  F015         	call	_i2c_idle	;wreg free
  5538   002BA0  0012               	return		;funcret
  5539   002BA2                     __end_of_i2c_start:
  5540                           	callstack 0
  5541                           
  5542 ;; *************** function _i2c_rep_start *****************
  5543 ;; Defined at:
  5544 ;;		line 57 in file "i2c.c"
  5545 ;; Parameters:    Size  Location     Type
  5546 ;;		None
  5547 ;; Auto vars:     Size  Location     Type
  5548 ;;		None
  5549 ;; Return value:  Size  Location     Type
  5550 ;;                  1    wreg      void 
  5551 ;; Registers used:
  5552 ;;		cstack
  5553 ;; Tracked objects:
  5554 ;;		On entry : 0/0
  5555 ;;		On exit  : 0/0
  5556 ;;		Unchanged: 0/0
  5557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5558 ;;      Params:         0       0       0       0       0       0       0
  5559 ;;      Locals:         0       0       0       0       0       0       0
  5560 ;;      Temps:          0       0       0       0       0       0       0
  5561 ;;      Totals:         0       0       0       0       0       0       0
  5562 ;;Total ram usage:        0 bytes
  5563 ;; Hardware stack levels used: 1
  5564 ;; Hardware stack levels required when called: 1
  5565 ;; This function calls:
  5566 ;;		_i2c_idle
  5567 ;; This function is called by:
  5568 ;;		_read_ds1307
  5569 ;;		_read_external_eeprom
  5570 ;; This function uses a non-reentrant model
  5571 ;;
  5572                           
  5573                           	psect	text25
  5574   002BA2                     __ptext25:
  5575                           	callstack 0
  5576   002BA2                     _i2c_rep_start:
  5577                           	callstack 27
  5578   002BA2                     
  5579                           ;i2c.c: 59:  RSEN = 1;
  5580   002BA2  82C5               	bsf	4037,1,c	;volatile
  5581   002BA4                     
  5582                           ;i2c.c: 60:  i2c_idle();
  5583   002BA4  ECB4  F015         	call	_i2c_idle	;wreg free
  5584   002BA8  0012               	return		;funcret
  5585   002BAA                     __end_of_i2c_rep_start:
  5586                           	callstack 0
  5587                           
  5588 ;; *************** function _i2c_read *****************
  5589 ;; Defined at:
  5590 ;;		line 81 in file "i2c.c"
  5591 ;; Parameters:    Size  Location     Type
  5592 ;;		None
  5593 ;; Auto vars:     Size  Location     Type
  5594 ;;		None
  5595 ;; Return value:  Size  Location     Type
  5596 ;;                  1    wreg      unsigned char 
  5597 ;; Registers used:
  5598 ;;		wreg, status,2, cstack
  5599 ;; Tracked objects:
  5600 ;;		On entry : 0/0
  5601 ;;		On exit  : 0/0
  5602 ;;		Unchanged: 0/0
  5603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5604 ;;      Params:         0       0       0       0       0       0       0
  5605 ;;      Locals:         0       0       0       0       0       0       0
  5606 ;;      Temps:          0       0       0       0       0       0       0
  5607 ;;      Totals:         0       0       0       0       0       0       0
  5608 ;;Total ram usage:        0 bytes
  5609 ;; Hardware stack levels used: 1
  5610 ;; Hardware stack levels required when called: 2
  5611 ;; This function calls:
  5612 ;;		_i2c_no_ack
  5613 ;;		_i2c_rx_mode
  5614 ;; This function is called by:
  5615 ;;		_read_ds1307
  5616 ;;		_read_external_eeprom
  5617 ;; This function uses a non-reentrant model
  5618 ;;
  5619                           
  5620                           	psect	text26
  5621   002B86                     __ptext26:
  5622                           	callstack 0
  5623   002B86                     _i2c_read:
  5624                           	callstack 26
  5625   002B86                     
  5626                           ;i2c.c: 83:  i2c_rx_mode();
  5627   002B86  ECD5  F015         	call	_i2c_rx_mode	;wreg free
  5628                           
  5629                           ;i2c.c: 84:  i2c_no_ack();
  5630   002B8A  ECDC  F015         	call	_i2c_no_ack	;wreg free
  5631   002B8E                     
  5632                           ;i2c.c: 86:  return SSPBUF;
  5633   002B8E  50C9               	movf	201,w,c	;volatile
  5634   002B90  0012               	return		;funcret
  5635   002B92                     __end_of_i2c_read:
  5636                           	callstack 0
  5637                           
  5638 ;; *************** function _i2c_rx_mode *****************
  5639 ;; Defined at:
  5640 ;;		line 69 in file "i2c.c"
  5641 ;; Parameters:    Size  Location     Type
  5642 ;;		None
  5643 ;; Auto vars:     Size  Location     Type
  5644 ;;		None
  5645 ;; Return value:  Size  Location     Type
  5646 ;;                  1    wreg      void 
  5647 ;; Registers used:
  5648 ;;		cstack
  5649 ;; Tracked objects:
  5650 ;;		On entry : 0/0
  5651 ;;		On exit  : 0/0
  5652 ;;		Unchanged: 0/0
  5653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5654 ;;      Params:         0       0       0       0       0       0       0
  5655 ;;      Locals:         0       0       0       0       0       0       0
  5656 ;;      Temps:          0       0       0       0       0       0       0
  5657 ;;      Totals:         0       0       0       0       0       0       0
  5658 ;;Total ram usage:        0 bytes
  5659 ;; Hardware stack levels used: 1
  5660 ;; Hardware stack levels required when called: 1
  5661 ;; This function calls:
  5662 ;;		_i2c_idle
  5663 ;; This function is called by:
  5664 ;;		_i2c_read
  5665 ;; This function uses a non-reentrant model
  5666 ;;
  5667                           
  5668                           	psect	text27
  5669   002BAA                     __ptext27:
  5670                           	callstack 0
  5671   002BAA                     _i2c_rx_mode:
  5672                           	callstack 26
  5673   002BAA                     
  5674                           ;i2c.c: 71:  RCEN = 1;
  5675   002BAA  86C5               	bsf	4037,3,c	;volatile
  5676   002BAC                     
  5677                           ;i2c.c: 72:  i2c_idle();
  5678   002BAC  ECB4  F015         	call	_i2c_idle	;wreg free
  5679   002BB0  0012               	return		;funcret
  5680   002BB2                     __end_of_i2c_rx_mode:
  5681                           	callstack 0
  5682                           
  5683 ;; *************** function _i2c_idle *****************
  5684 ;; Defined at:
  5685 ;;		line 31 in file "i2c.c"
  5686 ;; Parameters:    Size  Location     Type
  5687 ;;		None
  5688 ;; Auto vars:     Size  Location     Type
  5689 ;;		None
  5690 ;; Return value:  Size  Location     Type
  5691 ;;                  1    wreg      void 
  5692 ;; Registers used:
  5693 ;;		None
  5694 ;; Tracked objects:
  5695 ;;		On entry : 0/0
  5696 ;;		On exit  : 0/0
  5697 ;;		Unchanged: 0/0
  5698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5699 ;;      Params:         0       0       0       0       0       0       0
  5700 ;;      Locals:         0       0       0       0       0       0       0
  5701 ;;      Temps:          0       0       0       0       0       0       0
  5702 ;;      Totals:         0       0       0       0       0       0       0
  5703 ;;Total ram usage:        0 bytes
  5704 ;; Hardware stack levels used: 1
  5705 ;; This function calls:
  5706 ;;		Nothing
  5707 ;; This function is called by:
  5708 ;;		_i2c_start
  5709 ;;		_i2c_stop
  5710 ;;		_i2c_rep_start
  5711 ;;		_i2c_write
  5712 ;;		_i2c_rx_mode
  5713 ;; This function uses a non-reentrant model
  5714 ;;
  5715                           
  5716                           	psect	text28
  5717   002B68                     __ptext28:
  5718                           	callstack 0
  5719   002B68                     _i2c_idle:
  5720                           	callstack 27
  5721   002B68                     l468:
  5722   002B68  A69E               	btfss	3998,3,c	;volatile
  5723   002B6A  EFB9  F015         	goto	u2031
  5724   002B6E  EFBB  F015         	goto	u2030
  5725   002B72                     u2031:
  5726   002B72  EFB4  F015         	goto	l468
  5727   002B76                     u2030:
  5728   002B76                     
  5729                           ;i2c.c: 34:  SSPIF = 0;
  5730   002B76  969E               	bcf	3998,3,c	;volatile
  5731   002B78  0012               	return		;funcret
  5732   002B7A                     __end_of_i2c_idle:
  5733                           	callstack 0
  5734                           
  5735 ;; *************** function _i2c_no_ack *****************
  5736 ;; Defined at:
  5737 ;;		line 75 in file "i2c.c"
  5738 ;; Parameters:    Size  Location     Type
  5739 ;;		None
  5740 ;; Auto vars:     Size  Location     Type
  5741 ;;		None
  5742 ;; Return value:  Size  Location     Type
  5743 ;;                  1    wreg      void 
  5744 ;; Registers used:
  5745 ;;		None
  5746 ;; Tracked objects:
  5747 ;;		On entry : 0/0
  5748 ;;		On exit  : 0/0
  5749 ;;		Unchanged: 0/0
  5750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5751 ;;      Params:         0       0       0       0       0       0       0
  5752 ;;      Locals:         0       0       0       0       0       0       0
  5753 ;;      Temps:          0       0       0       0       0       0       0
  5754 ;;      Totals:         0       0       0       0       0       0       0
  5755 ;;Total ram usage:        0 bytes
  5756 ;; Hardware stack levels used: 1
  5757 ;; This function calls:
  5758 ;;		Nothing
  5759 ;; This function is called by:
  5760 ;;		_i2c_read
  5761 ;; This function uses a non-reentrant model
  5762 ;;
  5763                           
  5764                           	psect	text29
  5765   002BB8                     __ptext29:
  5766                           	callstack 0
  5767   002BB8                     _i2c_no_ack:
  5768                           	callstack 27
  5769   002BB8                     
  5770                           ;i2c.c: 77:  ACKDT = 1;
  5771   002BB8  8AC5               	bsf	4037,5,c	;volatile
  5772                           
  5773                           ;i2c.c: 78:  ACKEN = 1;
  5774   002BBA  88C5               	bsf	4037,4,c	;volatile
  5775   002BBC  0012               	return		;funcret
  5776   002BBE                     __end_of_i2c_no_ack:
  5777                           	callstack 0
  5778                           
  5779 ;; *************** function _dash_board *****************
  5780 ;; Defined at:
  5781 ;;		line 14 in file "dash_board.c"
  5782 ;; Parameters:    Size  Location     Type
  5783 ;;  key             1    wreg     unsigned char 
  5784 ;; Auto vars:     Size  Location     Type
  5785 ;;  key             1    1[COMRAM] unsigned char 
  5786 ;; Return value:  Size  Location     Type
  5787 ;;                  1    wreg      void 
  5788 ;; Registers used:
  5789 ;;		wreg, status,2, status,0
  5790 ;; Tracked objects:
  5791 ;;		On entry : 0/0
  5792 ;;		On exit  : 0/0
  5793 ;;		Unchanged: 0/0
  5794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5795 ;;      Params:         0       0       0       0       0       0       0
  5796 ;;      Locals:         1       0       0       0       0       0       0
  5797 ;;      Temps:          1       0       0       0       0       0       0
  5798 ;;      Totals:         2       0       0       0       0       0       0
  5799 ;;Total ram usage:        2 bytes
  5800 ;; Hardware stack levels used: 1
  5801 ;; This function calls:
  5802 ;;		Nothing
  5803 ;; This function is called by:
  5804 ;;		_main
  5805 ;; This function uses a non-reentrant model
  5806 ;;
  5807                           
  5808                           	psect	text30
  5809   0014DE                     __ptext30:
  5810                           	callstack 0
  5811   0014DE                     _dash_board:
  5812                           	callstack 30
  5813                           
  5814                           ;incstack = 0
  5815                           ;dash_board@key stored from wreg
  5816   0014DE  6E02               	movwf	dash_board@key^0,c
  5817   0014E0                     
  5818                           ;dash_board.c: 15:     static int start_dec = 0, flag = 1;;dash_board.c: 17:     if(key 
      +                          == 1 && flag1 == 1){
  5819   0014E0  0402               	decf	dash_board@key^0,w,c
  5820   0014E2  A4D8               	btfss	status,2,c
  5821   0014E4  EF76  F00A         	goto	u2431
  5822   0014E8  EF78  F00A         	goto	u2430
  5823   0014EC                     u2431:
  5824   0014EC  EFCB  F00A         	goto	l2950
  5825   0014F0                     u2430:
  5826   0014F0  045E               	decf	_flag1^0,w,c
  5827   0014F2  105F               	iorwf	(_flag1+1)^0,w,c
  5828   0014F4  A4D8               	btfss	status,2,c
  5829   0014F6  EF7F  F00A         	goto	u2441
  5830   0014FA  EF81  F00A         	goto	u2440
  5831   0014FE                     u2441:
  5832   0014FE  EFCB  F00A         	goto	l2950
  5833   001502                     u2440:
  5834   001502                     
  5835                           ;dash_board.c: 18:         clear = 1;
  5836   001502  0E00               	movlw	0
  5837   001504  0100               	movlb	0	; () banked
  5838   001506  6FE4               	movwf	(_clear+1)& (0+255),b
  5839   001508  0E01               	movlw	1
  5840   00150A  6FE3               	movwf	_clear& (0+255),b
  5841                           
  5842                           ;dash_board.c: 19:         start_dec = 1;
  5843   00150C  0E00               	movlw	0
  5844   00150E  6FDC               	movwf	(dash_board@start_dec+1)& (0+255),b
  5845   001510  0E01               	movlw	1
  5846   001512  6FDB               	movwf	dash_board@start_dec& (0+255),b
  5847   001514                     
  5848                           ; BSR set to: 0
  5849                           ;dash_board.c: 21:         if(flag){
  5850   001514  518D               	movf	dash_board@flag& (0+255),w,b
  5851   001516  118E               	iorwf	(dash_board@flag+1)& (0+255),w,b
  5852   001518  B4D8               	btfsc	status,2,c
  5853   00151A  EF91  F00A         	goto	u2451
  5854   00151E  EF93  F00A         	goto	u2450
  5855   001522                     u2451:
  5856   001522  EFBB  F00A         	goto	l2948
  5857   001526                     u2450:
  5858   001526                     
  5859                           ; BSR set to: 0
  5860                           ;dash_board.c: 22:             count++;
  5861   001526  4BE7               	infsnz	_count& (0+255),f,b
  5862   001528  2BE8               	incf	(_count+1)& (0+255),f,b
  5863   00152A                     
  5864                           ; BSR set to: 0
  5865                           ;dash_board.c: 23:             if(count<=7){
  5866   00152A  BFE8               	btfsc	(_count+1)& (0+255),7,b
  5867   00152C  EFA3  F00A         	goto	u2460
  5868   001530  51E8               	movf	(_count+1)& (0+255),w,b
  5869   001532  E107               	bnz	u2461
  5870   001534  0E08               	movlw	8
  5871   001536  5DE7               	subwf	_count& (0+255),w,b
  5872   001538  B0D8               	btfsc	status,0,c
  5873   00153A  EFA1  F00A         	goto	u2461
  5874   00153E  EFA3  F00A         	goto	u2460
  5875   001542                     u2461:
  5876   001542  EFA7  F00A         	goto	l2944
  5877   001546                     u2460:
  5878   001546                     
  5879                           ; BSR set to: 0
  5880                           ;dash_board.c: 24:                 flag2 =1;
  5881   001546  0E00               	movlw	0
  5882   001548  6FE6               	movwf	(_flag2+1)& (0+255),b
  5883   00154A  0E01               	movlw	1
  5884   00154C  6FE5               	movwf	_flag2& (0+255),b
  5885   00154E                     l2944:
  5886                           
  5887                           ; BSR set to: 0
  5888                           ;dash_board.c: 26:             if(count >= 8){
  5889   00154E  BFE8               	btfsc	(_count+1)& (0+255),7,b
  5890   001550  EFB3  F00A         	goto	u2471
  5891   001554  51E8               	movf	(_count+1)& (0+255),w,b
  5892   001556  E109               	bnz	u2470
  5893   001558  0E08               	movlw	8
  5894   00155A  5DE7               	subwf	_count& (0+255),w,b
  5895   00155C  A0D8               	btfss	status,0,c
  5896   00155E  EFB3  F00A         	goto	u2471
  5897   001562  EFB5  F00A         	goto	u2470
  5898   001566                     u2471:
  5899   001566  EF85  F00B         	goto	l2994
  5900   00156A                     u2470:
  5901   00156A                     
  5902                           ; BSR set to: 0
  5903                           ;dash_board.c: 27:                 count = 7;
  5904   00156A  0E00               	movlw	0
  5905   00156C  6FE8               	movwf	(_count+1)& (0+255),b
  5906   00156E  0E07               	movlw	7
  5907   001570  6FE7               	movwf	_count& (0+255),b
  5908   001572  EF85  F00B         	goto	l2994
  5909   001576                     l2948:
  5910                           
  5911                           ; BSR set to: 0
  5912                           ;dash_board.c: 30:             flag2 = 1;
  5913   001576  0E00               	movlw	0
  5914   001578  6FE6               	movwf	(_flag2+1)& (0+255),b
  5915   00157A  0E01               	movlw	1
  5916   00157C  6FE5               	movwf	_flag2& (0+255),b
  5917                           
  5918                           ;dash_board.c: 31:             flag=1;
  5919   00157E  0E00               	movlw	0
  5920   001580  6F8E               	movwf	(dash_board@flag+1)& (0+255),b
  5921   001582  0E01               	movlw	1
  5922   001584  6F8D               	movwf	dash_board@flag& (0+255),b
  5923                           
  5924                           ;dash_board.c: 32:             count = 1;
  5925   001586  0E00               	movlw	0
  5926   001588  6FE8               	movwf	(_count+1)& (0+255),b
  5927   00158A  0E01               	movlw	1
  5928   00158C  6FE7               	movwf	_count& (0+255),b
  5929   00158E  EF85  F00B         	goto	l2994
  5930   001592                     l269:
  5931                           
  5932                           ; BSR set to: 0
  5933                           ;dash_board.c: 34:     }else if(key == 1 && flag1 == 3){
  5934   001592  EF85  F00B         	goto	l2994
  5935   001596                     l2950:
  5936   001596  0402               	decf	dash_board@key^0,w,c
  5937   001598  A4D8               	btfss	status,2,c
  5938   00159A  EFD1  F00A         	goto	u2481
  5939   00159E  EFD3  F00A         	goto	u2480
  5940   0015A2                     u2481:
  5941   0015A2  EF85  F00B         	goto	l2994
  5942   0015A6                     u2480:
  5943   0015A6  0E03               	movlw	3
  5944   0015A8  185E               	xorwf	_flag1^0,w,c
  5945   0015AA  105F               	iorwf	(_flag1+1)^0,w,c
  5946   0015AC  A4D8               	btfss	status,2,c
  5947   0015AE  EFDB  F00A         	goto	u2491
  5948   0015B2  EFDD  F00A         	goto	u2490
  5949   0015B6                     u2491:
  5950   0015B6  EF85  F00B         	goto	l2994
  5951   0015BA                     u2490:
  5952   0015BA                     
  5953                           ;dash_board.c: 35:         if(star == 1 && flag3 == 1){
  5954   0015BA  045A               	decf	_star^0,w,c
  5955   0015BC  105B               	iorwf	(_star+1)^0,w,c
  5956   0015BE  A4D8               	btfss	status,2,c
  5957   0015C0  EFE4  F00A         	goto	u2501
  5958   0015C4  EFE6  F00A         	goto	u2500
  5959   0015C8                     u2501:
  5960   0015C8  EF05  F00B         	goto	l2962
  5961   0015CC                     u2500:
  5962   0015CC  045C               	decf	_flag3^0,w,c
  5963   0015CE  105D               	iorwf	(_flag3+1)^0,w,c
  5964   0015D0  A4D8               	btfss	status,2,c
  5965   0015D2  EFED  F00A         	goto	u2511
  5966   0015D6  EFEF  F00A         	goto	u2510
  5967   0015DA                     u2511:
  5968   0015DA  EF05  F00B         	goto	l2962
  5969   0015DE                     u2510:
  5970   0015DE                     
  5971                           ;dash_board.c: 36:             storing_data -= 10;
  5972   0015DE  0100               	movlb	0	; () banked
  5973   0015E0  0EF6               	movlw	246
  5974   0015E2  27E1               	addwf	_storing_data& (0+255),f,b
  5975   0015E4  0EFF               	movlw	255
  5976   0015E6  23E2               	addwfc	(_storing_data+1)& (0+255),f,b
  5977                           
  5978                           ;dash_board.c: 37:             if(storing_data <= 0){
  5979   0015E8  BFE2               	btfsc	(_storing_data+1)& (0+255),7,b
  5980   0015EA  EF01  F00B         	goto	u2520
  5981   0015EE  51E2               	movf	(_storing_data+1)& (0+255),w,b
  5982   0015F0  E106               	bnz	u2521
  5983   0015F2  05E1               	decf	_storing_data& (0+255),w,b
  5984   0015F4  B0D8               	btfsc	status,0,c
  5985   0015F6  EFFF  F00A         	goto	u2521
  5986   0015FA  EF01  F00B         	goto	u2520
  5987   0015FE                     u2521:
  5988   0015FE  EF05  F00B         	goto	l2962
  5989   001602                     u2520:
  5990   001602                     
  5991                           ; BSR set to: 0
  5992                           ;dash_board.c: 38:                 storing_data = 0;
  5993   001602  0E00               	movlw	0
  5994   001604  6FE2               	movwf	(_storing_data+1)& (0+255),b
  5995   001606  0E00               	movlw	0
  5996   001608  6FE1               	movwf	_storing_data& (0+255),b
  5997   00160A                     l2962:
  5998                           
  5999                           ;dash_board.c: 42:         if((flag3 == 2 && star == 1) || (flag3 == 1 && star == 2)){
  6000   00160A  0E02               	movlw	2
  6001   00160C  185C               	xorwf	_flag3^0,w,c
  6002   00160E  105D               	iorwf	(_flag3+1)^0,w,c
  6003   001610  A4D8               	btfss	status,2,c
  6004   001612  EF0D  F00B         	goto	u2531
  6005   001616  EF0F  F00B         	goto	u2530
  6006   00161A                     u2531:
  6007   00161A  EF18  F00B         	goto	l2966
  6008   00161E                     u2530:
  6009   00161E  045A               	decf	_star^0,w,c
  6010   001620  105B               	iorwf	(_star+1)^0,w,c
  6011   001622  B4D8               	btfsc	status,2,c
  6012   001624  EF16  F00B         	goto	u2541
  6013   001628  EF18  F00B         	goto	u2540
  6014   00162C                     u2541:
  6015   00162C  EF2B  F00B         	goto	l2970
  6016   001630                     u2540:
  6017   001630                     l2966:
  6018   001630  045C               	decf	_flag3^0,w,c
  6019   001632  105D               	iorwf	(_flag3+1)^0,w,c
  6020   001634  A4D8               	btfss	status,2,c
  6021   001636  EF1F  F00B         	goto	u2551
  6022   00163A  EF21  F00B         	goto	u2550
  6023   00163E                     u2551:
  6024   00163E  EF85  F00B         	goto	l2994
  6025   001642                     u2550:
  6026   001642  0E02               	movlw	2
  6027   001644  185A               	xorwf	_star^0,w,c
  6028   001646  105B               	iorwf	(_star+1)^0,w,c
  6029   001648  A4D8               	btfss	status,2,c
  6030   00164A  EF29  F00B         	goto	u2561
  6031   00164E  EF2B  F00B         	goto	u2560
  6032   001652                     u2561:
  6033   001652  EF85  F00B         	goto	l2994
  6034   001656                     u2560:
  6035   001656                     l2970:
  6036                           
  6037                           ;dash_board.c: 43:             if(set == 1){
  6038   001656  0100               	movlb	0	; () banked
  6039   001658  0595               	decf	_set& (0+255),w,b
  6040   00165A  1196               	iorwf	(_set+1)& (0+255),w,b
  6041   00165C  A4D8               	btfss	status,2,c
  6042   00165E  EF33  F00B         	goto	u2571
  6043   001662  EF35  F00B         	goto	u2570
  6044   001666                     u2571:
  6045   001666  EF49  F00B         	goto	l2978
  6046   00166A                     u2570:
  6047   00166A                     
  6048                           ; BSR set to: 0
  6049                           ;dash_board.c: 44:                 hours++;
  6050   00166A  4A58               	infsnz	_hours^0,f,c
  6051   00166C  2A59               	incf	(_hours+1)^0,f,c
  6052   00166E                     
  6053                           ; BSR set to: 0
  6054                           ;dash_board.c: 45:                 if(hours >= 24){
  6055   00166E  BE59               	btfsc	(_hours+1)^0,7,c
  6056   001670  EF43  F00B         	goto	u2581
  6057   001674  5059               	movf	(_hours+1)^0,w,c
  6058   001676  E109               	bnz	u2580
  6059   001678  0E18               	movlw	24
  6060   00167A  5C58               	subwf	_hours^0,w,c
  6061   00167C  A0D8               	btfss	status,0,c
  6062   00167E  EF43  F00B         	goto	u2581
  6063   001682  EF45  F00B         	goto	u2580
  6064   001686                     u2581:
  6065   001686  EF49  F00B         	goto	l2978
  6066   00168A                     u2580:
  6067   00168A                     
  6068                           ; BSR set to: 0
  6069                           ;dash_board.c: 46:                     hours = 0;
  6070   00168A  0E00               	movlw	0
  6071   00168C  6E59               	movwf	(_hours+1)^0,c
  6072   00168E  0E00               	movlw	0
  6073   001690  6E58               	movwf	_hours^0,c
  6074   001692                     l2978:
  6075                           
  6076                           ; BSR set to: 0
  6077                           ;dash_board.c: 49:             if(set == 2){
  6078   001692  0E02               	movlw	2
  6079   001694  1995               	xorwf	_set& (0+255),w,b
  6080   001696  1196               	iorwf	(_set+1)& (0+255),w,b
  6081   001698  A4D8               	btfss	status,2,c
  6082   00169A  EF51  F00B         	goto	u2591
  6083   00169E  EF53  F00B         	goto	u2590
  6084   0016A2                     u2591:
  6085   0016A2  EF67  F00B         	goto	l2986
  6086   0016A6                     u2590:
  6087   0016A6                     
  6088                           ; BSR set to: 0
  6089                           ;dash_board.c: 50:                 min++;
  6090   0016A6  4A56               	infsnz	_min^0,f,c
  6091   0016A8  2A57               	incf	(_min+1)^0,f,c
  6092   0016AA                     
  6093                           ; BSR set to: 0
  6094                           ;dash_board.c: 51:                 if(min >= 60){
  6095   0016AA  BE57               	btfsc	(_min+1)^0,7,c
  6096   0016AC  EF61  F00B         	goto	u2601
  6097   0016B0  5057               	movf	(_min+1)^0,w,c
  6098   0016B2  E109               	bnz	u2600
  6099   0016B4  0E3C               	movlw	60
  6100   0016B6  5C56               	subwf	_min^0,w,c
  6101   0016B8  A0D8               	btfss	status,0,c
  6102   0016BA  EF61  F00B         	goto	u2601
  6103   0016BE  EF63  F00B         	goto	u2600
  6104   0016C2                     u2601:
  6105   0016C2  EF67  F00B         	goto	l2986
  6106   0016C6                     u2600:
  6107   0016C6                     
  6108                           ; BSR set to: 0
  6109                           ;dash_board.c: 52:                     min = 0;
  6110   0016C6  0E00               	movlw	0
  6111   0016C8  6E57               	movwf	(_min+1)^0,c
  6112   0016CA  0E00               	movlw	0
  6113   0016CC  6E56               	movwf	_min^0,c
  6114   0016CE                     l2986:
  6115                           
  6116                           ; BSR set to: 0
  6117                           ;dash_board.c: 55:             if(set == 3){
  6118   0016CE  0E03               	movlw	3
  6119   0016D0  1995               	xorwf	_set& (0+255),w,b
  6120   0016D2  1196               	iorwf	(_set+1)& (0+255),w,b
  6121   0016D4  A4D8               	btfss	status,2,c
  6122   0016D6  EF6F  F00B         	goto	u2611
  6123   0016DA  EF71  F00B         	goto	u2610
  6124   0016DE                     u2611:
  6125   0016DE  EF85  F00B         	goto	l2994
  6126   0016E2                     u2610:
  6127   0016E2                     
  6128                           ; BSR set to: 0
  6129                           ;dash_board.c: 56:                 sec++;
  6130   0016E2  4A54               	infsnz	_sec^0,f,c
  6131   0016E4  2A55               	incf	(_sec+1)^0,f,c
  6132   0016E6                     
  6133                           ; BSR set to: 0
  6134                           ;dash_board.c: 57:                 if(sec >= 60){
  6135   0016E6  BE55               	btfsc	(_sec+1)^0,7,c
  6136   0016E8  EF7F  F00B         	goto	u2621
  6137   0016EC  5055               	movf	(_sec+1)^0,w,c
  6138   0016EE  E109               	bnz	u2620
  6139   0016F0  0E3C               	movlw	60
  6140   0016F2  5C54               	subwf	_sec^0,w,c
  6141   0016F4  A0D8               	btfss	status,0,c
  6142   0016F6  EF7F  F00B         	goto	u2621
  6143   0016FA  EF81  F00B         	goto	u2620
  6144   0016FE                     u2621:
  6145   0016FE  EFC9  F00A         	goto	l269
  6146   001702                     u2620:
  6147   001702                     
  6148                           ; BSR set to: 0
  6149                           ;dash_board.c: 58:                     sec = 0;
  6150   001702  0E00               	movlw	0
  6151   001704  6E55               	movwf	(_sec+1)^0,c
  6152   001706  0E00               	movlw	0
  6153   001708  6E54               	movwf	_sec^0,c
  6154   00170A                     l2994:
  6155                           
  6156                           ;dash_board.c: 64:     if(key == 1 && flag1 == 2){
  6157   00170A  0402               	decf	dash_board@key^0,w,c
  6158   00170C  A4D8               	btfss	status,2,c
  6159   00170E  EF8B  F00B         	goto	u2631
  6160   001712  EF8D  F00B         	goto	u2630
  6161   001716                     u2631:
  6162   001716  EFB7  F00B         	goto	l3010
  6163   00171A                     u2630:
  6164   00171A  0E02               	movlw	2
  6165   00171C  185E               	xorwf	_flag1^0,w,c
  6166   00171E  105F               	iorwf	(_flag1+1)^0,w,c
  6167   001720  A4D8               	btfss	status,2,c
  6168   001722  EF95  F00B         	goto	u2641
  6169   001726  EF97  F00B         	goto	u2640
  6170   00172A                     u2641:
  6171   00172A  EFB7  F00B         	goto	l3010
  6172   00172E                     u2640:
  6173   00172E                     
  6174                           ;dash_board.c: 65:         star--;
  6175   00172E  065A               	decf	_star^0,f,c
  6176   001730  A0D8               	btfss	status,0,c
  6177   001732  065B               	decf	(_star+1)^0,f,c
  6178   001734                     
  6179                           ;dash_board.c: 66:         if(star == 0){
  6180   001734  505A               	movf	_star^0,w,c
  6181   001736  105B               	iorwf	(_star+1)^0,w,c
  6182   001738  A4D8               	btfss	status,2,c
  6183   00173A  EFA1  F00B         	goto	u2651
  6184   00173E  EFA3  F00B         	goto	u2650
  6185   001742                     u2651:
  6186   001742  EFAA  F00B         	goto	l3006
  6187   001746                     u2650:
  6188   001746                     
  6189                           ;dash_board.c: 67:             flag3--;
  6190   001746  065C               	decf	_flag3^0,f,c
  6191   001748  A0D8               	btfss	status,0,c
  6192   00174A  065D               	decf	(_flag3+1)^0,f,c
  6193   00174C                     
  6194                           ;dash_board.c: 68:             star = 1;
  6195   00174C  0E00               	movlw	0
  6196   00174E  6E5B               	movwf	(_star+1)^0,c
  6197   001750  0E01               	movlw	1
  6198   001752  6E5A               	movwf	_star^0,c
  6199   001754                     l3006:
  6200                           
  6201                           ;dash_board.c: 71:         if(flag3 == 0){
  6202   001754  505C               	movf	_flag3^0,w,c
  6203   001756  105D               	iorwf	(_flag3+1)^0,w,c
  6204   001758  A4D8               	btfss	status,2,c
  6205   00175A  EFB1  F00B         	goto	u2661
  6206   00175E  EFB3  F00B         	goto	u2660
  6207   001762                     u2661:
  6208   001762  EFB7  F00B         	goto	l3010
  6209   001766                     u2660:
  6210   001766                     
  6211                           ;dash_board.c: 72:             flag3 = 1;
  6212   001766  0E00               	movlw	0
  6213   001768  6E5D               	movwf	(_flag3+1)^0,c
  6214   00176A  0E01               	movlw	1
  6215   00176C  6E5C               	movwf	_flag3^0,c
  6216   00176E                     l3010:
  6217                           
  6218                           ;dash_board.c: 76:     if(start_dec == 1 || flag1 == 2 || flag1 == 3){
  6219   00176E  0100               	movlb	0	; () banked
  6220   001770  05DB               	decf	dash_board@start_dec& (0+255),w,b
  6221   001772  11DC               	iorwf	(dash_board@start_dec+1)& (0+255),w,b
  6222   001774  B4D8               	btfsc	status,2,c
  6223   001776  EFBF  F00B         	goto	u2671
  6224   00177A  EFC1  F00B         	goto	u2670
  6225   00177E                     u2671:
  6226   00177E  EFD5  F00B         	goto	l3016
  6227   001782                     u2670:
  6228   001782                     
  6229                           ; BSR set to: 0
  6230   001782  0E02               	movlw	2
  6231   001784  185E               	xorwf	_flag1^0,w,c
  6232   001786  105F               	iorwf	(_flag1+1)^0,w,c
  6233   001788  B4D8               	btfsc	status,2,c
  6234   00178A  EFC9  F00B         	goto	u2681
  6235   00178E  EFCB  F00B         	goto	u2680
  6236   001792                     u2681:
  6237   001792  EFD5  F00B         	goto	l3016
  6238   001796                     u2680:
  6239   001796                     
  6240                           ; BSR set to: 0
  6241   001796  0E03               	movlw	3
  6242   001798  185E               	xorwf	_flag1^0,w,c
  6243   00179A  105F               	iorwf	(_flag1+1)^0,w,c
  6244   00179C  A4D8               	btfss	status,2,c
  6245   00179E  EFD3  F00B         	goto	u2691
  6246   0017A2  EFD5  F00B         	goto	u2690
  6247   0017A6                     u2691:
  6248   0017A6  EFCC  F00C         	goto	l3074
  6249   0017AA                     u2690:
  6250   0017AA                     l3016:
  6251                           
  6252                           ; BSR set to: 0
  6253                           ;dash_board.c: 77:         if(key == 2 && flag1 == 1){
  6254   0017AA  0E02               	movlw	2
  6255   0017AC  1802               	xorwf	dash_board@key^0,w,c
  6256   0017AE  A4D8               	btfss	status,2,c
  6257   0017B0  EFDC  F00B         	goto	u2701
  6258   0017B4  EFDE  F00B         	goto	u2700
  6259   0017B8                     u2701:
  6260   0017B8  EF1B  F00C         	goto	l3034
  6261   0017BC                     u2700:
  6262   0017BC                     
  6263                           ; BSR set to: 0
  6264   0017BC  045E               	decf	_flag1^0,w,c
  6265   0017BE  105F               	iorwf	(_flag1+1)^0,w,c
  6266   0017C0  A4D8               	btfss	status,2,c
  6267   0017C2  EFE5  F00B         	goto	u2711
  6268   0017C6  EFE7  F00B         	goto	u2710
  6269   0017CA                     u2711:
  6270   0017CA  EF1B  F00C         	goto	l3034
  6271   0017CE                     u2710:
  6272   0017CE                     
  6273                           ; BSR set to: 0
  6274                           ;dash_board.c: 79:             if(flag){
  6275   0017CE  518D               	movf	dash_board@flag& (0+255),w,b
  6276   0017D0  118E               	iorwf	(dash_board@flag+1)& (0+255),w,b
  6277   0017D2  B4D8               	btfsc	status,2,c
  6278   0017D4  EFEE  F00B         	goto	u2721
  6279   0017D8  EFF0  F00B         	goto	u2720
  6280   0017DC                     u2721:
  6281   0017DC  EF0D  F00C         	goto	l3032
  6282   0017E0                     u2720:
  6283   0017E0                     
  6284                           ; BSR set to: 0
  6285                           ;dash_board.c: 80:                 count--;
  6286   0017E0  07E7               	decf	_count& (0+255),f,b
  6287   0017E2  A0D8               	btfss	status,0,c
  6288   0017E4  07E8               	decf	(_count+1)& (0+255),f,b
  6289   0017E6                     
  6290                           ; BSR set to: 0
  6291                           ;dash_board.c: 81:                 if(count>=0){
  6292   0017E6  BFE8               	btfsc	(_count+1)& (0+255),7,b
  6293   0017E8  EFF8  F00B         	goto	u2731
  6294   0017EC  EFFA  F00B         	goto	u2730
  6295   0017F0                     u2731:
  6296   0017F0  EFFE  F00B         	goto	l3028
  6297   0017F4                     u2730:
  6298   0017F4                     
  6299                           ; BSR set to: 0
  6300                           ;dash_board.c: 82:                     flag2 = 1;
  6301   0017F4  0E00               	movlw	0
  6302   0017F6  6FE6               	movwf	(_flag2+1)& (0+255),b
  6303   0017F8  0E01               	movlw	1
  6304   0017FA  6FE5               	movwf	_flag2& (0+255),b
  6305   0017FC                     l3028:
  6306                           
  6307                           ; BSR set to: 0
  6308                           ;dash_board.c: 84:                 if(count == 0){
  6309   0017FC  51E7               	movf	_count& (0+255),w,b
  6310   0017FE  11E8               	iorwf	(_count+1)& (0+255),w,b
  6311   001800  A4D8               	btfss	status,2,c
  6312   001802  EF05  F00C         	goto	u2741
  6313   001806  EF07  F00C         	goto	u2740
  6314   00180A                     u2741:
  6315   00180A  EFCC  F00C         	goto	l296
  6316   00180E                     u2740:
  6317   00180E                     
  6318                           ; BSR set to: 0
  6319                           ;dash_board.c: 85:                     count = 1;
  6320   00180E  0E00               	movlw	0
  6321   001810  6FE8               	movwf	(_count+1)& (0+255),b
  6322   001812  0E01               	movlw	1
  6323   001814  6FE7               	movwf	_count& (0+255),b
  6324   001816  EFCC  F00C         	goto	l3074
  6325   00181A                     l3032:
  6326                           
  6327                           ; BSR set to: 0
  6328                           ;dash_board.c: 88:                 flag2 = 1;
  6329   00181A  0E00               	movlw	0
  6330   00181C  6FE6               	movwf	(_flag2+1)& (0+255),b
  6331   00181E  0E01               	movlw	1
  6332   001820  6FE5               	movwf	_flag2& (0+255),b
  6333                           
  6334                           ;dash_board.c: 89:                 flag=1;
  6335   001822  0E00               	movlw	0
  6336   001824  6F8E               	movwf	(dash_board@flag+1)& (0+255),b
  6337   001826  0E01               	movlw	1
  6338   001828  6F8D               	movwf	dash_board@flag& (0+255),b
  6339                           
  6340                           ;dash_board.c: 90:                 count = 1;
  6341   00182A  0E00               	movlw	0
  6342   00182C  6FE8               	movwf	(_count+1)& (0+255),b
  6343   00182E  0E01               	movlw	1
  6344   001830  6FE7               	movwf	_count& (0+255),b
  6345   001832  EFCC  F00C         	goto	l3074
  6346   001836                     l3034:
  6347                           
  6348                           ; BSR set to: 0
  6349   001836  0E02               	movlw	2
  6350   001838  1802               	xorwf	dash_board@key^0,w,c
  6351   00183A  A4D8               	btfss	status,2,c
  6352   00183C  EF22  F00C         	goto	u2751
  6353   001840  EF24  F00C         	goto	u2750
  6354   001844                     u2751:
  6355   001844  EF97  F00C         	goto	l3058
  6356   001848                     u2750:
  6357   001848                     
  6358                           ; BSR set to: 0
  6359   001848  0E03               	movlw	3
  6360   00184A  185E               	xorwf	_flag1^0,w,c
  6361   00184C  105F               	iorwf	(_flag1+1)^0,w,c
  6362   00184E  A4D8               	btfss	status,2,c
  6363   001850  EF2C  F00C         	goto	u2761
  6364   001854  EF2E  F00C         	goto	u2760
  6365   001858                     u2761:
  6366   001858  EF97  F00C         	goto	l3058
  6367   00185C                     u2760:
  6368   00185C                     
  6369                           ; BSR set to: 0
  6370                           ;dash_board.c: 95:             if(star == 1 && flag3 == 1){
  6371   00185C  045A               	decf	_star^0,w,c
  6372   00185E  105B               	iorwf	(_star+1)^0,w,c
  6373   001860  A4D8               	btfss	status,2,c
  6374   001862  EF35  F00C         	goto	u2771
  6375   001866  EF37  F00C         	goto	u2770
  6376   00186A                     u2771:
  6377   00186A  EF5B  F00C         	goto	l298
  6378   00186E                     u2770:
  6379   00186E                     
  6380                           ; BSR set to: 0
  6381   00186E  045C               	decf	_flag3^0,w,c
  6382   001870  105D               	iorwf	(_flag3+1)^0,w,c
  6383   001872  A4D8               	btfss	status,2,c
  6384   001874  EF3E  F00C         	goto	u2781
  6385   001878  EF40  F00C         	goto	u2780
  6386   00187C                     u2781:
  6387   00187C  EF5B  F00C         	goto	l298
  6388   001880                     u2780:
  6389   001880                     
  6390                           ; BSR set to: 0
  6391                           ;dash_board.c: 96:                 storing_data = storing_data + 10;
  6392   001880  0E0A               	movlw	10
  6393   001882  25E1               	addwf	_storing_data& (0+255),w,b
  6394   001884  6FE1               	movwf	_storing_data& (0+255),b
  6395   001886  0E00               	movlw	0
  6396   001888  21E2               	addwfc	(_storing_data+1)& (0+255),w,b
  6397   00188A  6FE2               	movwf	(_storing_data+1)& (0+255),b
  6398                           
  6399                           ;dash_board.c: 97:                 if(storing_data >= data_lim){
  6400   00188C  51E9               	movf	_data_lim& (0+255),w,b
  6401   00188E  5DE1               	subwf	_storing_data& (0+255),w,b
  6402   001890  51E2               	movf	(_storing_data+1)& (0+255),w,b
  6403   001892  0A80               	xorlw	128
  6404   001894  6E01               	movwf	??_dash_board^0,c
  6405   001896  51EA               	movf	(_data_lim+1)& (0+255),w,b
  6406   001898  0A80               	xorlw	128
  6407   00189A  5801               	subwfb	??_dash_board^0,w,c
  6408   00189C  A0D8               	btfss	status,0,c
  6409   00189E  EF53  F00C         	goto	u2791
  6410   0018A2  EF55  F00C         	goto	u2790
  6411   0018A6                     u2791:
  6412   0018A6  EF5B  F00C         	goto	l298
  6413   0018AA                     u2790:
  6414   0018AA                     
  6415                           ; BSR set to: 0
  6416                           ;dash_board.c: 98:                     storing_data = storing_data - 10;
  6417   0018AA  0EF6               	movlw	246
  6418   0018AC  25E1               	addwf	_storing_data& (0+255),w,b
  6419   0018AE  6FE1               	movwf	_storing_data& (0+255),b
  6420   0018B0  0EFF               	movlw	255
  6421   0018B2  21E2               	addwfc	(_storing_data+1)& (0+255),w,b
  6422   0018B4  6FE2               	movwf	(_storing_data+1)& (0+255),b
  6423   0018B6                     l298:
  6424                           
  6425                           ; BSR set to: 0
  6426                           ;dash_board.c: 101:             if((flag3 == 2 && star == 1) || (flag3 == 1 && star == 2
      +                          )){
  6427   0018B6  0E02               	movlw	2
  6428   0018B8  185C               	xorwf	_flag3^0,w,c
  6429   0018BA  105D               	iorwf	(_flag3+1)^0,w,c
  6430   0018BC  A4D8               	btfss	status,2,c
  6431   0018BE  EF63  F00C         	goto	u2801
  6432   0018C2  EF65  F00C         	goto	u2800
  6433   0018C6                     u2801:
  6434   0018C6  EF6E  F00C         	goto	l3048
  6435   0018CA                     u2800:
  6436   0018CA                     
  6437                           ; BSR set to: 0
  6438   0018CA  045A               	decf	_star^0,w,c
  6439   0018CC  105B               	iorwf	(_star+1)^0,w,c
  6440   0018CE  B4D8               	btfsc	status,2,c
  6441   0018D0  EF6C  F00C         	goto	u2811
  6442   0018D4  EF6E  F00C         	goto	u2810
  6443   0018D8                     u2811:
  6444   0018D8  EF81  F00C         	goto	l3052
  6445   0018DC                     u2810:
  6446   0018DC                     l3048:
  6447                           
  6448                           ; BSR set to: 0
  6449   0018DC  045C               	decf	_flag3^0,w,c
  6450   0018DE  105D               	iorwf	(_flag3+1)^0,w,c
  6451   0018E0  A4D8               	btfss	status,2,c
  6452   0018E2  EF75  F00C         	goto	u2821
  6453   0018E6  EF77  F00C         	goto	u2820
  6454   0018EA                     u2821:
  6455   0018EA  EFCC  F00C         	goto	l3074
  6456   0018EE                     u2820:
  6457   0018EE                     
  6458                           ; BSR set to: 0
  6459   0018EE  0E02               	movlw	2
  6460   0018F0  185A               	xorwf	_star^0,w,c
  6461   0018F2  105B               	iorwf	(_star+1)^0,w,c
  6462   0018F4  A4D8               	btfss	status,2,c
  6463   0018F6  EF7F  F00C         	goto	u2831
  6464   0018FA  EF81  F00C         	goto	u2830
  6465   0018FE                     u2831:
  6466   0018FE  EFCC  F00C         	goto	l3074
  6467   001902                     u2830:
  6468   001902                     l3052:
  6469                           
  6470                           ; BSR set to: 0
  6471                           ;dash_board.c: 102:                 set++;
  6472   001902  4B95               	infsnz	_set& (0+255),f,b
  6473   001904  2B96               	incf	(_set+1)& (0+255),f,b
  6474   001906                     
  6475                           ; BSR set to: 0
  6476                           ;dash_board.c: 103:                 if(set >= 4){
  6477   001906  BF96               	btfsc	(_set+1)& (0+255),7,b
  6478   001908  EF8F  F00C         	goto	u2841
  6479   00190C  5196               	movf	(_set+1)& (0+255),w,b
  6480   00190E  E109               	bnz	u2840
  6481   001910  0E04               	movlw	4
  6482   001912  5D95               	subwf	_set& (0+255),w,b
  6483   001914  A0D8               	btfss	status,0,c
  6484   001916  EF8F  F00C         	goto	u2841
  6485   00191A  EF91  F00C         	goto	u2840
  6486   00191E                     u2841:
  6487   00191E  EFCC  F00C         	goto	l3074
  6488   001922                     u2840:
  6489   001922                     
  6490                           ; BSR set to: 0
  6491                           ;dash_board.c: 104:                     set = 1;
  6492   001922  0E00               	movlw	0
  6493   001924  6F96               	movwf	(_set+1)& (0+255),b
  6494   001926  0E01               	movlw	1
  6495   001928  6F95               	movwf	_set& (0+255),b
  6496   00192A  EFCC  F00C         	goto	l3074
  6497   00192E                     l3058:
  6498                           
  6499                           ; BSR set to: 0
  6500   00192E  0E02               	movlw	2
  6501   001930  1802               	xorwf	dash_board@key^0,w,c
  6502   001932  A4D8               	btfss	status,2,c
  6503   001934  EF9E  F00C         	goto	u2851
  6504   001938  EFA0  F00C         	goto	u2850
  6505   00193C                     u2851:
  6506   00193C  EFCC  F00C         	goto	l296
  6507   001940                     u2850:
  6508   001940                     
  6509                           ; BSR set to: 0
  6510   001940  0E02               	movlw	2
  6511   001942  185E               	xorwf	_flag1^0,w,c
  6512   001944  105F               	iorwf	(_flag1+1)^0,w,c
  6513   001946  A4D8               	btfss	status,2,c
  6514   001948  EFA8  F00C         	goto	u2861
  6515   00194C  EFAA  F00C         	goto	u2860
  6516   001950                     u2861:
  6517   001950  EFCC  F00C         	goto	l296
  6518   001954                     u2860:
  6519   001954                     
  6520                           ; BSR set to: 0
  6521                           ;dash_board.c: 109:             star++;
  6522   001954  4A5A               	infsnz	_star^0,f,c
  6523   001956  2A5B               	incf	(_star+1)^0,f,c
  6524   001958                     
  6525                           ; BSR set to: 0
  6526                           ;dash_board.c: 110:             if(star == 3){
  6527   001958  0E03               	movlw	3
  6528   00195A  185A               	xorwf	_star^0,w,c
  6529   00195C  105B               	iorwf	(_star+1)^0,w,c
  6530   00195E  A4D8               	btfss	status,2,c
  6531   001960  EFB4  F00C         	goto	u2871
  6532   001964  EFB6  F00C         	goto	u2870
  6533   001968                     u2871:
  6534   001968  EFBC  F00C         	goto	l3070
  6535   00196C                     u2870:
  6536   00196C                     
  6537                           ; BSR set to: 0
  6538                           ;dash_board.c: 111:                 flag3++;
  6539   00196C  4A5C               	infsnz	_flag3^0,f,c
  6540   00196E  2A5D               	incf	(_flag3+1)^0,f,c
  6541   001970                     
  6542                           ; BSR set to: 0
  6543                           ;dash_board.c: 112:                 star = 2;
  6544   001970  0E00               	movlw	0
  6545   001972  6E5B               	movwf	(_star+1)^0,c
  6546   001974  0E02               	movlw	2
  6547   001976  6E5A               	movwf	_star^0,c
  6548   001978                     l3070:
  6549                           
  6550                           ; BSR set to: 0
  6551                           ;dash_board.c: 114:             if(flag3 == 4){
  6552   001978  0E04               	movlw	4
  6553   00197A  185C               	xorwf	_flag3^0,w,c
  6554   00197C  105D               	iorwf	(_flag3+1)^0,w,c
  6555   00197E  A4D8               	btfss	status,2,c
  6556   001980  EFC4  F00C         	goto	u2881
  6557   001984  EFC6  F00C         	goto	u2880
  6558   001988                     u2881:
  6559   001988  EFCC  F00C         	goto	l3074
  6560   00198C                     u2880:
  6561   00198C                     
  6562                           ; BSR set to: 0
  6563                           ;dash_board.c: 115:                 flag3 = 3;
  6564   00198C  0E00               	movlw	0
  6565   00198E  6E5D               	movwf	(_flag3+1)^0,c
  6566   001990  0E03               	movlw	3
  6567   001992  6E5C               	movwf	_flag3^0,c
  6568   001994  EFCC  F00C         	goto	l3074
  6569   001998                     l296:
  6570   001998                     l3074:
  6571                           
  6572                           ; BSR set to: 0
  6573                           ;dash_board.c: 120:     if(key == 3 && flag1 == 1){
  6574   001998  0E03               	movlw	3
  6575   00199A  1802               	xorwf	dash_board@key^0,w,c
  6576   00199C  A4D8               	btfss	status,2,c
  6577   00199E  EFD3  F00C         	goto	u2891
  6578   0019A2  EFD5  F00C         	goto	u2890
  6579   0019A6                     u2891:
  6580   0019A6  EFEE  F00C         	goto	l311
  6581   0019AA                     u2890:
  6582   0019AA                     
  6583                           ; BSR set to: 0
  6584   0019AA  045E               	decf	_flag1^0,w,c
  6585   0019AC  105F               	iorwf	(_flag1+1)^0,w,c
  6586   0019AE  A4D8               	btfss	status,2,c
  6587   0019B0  EFDC  F00C         	goto	u2901
  6588   0019B4  EFDE  F00C         	goto	u2900
  6589   0019B8                     u2901:
  6590   0019B8  EFEE  F00C         	goto	l311
  6591   0019BC                     u2900:
  6592   0019BC                     
  6593                           ; BSR set to: 0
  6594                           ;dash_board.c: 121:         flag2 = 1;
  6595   0019BC  0E00               	movlw	0
  6596   0019BE  6FE6               	movwf	(_flag2+1)& (0+255),b
  6597   0019C0  0E01               	movlw	1
  6598   0019C2  6FE5               	movwf	_flag2& (0+255),b
  6599                           
  6600                           ;dash_board.c: 122:         count = 8;
  6601   0019C4  0E00               	movlw	0
  6602   0019C6  6FE8               	movwf	(_count+1)& (0+255),b
  6603   0019C8  0E08               	movlw	8
  6604   0019CA  6FE7               	movwf	_count& (0+255),b
  6605                           
  6606                           ;dash_board.c: 123:         flag = 0;
  6607   0019CC  0E00               	movlw	0
  6608   0019CE  6F8E               	movwf	(dash_board@flag+1)& (0+255),b
  6609   0019D0  0E00               	movlw	0
  6610   0019D2  6F8D               	movwf	dash_board@flag& (0+255),b
  6611                           
  6612                           ;dash_board.c: 124:         start_dec = 1;
  6613   0019D4  0E00               	movlw	0
  6614   0019D6  6FDC               	movwf	(dash_board@start_dec+1)& (0+255),b
  6615   0019D8  0E01               	movlw	1
  6616   0019DA  6FDB               	movwf	dash_board@start_dec& (0+255),b
  6617   0019DC                     l311:
  6618                           
  6619                           ; BSR set to: 0
  6620   0019DC  0012               	return		;funcret
  6621   0019DE                     __end_of_dash_board:
  6622                           	callstack 0
  6623                           
  6624 ;; *************** function _clcd_putch *****************
  6625 ;; Defined at:
  6626 ;;		line 75 in file "clcd.c"
  6627 ;; Parameters:    Size  Location     Type
  6628 ;;  data            1    wreg     const unsigned char 
  6629 ;;  addr            1    8[COMRAM] unsigned char 
  6630 ;; Auto vars:     Size  Location     Type
  6631 ;;  data            1    9[COMRAM] const unsigned char 
  6632 ;; Return value:  Size  Location     Type
  6633 ;;                  1    wreg      void 
  6634 ;; Registers used:
  6635 ;;		wreg, status,2, cstack
  6636 ;; Tracked objects:
  6637 ;;		On entry : 0/0
  6638 ;;		On exit  : 0/0
  6639 ;;		Unchanged: 0/0
  6640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6641 ;;      Params:         1       0       0       0       0       0       0
  6642 ;;      Locals:         1       0       0       0       0       0       0
  6643 ;;      Temps:          0       0       0       0       0       0       0
  6644 ;;      Totals:         2       0       0       0       0       0       0
  6645 ;;Total ram usage:        2 bytes
  6646 ;; Hardware stack levels used: 1
  6647 ;; Hardware stack levels required when called: 1
  6648 ;; This function calls:
  6649 ;;		_clcd_write
  6650 ;; This function is called by:
  6651 ;;		_main
  6652 ;; This function uses a non-reentrant model
  6653 ;;
  6654                           
  6655                           	psect	text31
  6656   002B28                     __ptext31:
  6657                           	callstack 0
  6658   002B28                     _clcd_putch:
  6659                           	callstack 29
  6660                           
  6661                           ; BSR set to: 0
  6662                           ;incstack = 0
  6663                           ;clcd_putch@data stored from wreg
  6664   002B28  6E0A               	movwf	clcd_putch@data^0,c
  6665   002B2A                     
  6666                           ;clcd.c: 75: void clcd_putch(const unsigned char data, unsigned char addr);clcd.c: 76: {
      +                          ;clcd.c: 77:  clcd_write(addr, 0);
  6667   002B2A  0E00               	movlw	0
  6668   002B2C  6E01               	movwf	clcd_write@control_bit^0,c
  6669   002B2E  5009               	movf	clcd_putch@addr^0,w,c
  6670   002B30  ECF3  F014         	call	_clcd_write
  6671                           
  6672                           ;clcd.c: 78:  clcd_write(data, 1);
  6673   002B34  0E01               	movlw	1
  6674   002B36  6E01               	movwf	clcd_write@control_bit^0,c
  6675   002B38  500A               	movf	clcd_putch@data^0,w,c
  6676   002B3A  ECF3  F014         	call	_clcd_write
  6677   002B3E  0012               	return		;funcret
  6678   002B40                     __end_of_clcd_putch:
  6679                           	callstack 0
  6680                           
  6681 ;; *************** function _clcd_print *****************
  6682 ;; Defined at:
  6683 ;;		line 66 in file "clcd.c"
  6684 ;; Parameters:    Size  Location     Type
  6685 ;;  data            2    6[COMRAM] PTR const unsigned char 
  6686 ;;		 -> STR_19(15), STR_18(14), STR_17(8), STR_16(13), 
  6687 ;;		 -> STR_13(9), STR_12(14), STR_11(14), STR_10(8), 
  6688 ;;		 -> STR_9(10), STR_8(13), STR_7(13), STR_6(9), 
  6689 ;;		 -> STR_5(9), STR_4(9), STR_3(3), STR_2(3), 
  6690 ;;		 -> STR_1(5), main@gear(27), 
  6691 ;;  addr            1    8[COMRAM] unsigned char 
  6692 ;; Auto vars:     Size  Location     Type
  6693 ;;		None
  6694 ;; Return value:  Size  Location     Type
  6695 ;;                  1    wreg      void 
  6696 ;; Registers used:
  6697 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6698 ;; Tracked objects:
  6699 ;;		On entry : 0/0
  6700 ;;		On exit  : 0/0
  6701 ;;		Unchanged: 0/0
  6702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6703 ;;      Params:         3       0       0       0       0       0       0
  6704 ;;      Locals:         0       0       0       0       0       0       0
  6705 ;;      Temps:          0       0       0       0       0       0       0
  6706 ;;      Totals:         3       0       0       0       0       0       0
  6707 ;;Total ram usage:        3 bytes
  6708 ;; Hardware stack levels used: 1
  6709 ;; Hardware stack levels required when called: 1
  6710 ;; This function calls:
  6711 ;;		_clcd_write
  6712 ;; This function is called by:
  6713 ;;		_main
  6714 ;; This function uses a non-reentrant model
  6715 ;;
  6716                           
  6717                           	psect	text32
  6718   0027B2                     __ptext32:
  6719                           	callstack 0
  6720   0027B2                     _clcd_print:
  6721                           	callstack 29
  6722   0027B2                     
  6723                           ;clcd.c: 66: void clcd_print(const unsigned char *data, unsigned char addr);clcd.c: 67: 
      +                          {;clcd.c: 68:  clcd_write(addr, 0);
  6724   0027B2  0E00               	movlw	0
  6725   0027B4  6E01               	movwf	clcd_write@control_bit^0,c
  6726   0027B6  5009               	movf	clcd_print@addr^0,w,c
  6727   0027B8  ECF3  F014         	call	_clcd_write
  6728                           
  6729                           ;clcd.c: 69:  while (*data != '\0')
  6730   0027BC  EFF6  F013         	goto	l2862
  6731   0027C0                     l2858:
  6732                           
  6733                           ;clcd.c: 70:  {;clcd.c: 71:   clcd_write(*data++, 1);
  6734   0027C0  0E01               	movlw	1
  6735   0027C2  6E01               	movwf	clcd_write@control_bit^0,c
  6736   0027C4  C007  FFF6         	movff	clcd_print@data,tblptrl
  6737   0027C8  C008  FFF7         	movff	clcd_print@data+1,tblptrh
  6738   0027CC  6AF8               	clrf	tblptru,c
  6739   0027CE  0E05               	movlw	(high __ramtop+-1)
  6740   0027D0  64F7               	cpfsgt	tblptrh,c
  6741   0027D2  D003               	bra	u2337
  6742   0027D4  0008               	tblrd		*
  6743   0027D6  50F5               	movf	tablat,w,c
  6744   0027D8  D005               	bra	u2330
  6745   0027DA                     u2337:
  6746   0027DA  CFF6 FFE9          	movff	tblptrl,fsr0l
  6747   0027DE  CFF7 FFEA          	movff	tblptrh,fsr0h
  6748   0027E2  50EF               	movf	indf0,w,c
  6749   0027E4                     u2330:
  6750   0027E4  ECF3  F014         	call	_clcd_write
  6751   0027E8  4A07               	infsnz	clcd_print@data^0,f,c
  6752   0027EA  2A08               	incf	(clcd_print@data+1)^0,f,c
  6753   0027EC                     l2862:
  6754                           
  6755                           ;clcd.c: 69:  while (*data != '\0')
  6756   0027EC  C007  FFF6         	movff	clcd_print@data,tblptrl
  6757   0027F0  C008  FFF7         	movff	clcd_print@data+1,tblptrh
  6758   0027F4  6AF8               	clrf	tblptru,c
  6759   0027F6  0E05               	movlw	(high __ramtop+-1)
  6760   0027F8  64F7               	cpfsgt	tblptrh,c
  6761   0027FA  D003               	bra	u2347
  6762   0027FC  0008               	tblrd		*
  6763   0027FE  50F5               	movf	tablat,w,c
  6764   002800  D005               	bra	u2340
  6765   002802                     u2347:
  6766   002802  CFF6 FFE9          	movff	tblptrl,fsr0l
  6767   002806  CFF7 FFEA          	movff	tblptrh,fsr0h
  6768   00280A  50EF               	movf	indf0,w,c
  6769   00280C                     u2340:
  6770   00280C  0900               	iorlw	0
  6771   00280E  A4D8               	btfss	status,2,c
  6772   002810  EF0C  F014         	goto	u2351
  6773   002814  EF0E  F014         	goto	u2350
  6774   002818                     u2351:
  6775   002818  EFE0  F013         	goto	l2858
  6776   00281C                     u2350:
  6777   00281C  0012               	return		;funcret
  6778   00281E                     __end_of_clcd_print:
  6779                           	callstack 0
  6780                           
  6781 ;; *************** function _clcd_write *****************
  6782 ;; Defined at:
  6783 ;;		line 12 in file "clcd.c"
  6784 ;; Parameters:    Size  Location     Type
  6785 ;;  byte            1    wreg     unsigned char 
  6786 ;;  control_bit     1    0[COMRAM] unsigned char 
  6787 ;; Auto vars:     Size  Location     Type
  6788 ;;  byte            1    1[COMRAM] unsigned char 
  6789 ;; Return value:  Size  Location     Type
  6790 ;;                  1    wreg      void 
  6791 ;; Registers used:
  6792 ;;		wreg
  6793 ;; Tracked objects:
  6794 ;;		On entry : 0/0
  6795 ;;		On exit  : 0/0
  6796 ;;		Unchanged: 0/0
  6797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6798 ;;      Params:         1       0       0       0       0       0       0
  6799 ;;      Locals:         1       0       0       0       0       0       0
  6800 ;;      Temps:          0       0       0       0       0       0       0
  6801 ;;      Totals:         2       0       0       0       0       0       0
  6802 ;;Total ram usage:        2 bytes
  6803 ;; Hardware stack levels used: 1
  6804 ;; This function calls:
  6805 ;;		Nothing
  6806 ;; This function is called by:
  6807 ;;		_init_clcd
  6808 ;;		_clcd_print
  6809 ;;		_clcd_putch
  6810 ;;		_main
  6811 ;; This function uses a non-reentrant model
  6812 ;;
  6813                           
  6814                           	psect	text33
  6815   0029E6                     __ptext33:
  6816                           	callstack 0
  6817   0029E6                     _clcd_write:
  6818                           	callstack 28
  6819                           
  6820                           ;incstack = 0
  6821                           ;clcd_write@byte stored from wreg
  6822   0029E6  6E02               	movwf	clcd_write@byte^0,c
  6823   0029E8                     
  6824                           ;clcd.c: 12: void clcd_write(unsigned char byte, unsigned char control_bit);clcd.c: 13: 
      +                          {;clcd.c: 14:  RC1 = control_bit;
  6825   0029E8  B001               	btfsc	clcd_write@control_bit^0,0,c
  6826   0029EA  EFF9  F014         	goto	u2041
  6827   0029EE  EFFC  F014         	goto	u2040
  6828   0029F2                     u2041:
  6829   0029F2  8282               	bsf	3970,1,c	;volatile
  6830   0029F4  EFFD  F014         	goto	u2055
  6831   0029F8                     u2040:
  6832   0029F8  9282               	bcf	3970,1,c	;volatile
  6833   0029FA                     u2055:
  6834   0029FA                     
  6835                           ;clcd.c: 15:  PORTD = byte;
  6836   0029FA  C002  FF83         	movff	clcd_write@byte,3971	;volatile
  6837   0029FE                     
  6838                           ;clcd.c: 18:  RC2 = 1;
  6839   0029FE  8482               	bsf	3970,2,c	;volatile
  6840   002A00                     
  6841                           ;clcd.c: 19:  RC2 = 0;
  6842   002A00  9482               	bcf	3970,2,c	;volatile
  6843   002A02                     
  6844                           ;clcd.c: 21:  TRISD7 = 0xFF;
  6845   002A02  8E95               	bsf	3989,7,c	;volatile
  6846   002A04                     
  6847                           ;clcd.c: 22:  RC0 = 1;
  6848   002A04  8082               	bsf	3970,0,c	;volatile
  6849   002A06                     
  6850                           ;clcd.c: 23:  RC1 = 0;
  6851   002A06  9282               	bcf	3970,1,c	;volatile
  6852   002A08                     l2568:
  6853                           
  6854                           ;clcd.c: 26:  {;clcd.c: 27:   RC2 = 1;
  6855   002A08  8482               	bsf	3970,2,c	;volatile
  6856   002A0A                     
  6857                           ;clcd.c: 28:   RC2 = 0;
  6858   002A0A  9482               	bcf	3970,2,c	;volatile
  6859   002A0C                     
  6860                           ;clcd.c: 29:  } while (RD7);
  6861   002A0C  BE83               	btfsc	3971,7,c	;volatile
  6862   002A0E  EF0B  F015         	goto	u2061
  6863   002A12  EF0D  F015         	goto	u2060
  6864   002A16                     u2061:
  6865   002A16  EF04  F015         	goto	l2568
  6866   002A1A                     u2060:
  6867   002A1A                     
  6868                           ;clcd.c: 31:  RC0 = 0;
  6869   002A1A  9082               	bcf	3970,0,c	;volatile
  6870                           
  6871                           ;clcd.c: 32:  TRISD7 = 0x00;
  6872   002A1C  9E95               	bcf	3989,7,c	;volatile
  6873   002A1E  0012               	return		;funcret
  6874   002A20                     __end_of_clcd_write:
  6875                           	callstack 0
  6876                           
  6877 ;; *************** function ___xxtofl *****************
  6878 ;; Defined at:
  6879 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\xxtofl.c"
  6880 ;; Parameters:    Size  Location     Type
  6881 ;;  sign            1    wreg     unsigned char 
  6882 ;;  val             4    0[COMRAM] long 
  6883 ;; Auto vars:     Size  Location     Type
  6884 ;;  sign            1    8[COMRAM] unsigned char 
  6885 ;;  arg             4   10[COMRAM] unsigned long 
  6886 ;;  exp             1    9[COMRAM] unsigned char 
  6887 ;; Return value:  Size  Location     Type
  6888 ;;                  4    0[COMRAM] unsigned char 
  6889 ;; Registers used:
  6890 ;;		wreg, status,2, status,0
  6891 ;; Tracked objects:
  6892 ;;		On entry : 0/0
  6893 ;;		On exit  : 0/0
  6894 ;;		Unchanged: 0/0
  6895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6896 ;;      Params:         4       0       0       0       0       0       0
  6897 ;;      Locals:         6       0       0       0       0       0       0
  6898 ;;      Temps:          4       0       0       0       0       0       0
  6899 ;;      Totals:        14       0       0       0       0       0       0
  6900 ;;Total ram usage:       14 bytes
  6901 ;; Hardware stack levels used: 1
  6902 ;; This function calls:
  6903 ;;		Nothing
  6904 ;; This function is called by:
  6905 ;;		_main
  6906 ;; This function uses a non-reentrant model
  6907 ;;
  6908                           
  6909                           	psect	text34
  6910   001F68                     __ptext34:
  6911                           	callstack 0
  6912   001F68                     ___xxtofl:
  6913                           	callstack 30
  6914                           
  6915                           ;incstack = 0
  6916                           ;___xxtofl@sign stored from wreg
  6917   001F68  6E09               	movwf	___xxtofl@sign^0,c
  6918   001F6A  5009               	movf	___xxtofl@sign^0,w,c
  6919   001F6C  B4D8               	btfsc	status,2,c
  6920   001F6E  EFBB  F00F         	goto	u3441
  6921   001F72  EFBD  F00F         	goto	u3440
  6922   001F76                     u3441:
  6923   001F76  EFDF  F00F         	goto	l1242
  6924   001F7A                     u3440:
  6925   001F7A  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  6926   001F7C  EFC4  F00F         	goto	u3450
  6927   001F80  EFC2  F00F         	goto	u3451
  6928   001F84                     u3451:
  6929   001F84  EFDF  F00F         	goto	l1242
  6930   001F88                     u3450:
  6931   001F88  C001  F005         	movff	___xxtofl@val,??___xxtofl
  6932   001F8C  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  6933   001F90  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  6934   001F94  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  6935   001F98  1E05               	comf	??___xxtofl^0,f,c
  6936   001F9A  1E06               	comf	(??___xxtofl+1)^0,f,c
  6937   001F9C  1E07               	comf	(??___xxtofl+2)^0,f,c
  6938   001F9E  1E08               	comf	(??___xxtofl+3)^0,f,c
  6939   001FA0  2A05               	incf	??___xxtofl^0,f,c
  6940   001FA2  0E00               	movlw	0
  6941   001FA4  2206               	addwfc	(??___xxtofl+1)^0,f,c
  6942   001FA6  2207               	addwfc	(??___xxtofl+2)^0,f,c
  6943   001FA8  2208               	addwfc	(??___xxtofl+3)^0,f,c
  6944   001FAA  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  6945   001FAE  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  6946   001FB2  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  6947   001FB6  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  6948   001FBA  EFE7  F00F         	goto	l3398
  6949   001FBE                     l1242:
  6950   001FBE  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  6951   001FC2  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6952   001FC6  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6953   001FCA  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6954   001FCE                     l3398:
  6955   001FCE  5001               	movf	___xxtofl@val^0,w,c
  6956   001FD0  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  6957   001FD2  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  6958   001FD4  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  6959   001FD6  A4D8               	btfss	status,2,c
  6960   001FD8  EFF0  F00F         	goto	u3461
  6961   001FDC  EFF2  F00F         	goto	u3460
  6962   001FE0                     u3461:
  6963   001FE0  EFFC  F00F         	goto	l3404
  6964   001FE4                     u3460:
  6965   001FE4  0E00               	movlw	0
  6966   001FE6  6E01               	movwf	?___xxtofl^0,c
  6967   001FE8  0E00               	movlw	0
  6968   001FEA  6E02               	movwf	(?___xxtofl+1)^0,c
  6969   001FEC  0E00               	movlw	0
  6970   001FEE  6E03               	movwf	(?___xxtofl+2)^0,c
  6971   001FF0  0E00               	movlw	0
  6972   001FF2  6E04               	movwf	(?___xxtofl+3)^0,c
  6973   001FF4  EF8D  F010         	goto	l1245
  6974   001FF8                     l3404:
  6975   001FF8  0E96               	movlw	150
  6976   001FFA  6E0A               	movwf	___xxtofl@exp^0,c
  6977   001FFC  EF06  F010         	goto	l3408
  6978   002000                     l3406:
  6979   002000  2A0A               	incf	___xxtofl@exp^0,f,c
  6980   002002  90D8               	bcf	status,0,c
  6981   002004  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  6982   002006  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  6983   002008  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  6984   00200A  320B               	rrcf	___xxtofl@arg^0,f,c
  6985   00200C                     l3408:
  6986   00200C  0E00               	movlw	0
  6987   00200E  140B               	andwf	___xxtofl@arg^0,w,c
  6988   002010  6E05               	movwf	??___xxtofl^0,c
  6989   002012  0E00               	movlw	0
  6990   002014  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  6991   002016  6E06               	movwf	(??___xxtofl+1)^0,c
  6992   002018  0E00               	movlw	0
  6993   00201A  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  6994   00201C  6E07               	movwf	(??___xxtofl+2)^0,c
  6995   00201E  0EFE               	movlw	254
  6996   002020  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  6997   002022  6E08               	movwf	(??___xxtofl+3)^0,c
  6998   002024  5005               	movf	??___xxtofl^0,w,c
  6999   002026  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7000   002028  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7001   00202A  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7002   00202C  A4D8               	btfss	status,2,c
  7003   00202E  EF1B  F010         	goto	u3471
  7004   002032  EF1D  F010         	goto	u3470
  7005   002036                     u3471:
  7006   002036  EF00  F010         	goto	l3406
  7007   00203A                     u3470:
  7008   00203A  EF2B  F010         	goto	l1249
  7009   00203E                     l3410:
  7010   00203E  2A0A               	incf	___xxtofl@exp^0,f,c
  7011   002040  0E01               	movlw	1
  7012   002042  260B               	addwf	___xxtofl@arg^0,f,c
  7013   002044  0E00               	movlw	0
  7014   002046  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  7015   002048  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  7016   00204A  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  7017   00204C  90D8               	bcf	status,0,c
  7018   00204E  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7019   002050  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7020   002052  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7021   002054  320B               	rrcf	___xxtofl@arg^0,f,c
  7022   002056                     l1249:
  7023   002056  0E00               	movlw	0
  7024   002058  140B               	andwf	___xxtofl@arg^0,w,c
  7025   00205A  6E05               	movwf	??___xxtofl^0,c
  7026   00205C  0E00               	movlw	0
  7027   00205E  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7028   002060  6E06               	movwf	(??___xxtofl+1)^0,c
  7029   002062  0E00               	movlw	0
  7030   002064  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7031   002066  6E07               	movwf	(??___xxtofl+2)^0,c
  7032   002068  0EFF               	movlw	255
  7033   00206A  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7034   00206C  6E08               	movwf	(??___xxtofl+3)^0,c
  7035   00206E  5005               	movf	??___xxtofl^0,w,c
  7036   002070  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7037   002072  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7038   002074  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7039   002076  A4D8               	btfss	status,2,c
  7040   002078  EF40  F010         	goto	u3481
  7041   00207C  EF42  F010         	goto	u3480
  7042   002080                     u3481:
  7043   002080  EF1F  F010         	goto	l3410
  7044   002084                     u3480:
  7045   002084  EF4A  F010         	goto	l3418
  7046   002088                     l3416:
  7047   002088  060A               	decf	___xxtofl@exp^0,f,c
  7048   00208A  90D8               	bcf	status,0,c
  7049   00208C  360B               	rlcf	___xxtofl@arg^0,f,c
  7050   00208E  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  7051   002090  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  7052   002092  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  7053   002094                     l3418:
  7054   002094  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  7055   002096  EF4F  F010         	goto	u3491
  7056   00209A  EF51  F010         	goto	u3490
  7057   00209E                     u3491:
  7058   00209E  EF59  F010         	goto	l1256
  7059   0020A2                     u3490:
  7060   0020A2  0E02               	movlw	2
  7061   0020A4  600A               	cpfslt	___xxtofl@exp^0,c
  7062   0020A6  EF57  F010         	goto	u3501
  7063   0020AA  EF59  F010         	goto	u3500
  7064   0020AE                     u3501:
  7065   0020AE  EF44  F010         	goto	l3416
  7066   0020B2                     u3500:
  7067   0020B2                     l1256:
  7068   0020B2  B00A               	btfsc	___xxtofl@exp^0,0,c
  7069   0020B4  EF5E  F010         	goto	u3511
  7070   0020B8  EF60  F010         	goto	u3510
  7071   0020BC                     u3511:
  7072   0020BC  EF61  F010         	goto	l3424
  7073   0020C0                     u3510:
  7074   0020C0  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  7075   0020C2                     l3424:
  7076   0020C2  90D8               	bcf	status,0,c
  7077   0020C4  320A               	rrcf	___xxtofl@exp^0,f,c
  7078   0020C6  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  7079   0020CA  6A06               	clrf	(??___xxtofl+1)^0,c
  7080   0020CC  6A07               	clrf	(??___xxtofl+2)^0,c
  7081   0020CE  6A08               	clrf	(??___xxtofl+3)^0,c
  7082   0020D0  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  7083   0020D4  6A07               	clrf	(??___xxtofl+2)^0,c
  7084   0020D6  6A06               	clrf	(??___xxtofl+1)^0,c
  7085   0020D8  6A05               	clrf	??___xxtofl^0,c
  7086   0020DA  5005               	movf	??___xxtofl^0,w,c
  7087   0020DC  120B               	iorwf	___xxtofl@arg^0,f,c
  7088   0020DE  5006               	movf	(??___xxtofl+1)^0,w,c
  7089   0020E0  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  7090   0020E2  5007               	movf	(??___xxtofl+2)^0,w,c
  7091   0020E4  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  7092   0020E6  5008               	movf	(??___xxtofl+3)^0,w,c
  7093   0020E8  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  7094   0020EA  5009               	movf	___xxtofl@sign^0,w,c
  7095   0020EC  B4D8               	btfsc	status,2,c
  7096   0020EE  EF7B  F010         	goto	u3521
  7097   0020F2  EF7D  F010         	goto	u3520
  7098   0020F6                     u3521:
  7099   0020F6  EF85  F010         	goto	l3434
  7100   0020FA                     u3520:
  7101   0020FA  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7102   0020FC  EF84  F010         	goto	u3530
  7103   002100  EF82  F010         	goto	u3531
  7104   002104                     u3531:
  7105   002104  EF85  F010         	goto	l3434
  7106   002108                     u3530:
  7107   002108  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  7108   00210A                     l3434:
  7109   00210A  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  7110   00210E  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  7111   002112  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  7112   002116  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  7113   00211A                     l1245:
  7114   00211A  0012               	return		;funcret
  7115   00211C                     __end_of___xxtofl:
  7116                           	callstack 0
  7117                           
  7118 ;; *************** function ___wmul *****************
  7119 ;; Defined at:
  7120 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul16.c"
  7121 ;; Parameters:    Size  Location     Type
  7122 ;;  multiplier      2    0[COMRAM] unsigned int 
  7123 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7124 ;; Auto vars:     Size  Location     Type
  7125 ;;  product         2    4[COMRAM] unsigned int 
  7126 ;; Return value:  Size  Location     Type
  7127 ;;                  2    0[COMRAM] unsigned int 
  7128 ;; Registers used:
  7129 ;;		wreg, status,2, status,0, prodl, prodh
  7130 ;; Tracked objects:
  7131 ;;		On entry : 0/0
  7132 ;;		On exit  : 0/0
  7133 ;;		Unchanged: 0/0
  7134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7135 ;;      Params:         4       0       0       0       0       0       0
  7136 ;;      Locals:         2       0       0       0       0       0       0
  7137 ;;      Temps:          0       0       0       0       0       0       0
  7138 ;;      Totals:         6       0       0       0       0       0       0
  7139 ;;Total ram usage:        6 bytes
  7140 ;; Hardware stack levels used: 1
  7141 ;; This function calls:
  7142 ;;		Nothing
  7143 ;; This function is called by:
  7144 ;;		_main
  7145 ;; This function uses a non-reentrant model
  7146 ;;
  7147                           
  7148                           	psect	text35
  7149   002A74                     __ptext35:
  7150                           	callstack 0
  7151   002A74                     ___wmul:
  7152                           	callstack 30
  7153   002A74  5001               	movf	___wmul@multiplier^0,w,c
  7154   002A76  0203               	mulwf	___wmul@multiplicand^0,c
  7155   002A78  CFF3 F005          	movff	prodl,___wmul@product
  7156   002A7C  CFF4 F006          	movff	prodh,___wmul@product+1
  7157   002A80  5001               	movf	___wmul@multiplier^0,w,c
  7158   002A82  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  7159   002A84  50F3               	movf	243,w,c
  7160   002A86  2606               	addwf	(___wmul@product+1)^0,f,c
  7161   002A88  5002               	movf	(___wmul@multiplier+1)^0,w,c
  7162   002A8A  0203               	mulwf	___wmul@multiplicand^0,c
  7163   002A8C  50F3               	movf	243,w,c
  7164   002A8E  2606               	addwf	(___wmul@product+1)^0,f,c
  7165   002A90  C005  F001         	movff	___wmul@product,?___wmul
  7166   002A94  C006  F002         	movff	___wmul@product+1,?___wmul+1
  7167   002A98  0012               	return		;funcret
  7168   002A9A                     __end_of___wmul:
  7169                           	callstack 0
  7170                           
  7171 ;; *************** function ___fltol *****************
  7172 ;; Defined at:
  7173 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\fltol.c"
  7174 ;; Parameters:    Size  Location     Type
  7175 ;;  f1              4   39[COMRAM] unsigned int 
  7176 ;; Auto vars:     Size  Location     Type
  7177 ;;  exp1            1   48[COMRAM] unsigned char 
  7178 ;;  sign1           1   47[COMRAM] unsigned char 
  7179 ;; Return value:  Size  Location     Type
  7180 ;;                  4   39[COMRAM] long 
  7181 ;; Registers used:
  7182 ;;		wreg, status,2, status,0
  7183 ;; Tracked objects:
  7184 ;;		On entry : 0/0
  7185 ;;		On exit  : 0/0
  7186 ;;		Unchanged: 0/0
  7187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7188 ;;      Params:         4       0       0       0       0       0       0
  7189 ;;      Locals:         2       0       0       0       0       0       0
  7190 ;;      Temps:          4       0       0       0       0       0       0
  7191 ;;      Totals:        10       0       0       0       0       0       0
  7192 ;;Total ram usage:       10 bytes
  7193 ;; Hardware stack levels used: 1
  7194 ;; This function calls:
  7195 ;;		Nothing
  7196 ;; This function is called by:
  7197 ;;		_main
  7198 ;; This function uses a non-reentrant model
  7199 ;;
  7200                           
  7201                           	psect	text36
  7202   002396                     __ptext36:
  7203                           	callstack 0
  7204   002396                     ___fltol:
  7205                           	callstack 30
  7206   002396  342A               	rlcf	(___fltol@f1+2)^0,w,c
  7207   002398  342B               	rlcf	(___fltol@f1+3)^0,w,c
  7208   00239A  6E31               	movwf	___fltol@exp1^0,c
  7209   00239C  5031               	movf	___fltol@exp1^0,w,c
  7210   00239E  A4D8               	btfss	status,2,c
  7211   0023A0  EFD4  F011         	goto	u3371
  7212   0023A4  EFD6  F011         	goto	u3370
  7213   0023A8                     u3371:
  7214   0023A8  EFE0  F011         	goto	l3354
  7215   0023AC                     u3370:
  7216   0023AC                     l3350:
  7217   0023AC  0E00               	movlw	0
  7218   0023AE  6E28               	movwf	?___fltol^0,c
  7219   0023B0  0E00               	movlw	0
  7220   0023B2  6E29               	movwf	(?___fltol+1)^0,c
  7221   0023B4  0E00               	movlw	0
  7222   0023B6  6E2A               	movwf	(?___fltol+2)^0,c
  7223   0023B8  0E00               	movlw	0
  7224   0023BA  6E2B               	movwf	(?___fltol+3)^0,c
  7225   0023BC  EF4D  F012         	goto	l884
  7226   0023C0                     l3354:
  7227   0023C0  C028  F02C         	movff	___fltol@f1,??___fltol
  7228   0023C4  C029  F02D         	movff	___fltol@f1+1,??___fltol+1
  7229   0023C8  C02A  F02E         	movff	___fltol@f1+2,??___fltol+2
  7230   0023CC  C02B  F02F         	movff	___fltol@f1+3,??___fltol+3
  7231   0023D0  0E20               	movlw	32
  7232   0023D2  EFF0  F011         	goto	u3380
  7233   0023D6                     u3385:
  7234   0023D6  90D8               	bcf	status,0,c
  7235   0023D8  322F               	rrcf	(??___fltol+3)^0,f,c
  7236   0023DA  322E               	rrcf	(??___fltol+2)^0,f,c
  7237   0023DC  322D               	rrcf	(??___fltol+1)^0,f,c
  7238   0023DE  322C               	rrcf	??___fltol^0,f,c
  7239   0023E0                     u3380:
  7240   0023E0  2EE8               	decfsz	wreg,f,c
  7241   0023E2  EFEB  F011         	goto	u3385
  7242   0023E6  502C               	movf	??___fltol^0,w,c
  7243   0023E8  6E30               	movwf	___fltol@sign1^0,c
  7244   0023EA  8E2A               	bsf	(___fltol@f1+2)^0,7,c
  7245   0023EC  0EFF               	movlw	255
  7246   0023EE  1628               	andwf	___fltol@f1^0,f,c
  7247   0023F0  0EFF               	movlw	255
  7248   0023F2  1629               	andwf	(___fltol@f1+1)^0,f,c
  7249   0023F4  0EFF               	movlw	255
  7250   0023F6  162A               	andwf	(___fltol@f1+2)^0,f,c
  7251   0023F8  0E00               	movlw	0
  7252   0023FA  162B               	andwf	(___fltol@f1+3)^0,f,c
  7253   0023FC  0E96               	movlw	150
  7254   0023FE  5E31               	subwf	___fltol@exp1^0,f,c
  7255   002400  BE31               	btfsc	___fltol@exp1^0,7,c
  7256   002402  EF07  F012         	goto	u3390
  7257   002406  EF05  F012         	goto	u3391
  7258   00240A                     u3391:
  7259   00240A  EF1D  F012         	goto	l3374
  7260   00240E                     u3390:
  7261   00240E  5031               	movf	___fltol@exp1^0,w,c
  7262   002410  0A80               	xorlw	128
  7263   002412  0F97               	addlw	151
  7264   002414  B0D8               	btfsc	status,0,c
  7265   002416  EF0F  F012         	goto	u3401
  7266   00241A  EF11  F012         	goto	u3400
  7267   00241E                     u3401:
  7268   00241E  EF13  F012         	goto	l3370
  7269   002422                     u3400:
  7270   002422  EFD6  F011         	goto	l3350
  7271   002426                     l3370:
  7272   002426  90D8               	bcf	status,0,c
  7273   002428  322B               	rrcf	(___fltol@f1+3)^0,f,c
  7274   00242A  322A               	rrcf	(___fltol@f1+2)^0,f,c
  7275   00242C  3229               	rrcf	(___fltol@f1+1)^0,f,c
  7276   00242E  3228               	rrcf	___fltol@f1^0,f,c
  7277   002430  3E31               	incfsz	___fltol@exp1^0,f,c
  7278   002432  EF13  F012         	goto	l3370
  7279   002436  EF35  F012         	goto	l3384
  7280   00243A                     l3374:
  7281   00243A  0E1F               	movlw	31
  7282   00243C  6431               	cpfsgt	___fltol@exp1^0,c
  7283   00243E  EF23  F012         	goto	u3411
  7284   002442  EF25  F012         	goto	u3410
  7285   002446                     u3411:
  7286   002446  EF2D  F012         	goto	l3382
  7287   00244A                     u3410:
  7288   00244A  EFD6  F011         	goto	l3350
  7289   00244E                     l3380:
  7290   00244E  90D8               	bcf	status,0,c
  7291   002450  3628               	rlcf	___fltol@f1^0,f,c
  7292   002452  3629               	rlcf	(___fltol@f1+1)^0,f,c
  7293   002454  362A               	rlcf	(___fltol@f1+2)^0,f,c
  7294   002456  362B               	rlcf	(___fltol@f1+3)^0,f,c
  7295   002458  0631               	decf	___fltol@exp1^0,f,c
  7296   00245A                     l3382:
  7297   00245A  5031               	movf	___fltol@exp1^0,w,c
  7298   00245C  A4D8               	btfss	status,2,c
  7299   00245E  EF33  F012         	goto	u3421
  7300   002462  EF35  F012         	goto	u3420
  7301   002466                     u3421:
  7302   002466  EF27  F012         	goto	l3380
  7303   00246A                     u3420:
  7304   00246A                     l3384:
  7305   00246A  5030               	movf	___fltol@sign1^0,w,c
  7306   00246C  B4D8               	btfsc	status,2,c
  7307   00246E  EF3B  F012         	goto	u3431
  7308   002472  EF3D  F012         	goto	u3430
  7309   002476                     u3431:
  7310   002476  EF45  F012         	goto	l3388
  7311   00247A                     u3430:
  7312   00247A  1E2B               	comf	(___fltol@f1+3)^0,f,c
  7313   00247C  1E2A               	comf	(___fltol@f1+2)^0,f,c
  7314   00247E  1E29               	comf	(___fltol@f1+1)^0,f,c
  7315   002480  6C28               	negf	___fltol@f1^0,c
  7316   002482  0E00               	movlw	0
  7317   002484  2229               	addwfc	(___fltol@f1+1)^0,f,c
  7318   002486  222A               	addwfc	(___fltol@f1+2)^0,f,c
  7319   002488  222B               	addwfc	(___fltol@f1+3)^0,f,c
  7320   00248A                     l3388:
  7321   00248A  C028  F028         	movff	___fltol@f1,?___fltol
  7322   00248E  C029  F029         	movff	___fltol@f1+1,?___fltol+1
  7323   002492  C02A  F02A         	movff	___fltol@f1+2,?___fltol+2
  7324   002496  C02B  F02B         	movff	___fltol@f1+3,?___fltol+3
  7325   00249A                     l884:
  7326   00249A  0012               	return		;funcret
  7327   00249C                     __end_of___fltol:
  7328                           	callstack 0
  7329                           
  7330 ;; *************** function ___fldiv *****************
  7331 ;; Defined at:
  7332 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcdiv.c"
  7333 ;; Parameters:    Size  Location     Type
  7334 ;;  b               4   14[COMRAM] long 
  7335 ;;  a               4   18[COMRAM] long 
  7336 ;; Auto vars:     Size  Location     Type
  7337 ;;  grs             4   33[COMRAM] unsigned long 
  7338 ;;  rem             4   26[COMRAM] unsigned long 
  7339 ;;  new_exp         2   31[COMRAM] short 
  7340 ;;  aexp            1   38[COMRAM] unsigned char 
  7341 ;;  bexp            1   37[COMRAM] unsigned char 
  7342 ;;  sign            1   30[COMRAM] unsigned char 
  7343 ;; Return value:  Size  Location     Type
  7344 ;;                  4   14[COMRAM] unsigned char 
  7345 ;; Registers used:
  7346 ;;		wreg, status,2, status,0
  7347 ;; Tracked objects:
  7348 ;;		On entry : 0/0
  7349 ;;		On exit  : 0/0
  7350 ;;		Unchanged: 0/0
  7351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7352 ;;      Params:         8       0       0       0       0       0       0
  7353 ;;      Locals:        13       0       0       0       0       0       0
  7354 ;;      Temps:          4       0       0       0       0       0       0
  7355 ;;      Totals:        25       0       0       0       0       0       0
  7356 ;;Total ram usage:       25 bytes
  7357 ;; Hardware stack levels used: 1
  7358 ;; This function calls:
  7359 ;;		Nothing
  7360 ;; This function is called by:
  7361 ;;		_main
  7362 ;; This function uses a non-reentrant model
  7363 ;;
  7364                           
  7365                           	psect	text37
  7366   0019DE                     __ptext37:
  7367                           	callstack 0
  7368   0019DE                     ___fldiv:
  7369                           	callstack 30
  7370   0019DE  5012               	movf	(___fldiv@b+3)^0,w,c
  7371   0019E0  0B80               	andlw	128
  7372   0019E2  6E1F               	movwf	___fldiv@sign^0,c
  7373   0019E4  5012               	movf	(___fldiv@b+3)^0,w,c
  7374   0019E6  2412               	addwf	(___fldiv@b+3)^0,w,c
  7375   0019E8  6E26               	movwf	___fldiv@bexp^0,c
  7376   0019EA  AE11               	btfss	(___fldiv@b+2)^0,7,c
  7377   0019EC  EFFA  F00C         	goto	u3141
  7378   0019F0  EFFC  F00C         	goto	u3140
  7379   0019F4                     u3141:
  7380   0019F4  EFFD  F00C         	goto	l3216
  7381   0019F8                     u3140:
  7382   0019F8  8026               	bsf	___fldiv@bexp^0,0,c
  7383   0019FA                     l3216:
  7384   0019FA  5026               	movf	___fldiv@bexp^0,w,c
  7385   0019FC  B4D8               	btfsc	status,2,c
  7386   0019FE  EF03  F00D         	goto	u3151
  7387   001A02  EF05  F00D         	goto	u3150
  7388   001A06                     u3151:
  7389   001A06  EF1A  F00D         	goto	l3226
  7390   001A0A                     u3150:
  7391   001A0A  2826               	incf	___fldiv@bexp^0,w,c
  7392   001A0C  A4D8               	btfss	status,2,c
  7393   001A0E  EF0B  F00D         	goto	u3161
  7394   001A12  EF0D  F00D         	goto	u3160
  7395   001A16                     u3161:
  7396   001A16  EF15  F00D         	goto	l3222
  7397   001A1A                     u3160:
  7398   001A1A  0E00               	movlw	0
  7399   001A1C  6E0F               	movwf	___fldiv@b^0,c
  7400   001A1E  0E00               	movlw	0
  7401   001A20  6E10               	movwf	(___fldiv@b+1)^0,c
  7402   001A22  0E00               	movlw	0
  7403   001A24  6E11               	movwf	(___fldiv@b+2)^0,c
  7404   001A26  0E00               	movlw	0
  7405   001A28  6E12               	movwf	(___fldiv@b+3)^0,c
  7406   001A2A                     l3222:
  7407   001A2A  8E11               	bsf	(___fldiv@b+2)^0,7,c
  7408   001A2C  0E00               	movlw	0
  7409   001A2E  6E12               	movwf	(___fldiv@b+3)^0,c
  7410   001A30  EF22  F00D         	goto	l3228
  7411   001A34                     l3226:
  7412   001A34  0E00               	movlw	0
  7413   001A36  6E0F               	movwf	___fldiv@b^0,c
  7414   001A38  0E00               	movlw	0
  7415   001A3A  6E10               	movwf	(___fldiv@b+1)^0,c
  7416   001A3C  0E00               	movlw	0
  7417   001A3E  6E11               	movwf	(___fldiv@b+2)^0,c
  7418   001A40  0E00               	movlw	0
  7419   001A42  6E12               	movwf	(___fldiv@b+3)^0,c
  7420   001A44                     l3228:
  7421   001A44  5016               	movf	(___fldiv@a+3)^0,w,c
  7422   001A46  0B80               	andlw	128
  7423   001A48  1A1F               	xorwf	___fldiv@sign^0,f,c
  7424   001A4A  5016               	movf	(___fldiv@a+3)^0,w,c
  7425   001A4C  2416               	addwf	(___fldiv@a+3)^0,w,c
  7426   001A4E  6E27               	movwf	___fldiv@aexp^0,c
  7427   001A50  AE15               	btfss	(___fldiv@a+2)^0,7,c
  7428   001A52  EF2D  F00D         	goto	u3171
  7429   001A56  EF2F  F00D         	goto	u3170
  7430   001A5A                     u3171:
  7431   001A5A  EF30  F00D         	goto	l3236
  7432   001A5E                     u3170:
  7433   001A5E  8027               	bsf	___fldiv@aexp^0,0,c
  7434   001A60                     l3236:
  7435   001A60  5027               	movf	___fldiv@aexp^0,w,c
  7436   001A62  B4D8               	btfsc	status,2,c
  7437   001A64  EF36  F00D         	goto	u3181
  7438   001A68  EF38  F00D         	goto	u3180
  7439   001A6C                     u3181:
  7440   001A6C  EF4D  F00D         	goto	l3246
  7441   001A70                     u3180:
  7442   001A70  2827               	incf	___fldiv@aexp^0,w,c
  7443   001A72  A4D8               	btfss	status,2,c
  7444   001A74  EF3E  F00D         	goto	u3191
  7445   001A78  EF40  F00D         	goto	u3190
  7446   001A7C                     u3191:
  7447   001A7C  EF48  F00D         	goto	l3242
  7448   001A80                     u3190:
  7449   001A80  0E00               	movlw	0
  7450   001A82  6E13               	movwf	___fldiv@a^0,c
  7451   001A84  0E00               	movlw	0
  7452   001A86  6E14               	movwf	(___fldiv@a+1)^0,c
  7453   001A88  0E00               	movlw	0
  7454   001A8A  6E15               	movwf	(___fldiv@a+2)^0,c
  7455   001A8C  0E00               	movlw	0
  7456   001A8E  6E16               	movwf	(___fldiv@a+3)^0,c
  7457   001A90                     l3242:
  7458   001A90  8E15               	bsf	(___fldiv@a+2)^0,7,c
  7459   001A92  0E00               	movlw	0
  7460   001A94  6E16               	movwf	(___fldiv@a+3)^0,c
  7461   001A96  EF55  F00D         	goto	l3248
  7462   001A9A                     l3246:
  7463   001A9A  0E00               	movlw	0
  7464   001A9C  6E13               	movwf	___fldiv@a^0,c
  7465   001A9E  0E00               	movlw	0
  7466   001AA0  6E14               	movwf	(___fldiv@a+1)^0,c
  7467   001AA2  0E00               	movlw	0
  7468   001AA4  6E15               	movwf	(___fldiv@a+2)^0,c
  7469   001AA6  0E00               	movlw	0
  7470   001AA8  6E16               	movwf	(___fldiv@a+3)^0,c
  7471   001AAA                     l3248:
  7472   001AAA  5013               	movf	___fldiv@a^0,w,c
  7473   001AAC  1014               	iorwf	(___fldiv@a+1)^0,w,c
  7474   001AAE  1015               	iorwf	(___fldiv@a+2)^0,w,c
  7475   001AB0  1016               	iorwf	(___fldiv@a+3)^0,w,c
  7476   001AB2  A4D8               	btfss	status,2,c
  7477   001AB4  EF5E  F00D         	goto	u3201
  7478   001AB8  EF60  F00D         	goto	u3200
  7479   001ABC                     u3201:
  7480   001ABC  EF78  F00D         	goto	l3260
  7481   001AC0                     u3200:
  7482   001AC0  0E00               	movlw	0
  7483   001AC2  6E0F               	movwf	___fldiv@b^0,c
  7484   001AC4  0E00               	movlw	0
  7485   001AC6  6E10               	movwf	(___fldiv@b+1)^0,c
  7486   001AC8  0E00               	movlw	0
  7487   001ACA  6E11               	movwf	(___fldiv@b+2)^0,c
  7488   001ACC  0E00               	movlw	0
  7489   001ACE  6E12               	movwf	(___fldiv@b+3)^0,c
  7490   001AD0  0E80               	movlw	128
  7491   001AD2  1211               	iorwf	(___fldiv@b+2)^0,f,c
  7492   001AD4  0E7F               	movlw	127
  7493   001AD6  1212               	iorwf	(___fldiv@b+3)^0,f,c
  7494   001AD8                     l3254:
  7495   001AD8  501F               	movf	___fldiv@sign^0,w,c
  7496   001ADA  1212               	iorwf	(___fldiv@b+3)^0,f,c
  7497   001ADC  C00F  F00F         	movff	___fldiv@b,?___fldiv
  7498   001AE0  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
  7499   001AE4  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
  7500   001AE8  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
  7501   001AEC  EFBB  F00E         	goto	l1169
  7502   001AF0                     l3260:
  7503   001AF0  5026               	movf	___fldiv@bexp^0,w,c
  7504   001AF2  A4D8               	btfss	status,2,c
  7505   001AF4  EF7E  F00D         	goto	u3211
  7506   001AF8  EF80  F00D         	goto	u3210
  7507   001AFC                     u3211:
  7508   001AFC  EF8A  F00D         	goto	l3268
  7509   001B00                     u3210:
  7510   001B00  0E00               	movlw	0
  7511   001B02  6E0F               	movwf	?___fldiv^0,c
  7512   001B04  0E00               	movlw	0
  7513   001B06  6E10               	movwf	(?___fldiv+1)^0,c
  7514   001B08  0E00               	movlw	0
  7515   001B0A  6E11               	movwf	(?___fldiv+2)^0,c
  7516   001B0C  0E00               	movlw	0
  7517   001B0E  6E12               	movwf	(?___fldiv+3)^0,c
  7518   001B10  EFBB  F00E         	goto	l1169
  7519   001B14                     l3268:
  7520   001B14  5027               	movf	___fldiv@aexp^0,w,c
  7521   001B16  C026  F017         	movff	___fldiv@bexp,??___fldiv
  7522   001B1A  6A18               	clrf	(??___fldiv+1)^0,c
  7523   001B1C  5E17               	subwf	??___fldiv^0,f,c
  7524   001B1E  0E00               	movlw	0
  7525   001B20  5A18               	subwfb	(??___fldiv+1)^0,f,c
  7526   001B22  0E7F               	movlw	127
  7527   001B24  2417               	addwf	??___fldiv^0,w,c
  7528   001B26  6E20               	movwf	___fldiv@new_exp^0,c
  7529   001B28  0E00               	movlw	0
  7530   001B2A  2018               	addwfc	(??___fldiv+1)^0,w,c
  7531   001B2C  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  7532   001B2E  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
  7533   001B32  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
  7534   001B36  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
  7535   001B3A  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
  7536   001B3E  0E00               	movlw	0
  7537   001B40  6E0F               	movwf	___fldiv@b^0,c
  7538   001B42  0E00               	movlw	0
  7539   001B44  6E10               	movwf	(___fldiv@b+1)^0,c
  7540   001B46  0E00               	movlw	0
  7541   001B48  6E11               	movwf	(___fldiv@b+2)^0,c
  7542   001B4A  0E00               	movlw	0
  7543   001B4C  6E12               	movwf	(___fldiv@b+3)^0,c
  7544   001B4E  0E00               	movlw	0
  7545   001B50  6E22               	movwf	___fldiv@grs^0,c
  7546   001B52  0E00               	movlw	0
  7547   001B54  6E23               	movwf	(___fldiv@grs+1)^0,c
  7548   001B56  0E00               	movlw	0
  7549   001B58  6E24               	movwf	(___fldiv@grs+2)^0,c
  7550   001B5A  0E00               	movlw	0
  7551   001B5C  6E25               	movwf	(___fldiv@grs+3)^0,c
  7552   001B5E  0E00               	movlw	0
  7553   001B60  6E27               	movwf	___fldiv@aexp^0,c
  7554   001B62  EFEB  F00D         	goto	l1171
  7555   001B66                     l3278:
  7556   001B66  5027               	movf	___fldiv@aexp^0,w,c
  7557   001B68  B4D8               	btfsc	status,2,c
  7558   001B6A  EFB9  F00D         	goto	u3221
  7559   001B6E  EFBB  F00D         	goto	u3220
  7560   001B72                     u3221:
  7561   001B72  EFD2  F00D         	goto	l3286
  7562   001B76                     u3220:
  7563   001B76  90D8               	bcf	status,0,c
  7564   001B78  361B               	rlcf	___fldiv@rem^0,f,c
  7565   001B7A  361C               	rlcf	(___fldiv@rem+1)^0,f,c
  7566   001B7C  361D               	rlcf	(___fldiv@rem+2)^0,f,c
  7567   001B7E  361E               	rlcf	(___fldiv@rem+3)^0,f,c
  7568   001B80  90D8               	bcf	status,0,c
  7569   001B82  360F               	rlcf	___fldiv@b^0,f,c
  7570   001B84  3610               	rlcf	(___fldiv@b+1)^0,f,c
  7571   001B86  3611               	rlcf	(___fldiv@b+2)^0,f,c
  7572   001B88  3612               	rlcf	(___fldiv@b+3)^0,f,c
  7573   001B8A  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  7574   001B8C  EFCA  F00D         	goto	u3231
  7575   001B90  EFCC  F00D         	goto	u3230
  7576   001B94                     u3231:
  7577   001B94  EFCD  F00D         	goto	l1174
  7578   001B98                     u3230:
  7579   001B98  800F               	bsf	___fldiv@b^0,0,c
  7580   001B9A                     l1174:
  7581   001B9A  90D8               	bcf	status,0,c
  7582   001B9C  3622               	rlcf	___fldiv@grs^0,f,c
  7583   001B9E  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  7584   001BA0  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  7585   001BA2  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  7586   001BA4                     l3286:
  7587   001BA4  5013               	movf	___fldiv@a^0,w,c
  7588   001BA6  5C1B               	subwf	___fldiv@rem^0,w,c
  7589   001BA8  5014               	movf	(___fldiv@a+1)^0,w,c
  7590   001BAA  581C               	subwfb	(___fldiv@rem+1)^0,w,c
  7591   001BAC  5015               	movf	(___fldiv@a+2)^0,w,c
  7592   001BAE  581D               	subwfb	(___fldiv@rem+2)^0,w,c
  7593   001BB0  5016               	movf	(___fldiv@a+3)^0,w,c
  7594   001BB2  581E               	subwfb	(___fldiv@rem+3)^0,w,c
  7595   001BB4  A0D8               	btfss	status,0,c
  7596   001BB6  EFDF  F00D         	goto	u3241
  7597   001BBA  EFE1  F00D         	goto	u3240
  7598   001BBE                     u3241:
  7599   001BBE  EFEA  F00D         	goto	l3292
  7600   001BC2                     u3240:
  7601   001BC2  8C25               	bsf	(___fldiv@grs+3)^0,6,c
  7602   001BC4  5013               	movf	___fldiv@a^0,w,c
  7603   001BC6  5E1B               	subwf	___fldiv@rem^0,f,c
  7604   001BC8  5014               	movf	(___fldiv@a+1)^0,w,c
  7605   001BCA  5A1C               	subwfb	(___fldiv@rem+1)^0,f,c
  7606   001BCC  5015               	movf	(___fldiv@a+2)^0,w,c
  7607   001BCE  5A1D               	subwfb	(___fldiv@rem+2)^0,f,c
  7608   001BD0  5016               	movf	(___fldiv@a+3)^0,w,c
  7609   001BD2  5A1E               	subwfb	(___fldiv@rem+3)^0,f,c
  7610   001BD4                     l3292:
  7611   001BD4  2A27               	incf	___fldiv@aexp^0,f,c
  7612   001BD6                     l1171:
  7613   001BD6  0E19               	movlw	25
  7614   001BD8  6427               	cpfsgt	___fldiv@aexp^0,c
  7615   001BDA  EFF1  F00D         	goto	u3251
  7616   001BDE  EFF3  F00D         	goto	u3250
  7617   001BE2                     u3251:
  7618   001BE2  EFB3  F00D         	goto	l3278
  7619   001BE6                     u3250:
  7620   001BE6  501B               	movf	___fldiv@rem^0,w,c
  7621   001BE8  101C               	iorwf	(___fldiv@rem+1)^0,w,c
  7622   001BEA  101D               	iorwf	(___fldiv@rem+2)^0,w,c
  7623   001BEC  101E               	iorwf	(___fldiv@rem+3)^0,w,c
  7624   001BEE  B4D8               	btfsc	status,2,c
  7625   001BF0  EFFC  F00D         	goto	u3261
  7626   001BF4  EFFE  F00D         	goto	u3260
  7627   001BF8                     u3261:
  7628   001BF8  EF16  F00E         	goto	l3304
  7629   001BFC                     u3260:
  7630   001BFC  8022               	bsf	___fldiv@grs^0,0,c
  7631   001BFE  EF16  F00E         	goto	l3304
  7632   001C02                     l3298:
  7633   001C02  90D8               	bcf	status,0,c
  7634   001C04  360F               	rlcf	___fldiv@b^0,f,c
  7635   001C06  3610               	rlcf	(___fldiv@b+1)^0,f,c
  7636   001C08  3611               	rlcf	(___fldiv@b+2)^0,f,c
  7637   001C0A  3612               	rlcf	(___fldiv@b+3)^0,f,c
  7638   001C0C  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  7639   001C0E  EF0B  F00E         	goto	u3271
  7640   001C12  EF0D  F00E         	goto	u3270
  7641   001C16                     u3271:
  7642   001C16  EF0E  F00E         	goto	l1180
  7643   001C1A                     u3270:
  7644   001C1A  800F               	bsf	___fldiv@b^0,0,c
  7645   001C1C                     l1180:
  7646   001C1C  90D8               	bcf	status,0,c
  7647   001C1E  3622               	rlcf	___fldiv@grs^0,f,c
  7648   001C20  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  7649   001C22  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  7650   001C24  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  7651   001C26  0620               	decf	___fldiv@new_exp^0,f,c
  7652   001C28  A0D8               	btfss	status,0,c
  7653   001C2A  0621               	decf	(___fldiv@new_exp+1)^0,f,c
  7654   001C2C                     l3304:
  7655   001C2C  AE11               	btfss	(___fldiv@b+2)^0,7,c
  7656   001C2E  EF1B  F00E         	goto	u3281
  7657   001C32  EF1D  F00E         	goto	u3280
  7658   001C36                     u3281:
  7659   001C36  EF01  F00E         	goto	l3298
  7660   001C3A                     u3280:
  7661   001C3A  0E00               	movlw	0
  7662   001C3C  6E27               	movwf	___fldiv@aexp^0,c
  7663   001C3E  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  7664   001C40  EF24  F00E         	goto	u3291
  7665   001C44  EF26  F00E         	goto	u3290
  7666   001C48                     u3291:
  7667   001C48  EF4A  F00E         	goto	l1182
  7668   001C4C                     u3290:
  7669   001C4C  0EFF               	movlw	255
  7670   001C4E  1422               	andwf	___fldiv@grs^0,w,c
  7671   001C50  6E17               	movwf	??___fldiv^0,c
  7672   001C52  0EFF               	movlw	255
  7673   001C54  1423               	andwf	(___fldiv@grs+1)^0,w,c
  7674   001C56  6E18               	movwf	(??___fldiv+1)^0,c
  7675   001C58  0EFF               	movlw	255
  7676   001C5A  1424               	andwf	(___fldiv@grs+2)^0,w,c
  7677   001C5C  6E19               	movwf	(??___fldiv+2)^0,c
  7678   001C5E  0E7F               	movlw	127
  7679   001C60  1425               	andwf	(___fldiv@grs+3)^0,w,c
  7680   001C62  6E1A               	movwf	(??___fldiv+3)^0,c
  7681   001C64  5017               	movf	??___fldiv^0,w,c
  7682   001C66  1018               	iorwf	(??___fldiv+1)^0,w,c
  7683   001C68  1019               	iorwf	(??___fldiv+2)^0,w,c
  7684   001C6A  101A               	iorwf	(??___fldiv+3)^0,w,c
  7685   001C6C  B4D8               	btfsc	status,2,c
  7686   001C6E  EF3B  F00E         	goto	u3301
  7687   001C72  EF3D  F00E         	goto	u3300
  7688   001C76                     u3301:
  7689   001C76  EF41  F00E         	goto	l1183
  7690   001C7A                     u3300:
  7691   001C7A                     l3312:
  7692   001C7A  0E01               	movlw	1
  7693   001C7C  6E27               	movwf	___fldiv@aexp^0,c
  7694   001C7E  EF4A  F00E         	goto	l1182
  7695   001C82                     l1183:
  7696   001C82  A00F               	btfss	___fldiv@b^0,0,c
  7697   001C84  EF46  F00E         	goto	u3311
  7698   001C88  EF48  F00E         	goto	u3310
  7699   001C8C                     u3311:
  7700   001C8C  EF4A  F00E         	goto	l1182
  7701   001C90                     u3310:
  7702   001C90  EF3D  F00E         	goto	l3312
  7703   001C94                     l1182:
  7704   001C94  5027               	movf	___fldiv@aexp^0,w,c
  7705   001C96  B4D8               	btfsc	status,2,c
  7706   001C98  EF50  F00E         	goto	u3321
  7707   001C9C  EF52  F00E         	goto	u3320
  7708   001CA0                     u3321:
  7709   001CA0  EF76  F00E         	goto	l3324
  7710   001CA4                     u3320:
  7711   001CA4  0E01               	movlw	1
  7712   001CA6  260F               	addwf	___fldiv@b^0,f,c
  7713   001CA8  0E00               	movlw	0
  7714   001CAA  2210               	addwfc	(___fldiv@b+1)^0,f,c
  7715   001CAC  2211               	addwfc	(___fldiv@b+2)^0,f,c
  7716   001CAE  2212               	addwfc	(___fldiv@b+3)^0,f,c
  7717   001CB0  A012               	btfss	(___fldiv@b+3)^0,0,c
  7718   001CB2  EF5D  F00E         	goto	u3331
  7719   001CB6  EF5F  F00E         	goto	u3330
  7720   001CBA                     u3331:
  7721   001CBA  EF76  F00E         	goto	l3324
  7722   001CBE                     u3330:
  7723   001CBE  C00F  F017         	movff	___fldiv@b,??___fldiv
  7724   001CC2  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
  7725   001CC6  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
  7726   001CCA  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
  7727   001CCE  341A               	rlcf	(??___fldiv+3)^0,w,c
  7728   001CD0  321A               	rrcf	(??___fldiv+3)^0,f,c
  7729   001CD2  3219               	rrcf	(??___fldiv+2)^0,f,c
  7730   001CD4  3218               	rrcf	(??___fldiv+1)^0,f,c
  7731   001CD6  3217               	rrcf	??___fldiv^0,f,c
  7732   001CD8  C017  F00F         	movff	??___fldiv,___fldiv@b
  7733   001CDC  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
  7734   001CE0  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
  7735   001CE4  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
  7736   001CE8  4A20               	infsnz	___fldiv@new_exp^0,f,c
  7737   001CEA  2A21               	incf	(___fldiv@new_exp+1)^0,f,c
  7738   001CEC                     l3324:
  7739   001CEC  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7740   001CEE  EF81  F00E         	goto	u3341
  7741   001CF2  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  7742   001CF4  E108               	bnz	u3340
  7743   001CF6  2820               	incf	___fldiv@new_exp^0,w,c
  7744   001CF8  A0D8               	btfss	status,0,c
  7745   001CFA  EF81  F00E         	goto	u3341
  7746   001CFE  EF83  F00E         	goto	u3340
  7747   001D02                     u3341:
  7748   001D02  EF8E  F00E         	goto	l3328
  7749   001D06                     u3340:
  7750   001D06  0E00               	movlw	0
  7751   001D08  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  7752   001D0A  6820               	setf	___fldiv@new_exp^0,c
  7753   001D0C  0E00               	movlw	0
  7754   001D0E  6E0F               	movwf	___fldiv@b^0,c
  7755   001D10  0E00               	movlw	0
  7756   001D12  6E10               	movwf	(___fldiv@b+1)^0,c
  7757   001D14  0E00               	movlw	0
  7758   001D16  6E11               	movwf	(___fldiv@b+2)^0,c
  7759   001D18  0E00               	movlw	0
  7760   001D1A  6E12               	movwf	(___fldiv@b+3)^0,c
  7761   001D1C                     l3328:
  7762   001D1C  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7763   001D1E  EF9B  F00E         	goto	u3350
  7764   001D22  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  7765   001D24  E106               	bnz	u3351
  7766   001D26  0420               	decf	___fldiv@new_exp^0,w,c
  7767   001D28  B0D8               	btfsc	status,0,c
  7768   001D2A  EF99  F00E         	goto	u3351
  7769   001D2E  EF9B  F00E         	goto	u3350
  7770   001D32                     u3351:
  7771   001D32  EFA9  F00E         	goto	l3332
  7772   001D36                     u3350:
  7773   001D36  0E00               	movlw	0
  7774   001D38  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  7775   001D3A  0E00               	movlw	0
  7776   001D3C  6E20               	movwf	___fldiv@new_exp^0,c
  7777   001D3E  0E00               	movlw	0
  7778   001D40  6E0F               	movwf	___fldiv@b^0,c
  7779   001D42  0E00               	movlw	0
  7780   001D44  6E10               	movwf	(___fldiv@b+1)^0,c
  7781   001D46  0E00               	movlw	0
  7782   001D48  6E11               	movwf	(___fldiv@b+2)^0,c
  7783   001D4A  0E00               	movlw	0
  7784   001D4C  6E12               	movwf	(___fldiv@b+3)^0,c
  7785   001D4E  0E00               	movlw	0
  7786   001D50  6E1F               	movwf	___fldiv@sign^0,c
  7787   001D52                     l3332:
  7788   001D52  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
  7789   001D56  A026               	btfss	___fldiv@bexp^0,0,c
  7790   001D58  EFB0  F00E         	goto	u3361
  7791   001D5C  EFB2  F00E         	goto	u3360
  7792   001D60                     u3361:
  7793   001D60  EFB5  F00E         	goto	l3338
  7794   001D64                     u3360:
  7795   001D64  8E11               	bsf	(___fldiv@b+2)^0,7,c
  7796   001D66  EFB6  F00E         	goto	l3340
  7797   001D6A                     l3338:
  7798   001D6A  9E11               	bcf	(___fldiv@b+2)^0,7,c
  7799   001D6C                     l3340:
  7800   001D6C  90D8               	bcf	status,0,c
  7801   001D6E  3026               	rrcf	___fldiv@bexp^0,w,c
  7802   001D70  6E12               	movwf	(___fldiv@b+3)^0,c
  7803   001D72  EF6C  F00D         	goto	l3254
  7804   001D76                     l1169:
  7805   001D76  0012               	return		;funcret
  7806   001D78                     __end_of___fldiv:
  7807                           	callstack 0
  7808                           
  7809                           	psect	rparam
  7810   000000                     
  7811                           	psect	idloc
  7812                           
  7813                           ;Config register IDLOC0 @ 0x200000
  7814                           ;	unspecified, using default values
  7815   200000                     	org	2097152
  7816   200000  FF                 	db	255
  7817                           
  7818                           ;Config register IDLOC1 @ 0x200001
  7819                           ;	unspecified, using default values
  7820   200001                     	org	2097153
  7821   200001  FF                 	db	255
  7822                           
  7823                           ;Config register IDLOC2 @ 0x200002
  7824                           ;	unspecified, using default values
  7825   200002                     	org	2097154
  7826   200002  FF                 	db	255
  7827                           
  7828                           ;Config register IDLOC3 @ 0x200003
  7829                           ;	unspecified, using default values
  7830   200003                     	org	2097155
  7831   200003  FF                 	db	255
  7832                           
  7833                           ;Config register IDLOC4 @ 0x200004
  7834                           ;	unspecified, using default values
  7835   200004                     	org	2097156
  7836   200004  FF                 	db	255
  7837                           
  7838                           ;Config register IDLOC5 @ 0x200005
  7839                           ;	unspecified, using default values
  7840   200005                     	org	2097157
  7841   200005  FF                 	db	255
  7842                           
  7843                           ;Config register IDLOC6 @ 0x200006
  7844                           ;	unspecified, using default values
  7845   200006                     	org	2097158
  7846   200006  FF                 	db	255
  7847                           
  7848                           ;Config register IDLOC7 @ 0x200007
  7849                           ;	unspecified, using default values
  7850   200007                     	org	2097159
  7851   200007  FF                 	db	255
  7852                           
  7853                           	psect	config
  7854                           
  7855                           ; Padding undefined space
  7856   300000                     	org	3145728
  7857   300000  FF                 	db	255
  7858                           
  7859                           ;Config register CONFIG1H @ 0x300001
  7860                           ;	unspecified, using default values
  7861                           ;	Oscillator Selection bits
  7862                           ;	OSC = 0x7, unprogrammed default
  7863                           ;	Fail-Safe Clock Monitor Enable bit
  7864                           ;	FCMEN = 0x0, unprogrammed default
  7865                           ;	Internal/External Oscillator Switchover bit
  7866                           ;	IESO = 0x0, unprogrammed default
  7867   300001                     	org	3145729
  7868   300001  07                 	db	7
  7869                           
  7870                           ;Config register CONFIG2L @ 0x300002
  7871                           ;	unspecified, using default values
  7872                           ;	Power-up Timer Enable bit
  7873                           ;	PWRT = 0x1, unprogrammed default
  7874                           ;	Brown-out Reset Enable bits
  7875                           ;	BOREN = 0x3, unprogrammed default
  7876                           ;	Brown-out Reset Voltage bits
  7877                           ;	BORV = 0x3, unprogrammed default
  7878   300002                     	org	3145730
  7879   300002  1F                 	db	31
  7880                           
  7881                           ;Config register CONFIG2H @ 0x300003
  7882                           ;	unspecified, using default values
  7883                           ;	Watchdog Timer Enable bit
  7884                           ;	WDT = 0x1, unprogrammed default
  7885                           ;	Watchdog Timer Postscale Select bits
  7886                           ;	WDTPS = 0xF, unprogrammed default
  7887   300003                     	org	3145731
  7888   300003  1F                 	db	31
  7889                           
  7890                           ; Padding undefined space
  7891   300004                     	org	3145732
  7892   300004  FF                 	db	255
  7893                           
  7894                           ;Config register CONFIG3H @ 0x300005
  7895                           ;	unspecified, using default values
  7896                           ;	PORTB A/D Enable bit
  7897                           ;	PBADEN = 0x1, unprogrammed default
  7898                           ;	Low-Power Timer 1 Oscillator Enable bit
  7899                           ;	LPT1OSC = 0x0, unprogrammed default
  7900                           ;	MCLR Pin Enable bit
  7901                           ;	MCLRE = 0x1, unprogrammed default
  7902   300005                     	org	3145733
  7903   300005  82                 	db	130
  7904                           
  7905                           ;Config register CONFIG4L @ 0x300006
  7906                           ;	unspecified, using default values
  7907                           ;	Stack Full/Underflow Reset Enable bit
  7908                           ;	STVREN = 0x1, unprogrammed default
  7909                           ;	Single-Supply ICSP Enable bit
  7910                           ;	LVP = 0x1, unprogrammed default
  7911                           ;	Boot Block Size Select bit
  7912                           ;	BBSIZ = 0x0, unprogrammed default
  7913                           ;	Extended Instruction Set Enable bit
  7914                           ;	XINST = 0x0, unprogrammed default
  7915                           ;	Background Debugger Enable bit
  7916                           ;	DEBUG = 0x1, unprogrammed default
  7917   300006                     	org	3145734
  7918   300006  85                 	db	133
  7919                           
  7920                           ; Padding undefined space
  7921   300007                     	org	3145735
  7922   300007  FF                 	db	255
  7923                           
  7924                           ;Config register CONFIG5L @ 0x300008
  7925                           ;	unspecified, using default values
  7926                           ;	Code Protection bit
  7927                           ;	CP0 = 0x1, unprogrammed default
  7928                           ;	Code Protection bit
  7929                           ;	CP1 = 0x1, unprogrammed default
  7930                           ;	Code Protection bit
  7931                           ;	CP2 = 0x1, unprogrammed default
  7932                           ;	Code Protection bit
  7933                           ;	CP3 = 0x1, unprogrammed default
  7934   300008                     	org	3145736
  7935   300008  0F                 	db	15
  7936                           
  7937                           ;Config register CONFIG5H @ 0x300009
  7938                           ;	unspecified, using default values
  7939                           ;	Boot Block Code Protection bit
  7940                           ;	CPB = 0x1, unprogrammed default
  7941                           ;	Data EEPROM Code Protection bit
  7942                           ;	CPD = 0x1, unprogrammed default
  7943   300009                     	org	3145737
  7944   300009  C0                 	db	192
  7945                           
  7946                           ;Config register CONFIG6L @ 0x30000A
  7947                           ;	unspecified, using default values
  7948                           ;	Write Protection bit
  7949                           ;	WRT0 = 0x1, unprogrammed default
  7950                           ;	Write Protection bit
  7951                           ;	WRT1 = 0x1, unprogrammed default
  7952                           ;	Write Protection bit
  7953                           ;	WRT2 = 0x1, unprogrammed default
  7954                           ;	Write Protection bit
  7955                           ;	WRT3 = 0x1, unprogrammed default
  7956   30000A                     	org	3145738
  7957   30000A  0F                 	db	15
  7958                           
  7959                           ;Config register CONFIG6H @ 0x30000B
  7960                           ;	unspecified, using default values
  7961                           ;	Configuration Register Write Protection bit
  7962                           ;	WRTC = 0x1, unprogrammed default
  7963                           ;	Boot Block Write Protection bit
  7964                           ;	WRTB = 0x1, unprogrammed default
  7965                           ;	Data EEPROM Write Protection bit
  7966                           ;	WRTD = 0x1, unprogrammed default
  7967   30000B                     	org	3145739
  7968   30000B  E0                 	db	224
  7969                           
  7970                           ;Config register CONFIG7L @ 0x30000C
  7971                           ;	unspecified, using default values
  7972                           ;	Table Read Protection bit
  7973                           ;	EBTR0 = 0x1, unprogrammed default
  7974                           ;	Table Read Protection bit
  7975                           ;	EBTR1 = 0x1, unprogrammed default
  7976                           ;	Table Read Protection bit
  7977                           ;	EBTR2 = 0x1, unprogrammed default
  7978                           ;	Table Read Protection bit
  7979                           ;	EBTR3 = 0x1, unprogrammed default
  7980   30000C                     	org	3145740
  7981   30000C  0F                 	db	15
  7982                           
  7983                           ;Config register CONFIG7H @ 0x30000D
  7984                           ;	unspecified, using default values
  7985                           ;	Boot Block Table Read Protection bit
  7986                           ;	EBTRB = 0x1, unprogrammed default
  7987   30000D                     	org	3145741
  7988   30000D  40                 	db	64
  7989                           tosu	equ	0xFFF
  7990                           tosh	equ	0xFFE
  7991                           tosl	equ	0xFFD
  7992                           stkptr	equ	0xFFC
  7993                           pclatu	equ	0xFFB
  7994                           pclath	equ	0xFFA
  7995                           pcl	equ	0xFF9
  7996                           tblptru	equ	0xFF8
  7997                           tblptrh	equ	0xFF7
  7998                           tblptrl	equ	0xFF6
  7999                           tablat	equ	0xFF5
  8000                           prodh	equ	0xFF4
  8001                           prodl	equ	0xFF3
  8002                           indf0	equ	0xFEF
  8003                           postinc0	equ	0xFEE
  8004                           postdec0	equ	0xFED
  8005                           preinc0	equ	0xFEC
  8006                           plusw0	equ	0xFEB
  8007                           fsr0h	equ	0xFEA
  8008                           fsr0l	equ	0xFE9
  8009                           wreg	equ	0xFE8
  8010                           indf1	equ	0xFE7
  8011                           postinc1	equ	0xFE6
  8012                           postdec1	equ	0xFE5
  8013                           preinc1	equ	0xFE4
  8014                           plusw1	equ	0xFE3
  8015                           fsr1h	equ	0xFE2
  8016                           fsr1l	equ	0xFE1
  8017                           bsr	equ	0xFE0
  8018                           indf2	equ	0xFDF
  8019                           postinc2	equ	0xFDE
  8020                           postdec2	equ	0xFDD
  8021                           preinc2	equ	0xFDC
  8022                           plusw2	equ	0xFDB
  8023                           fsr2h	equ	0xFDA
  8024                           fsr2l	equ	0xFD9
  8025                           status	equ	0xFD8

Data Sizes:
    Strings     145
    Constant    0
    Data        64
    BSS         35
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     83      95
    BANK0           160     53     140
    BANK1           256    180     180
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    puts@s	PTR const unsigned char  size(2) Largest target is 180
		 -> STR_15(CODE[3]), STR_14(CODE[3]), main@download1(COMRAM[18]), main@download(BANK1[180]), 

    store_data@write	PTR unsigned char  size(2) Largest target is 10
		 -> main@write(COMRAM[10]), 

    clcd_print@data	PTR const unsigned char  size(2) Largest target is 27
		 -> STR_19(CODE[15]), STR_18(CODE[14]), STR_17(CODE[8]), STR_16(CODE[13]), 
		 -> STR_13(CODE[9]), STR_12(CODE[14]), STR_11(CODE[14]), STR_10(CODE[8]), 
		 -> STR_9(CODE[10]), STR_8(CODE[13]), STR_7(CODE[13]), STR_6(CODE[9]), 
		 -> STR_5(CODE[9]), STR_4(CODE[9]), STR_3(CODE[3]), STR_2(CODE[3]), 
		 -> STR_1(CODE[5]), main@gear(BANK0[27]), 


Critical Paths under _main in COMRAM

    _main->___fltol
    _store_data->_write_external_eeprom
    _write_external_eeprom->_i2c_write
    _read_external_eeprom->_i2c_write
    _puts->___wmul
    _main_menu->_write_ds1307
    _init_config->_init_ds1307
    _init_ds1307->_write_ds1307
    _write_ds1307->___awdiv
    _init_clcd->_clcd_write
    _get_time->_read_ds1307
    _read_ds1307->_i2c_write
    _clcd_putch->___awdiv
    _clcd_print->___wmul
    ___fltol->___fldiv
    ___fldiv->___xxtofl

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               267   267      0   30451
                                             49 COMRAM    34    34      0
                                              0 BANK0     53    53      0
                                              0 BANK1    180   180      0
                            ___awdiv
                            ___awmod
                            ___fldiv
                            ___fltol
                             ___wmul
                           ___xxtofl
                         _clcd_print
                         _clcd_putch
                         _clcd_write
                         _dash_board
                           _get_time
                        _init_config
                          _main_menu
                               _puts
                           _read_adc
               _read_external_eeprom
                      _read_switches
                         _store_data
 ---------------------------------------------------------------------------------
 (1) _store_data                                          13    11      2     954
                                              5 COMRAM    13    11      2
               _read_external_eeprom
              _write_external_eeprom
 ---------------------------------------------------------------------------------
 (2) _write_external_eeprom                                4     3      1     393
                                              1 COMRAM     4     3      1
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _read_external_eeprom                                 2     2      0      67
                                              1 COMRAM     2     2      0
                           _i2c_read
                      _i2c_rep_start
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (1) _read_switches                                        1     1      0      44
                                              0 COMRAM     1     1      0
                           _scan_key
 ---------------------------------------------------------------------------------
 (2) _scan_key                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read_adc                                             7     5      2      45
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _puts                                                 2     0      2     371
                                              6 COMRAM     2     0      2
                             ___wmul (ARG)
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _main_menu                                            3     3      0    5950
                                             10 COMRAM     3     3      0
                            ___awdiv
                            ___awmod
                       _write_ds1307
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4    2424
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    2884
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0    1842
                           _init_adc
                          _init_clcd
                        _init_ds1307
                           _init_i2c
                 _init_matrix_keypad
                          _init_uart
 ---------------------------------------------------------------------------------
 (2) _init_uart                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_matrix_keypad                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_i2c                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_ds1307                                          1     1      0     734
                                             10 COMRAM     1     1      0
                        _read_ds1307
                       _write_ds1307
 ---------------------------------------------------------------------------------
 (2) _write_ds1307                                         2     1      1     598
                                              8 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _init_clcd                                            1     1      0    1108
                                              2 COMRAM     1     1      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _init_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_time                                             0     0      0      67
                        _read_ds1307
 ---------------------------------------------------------------------------------
 (3) _read_ds1307                                          2     2      0      67
                                              1 COMRAM     2     2      0
                           _i2c_read
                      _i2c_rep_start
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (3) _i2c_write                                            1     1      0      22
                                              0 COMRAM     1     1      0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_stop                                             0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_start                                            0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_rep_start                                        0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_read                                             0     0      0       0
                         _i2c_no_ack
                        _i2c_rx_mode
 ---------------------------------------------------------------------------------
 (4) _i2c_rx_mode                                          0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_idle                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _i2c_no_ack                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _dash_board                                           2     2      0     154
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _clcd_putch                                           2     1      1    5408
                                              8 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _clcd_print                                           3     0      3    3911
                                              6 COMRAM     3     0      3
                             ___wmul (ARG)
                         _clcd_write
 ---------------------------------------------------------------------------------
 (3) _clcd_write                                           2     1      1    1108
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4    1527
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     305
                                             39 COMRAM    10     6      4
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             25    17      8    1399
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___awmod
   ___fldiv
     ___xxtofl (ARG)
   ___fltol
     ___fldiv (ARG)
     ___xxtofl (ARG)
   ___wmul
   ___xxtofl
   _clcd_print
     ___wmul (ARG)
     _clcd_write (ARG)
   _clcd_putch
     ___awdiv (ARG)
     ___awmod (ARG)
     _clcd_write (ARG)
   _clcd_write
   _dash_board
   _get_time
     _read_ds1307
       _i2c_read
         _i2c_no_ack
         _i2c_rx_mode
           _i2c_idle
       _i2c_rep_start
         _i2c_idle
       _i2c_start
         _i2c_idle
       _i2c_stop
         _i2c_idle
       _i2c_write
         _i2c_idle
   _init_config
     _init_adc
     _init_clcd
       _clcd_write
     _init_ds1307
       _read_ds1307
       _write_ds1307
         ___awdiv (ARG)
         ___awmod (ARG)
         _i2c_start (ARG)
         _i2c_stop (ARG)
         _i2c_write (ARG)
     _init_i2c
     _init_matrix_keypad
     _init_uart
   _main_menu
     ___awdiv
     ___awmod
     _write_ds1307
   _puts
     ___wmul (ARG)
     _putch (ARG)
   _read_adc
   _read_external_eeprom
     _i2c_read
     _i2c_rep_start
     _i2c_start
     _i2c_stop
     _i2c_write
   _read_switches
     _scan_key
   _store_data
     _read_external_eeprom
     _write_external_eeprom
       _i2c_start
       _i2c_stop
       _i2c_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      26        0.0%
BITBIGSFRl         281      0       0      24        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     B4      B4       7       70.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     35      8C       5       87.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     53      5F       1      100.0%
BITBIGSFRhhhlhh     27      0       0      17        0.0%
BITBIGSFRhl          F      0       0      23        0.0%
BITBIGSFRhhhh        E      0       0      16        0.0%
BITBIGSFRhhlhhl      9      0       0      20        0.0%
BITBIGSFRhhlhhh      8      0       0      19        0.0%
BITBIGSFRhhll        8      0       0      22        0.0%
BITBIGSFRhhlhhh      7      0       0      18        0.0%
BITBIGSFRhhlhl       2      0       0      21        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     19F      25        0.0%
DATA                 0      0     19F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Thu Nov 28 11:55:39 2024

                 ___fldiv@aexp 0027                   ___fldiv@bexp 0026                   ___fldiv@sign 001F  
        _write_external_eeprom 296C                 clcd_print@addr 0009                 clcd_print@data 0007  
                           l22 2A1A                             l23 2A1E                             l32 281C  
                           l26 26B6                             l35 2B3E                             _GO 7E11  
                 ___awdiv@sign 0006            ___wmul@multiplicand 0003             _init_matrix_keypad 2B56  
                          l200 22A8                            l201 2394                            l106 2B0E  
                          l210 2312                            l202 22E4                            l203 22BC  
                          l212 2326                            l205 22D0                            l230 27B0  
                          l311 19DC                            l215 2356                            l208 22FE  
                          l217 236A                            l209 233A                            l129 14D6  
                          l145 0D8C                            l218 2392                            l219 237E  
                          l148 0EEC                            l430 2A72                            l350 296A  
                          l407 1F66                            l344 2AB8                            l424 2924  
                          l512 29AA                            l427 2AF4                            l347 293E  
                          l515 2A48                            l269 1592                            l197 2B66  
                          l373 228C                            l470 2B76                            l526 2738  
                          l471 2B78                            l296 1998                            l481 2B98  
                          l465 2B54                            l298 18B6                            l490 2BB0  
                          l563 2AD6                            l468 2B68                            l484 2BA8  
                          l493 2BBC                            l478 2BA0                            l566 2B12  
                          l487 2B84                            l831 260E                            l575 28DC  
                          l496 2B90                            l568 2B20                            l569 2B26  
                          l818 255E                            l587 2A98                            _CKE 7E3E  
                          l884 249A                            _RC0 7C10                            _RC1 7C11  
                          _RC2 7C12                            _RD7 7C1F                            _PEN 7E2A  
                          _SEN 7E28                            _RX9 7D5E                            _SMP 7E3F  
                          _TX9 7D66                            _min 0056                            _sec 0054  
                          _set 0095                 clcd_putch@addr 0009                 clcd_putch@data 000A  
                 ___awmod@sign 0006                            wreg 0FE8            ?_init_matrix_keypad 0001  
                 ___fltol@exp1 0031                           l3000 1734                           l1242 1FBE  
                         l3002 1746                           l3010 176E                           l1171 1BD6  
                         l1180 1C1C                           l3020 17CE                           l3012 1782  
                         l3004 174C                           l3100 1EBA                           l1245 211A  
                         l1182 1C94                           l1174 1B9A                           l3030 180E  
                         l3022 17E0                           l3014 1796                           l3006 1754  
                         l3102 1EC2                           l3110 1F08                           l1183 1C82  
                         l1256 20B2                           l3040 186E                           l3024 17E6  
                         l3032 181A                           l3016 17AA                           l3008 1766  
                         l3120 1F44                           l3112 1F1A                           l3104 1ED6  
                         l3200 28A8                           l1169 1D76                           l1249 2056  
                         l3210 19DE                           l3050 18EE                           l3042 1880  
                         l3026 17F4                           l3018 17BC                           l3034 1836  
                         l3122 1F4C                           l3114 1F2E                           l3106 1EEA  
                         l3202 28AC                           l3130 2138                           l3300 1C0C  
                         l3220 1A1A                           l3212 19EA                           l3204 2A74  
                         l3060 1940                           l3052 1902                           l3044 18AA  
                         l3036 1848                           l3028 17FC                           l3124 1F5E  
                         l3116 1F34                           l3108 1EFE                           l3140 2156  
                         l3310 1C4C                           l3302 1C1A                           l3230 1A4A  
                         l3222 1A2A                           l3214 19F8                           l3206 2A90  
                         l3070 1978                           l3062 1954                           l3054 1906  
                         l3046 18CA                           l3038 185C                           l3118 1F3C  
                         l3142 2172                           l3126 211C                           l3320 1CBE  
                         l3312 1C7A                           l3304 1C2C                           l3240 1A80  
                         l3232 1A50                           l3224 1A2C                           l3216 19FA  
                         l3400 1FE4                           l3072 198C                           l3064 1958  
                         l3056 1922                           l3048 18DC                           l2600 2614  
                         l3080 1D7A                           l3160 21CC                           l3144 2188  
                         l3136 2148                           l3128 2124                           l3330 1D36  
                         l3322 1CE8                           l3306 1C3A                           l3250 1AC0  
                         l3242 1A90                           l3234 1A5E                           l3218 1A0A  
                         l3226 1A34                           l3410 203E                           l3066 196C  
                         l3058 192E                           l3074 1998                           l2530 2BB8  
                         l2610 2646                           l2602 261A                           l3090 1DC0  
                         l3082 1D8C                           l3162 21D2                           l3154 21B4  
                         l3146 2198                           l3138 2152                           l3340 1D6C  
                         l3332 1D52                           l3316 1CA4                           l3324 1CEC  
                         l3308 1C3E                           l3252 1AD0                           l3260 1AF0  
                         l3244 1A92                           l3236 1A60                           l3228 1A44  
                         l3420 20A2                           l3412 2040                           l3404 1FF8  
                         l3076 19AA                           l3068 1970                           l2524 2B68  
                         l2532 2B9A                           l2540 2B92                           l2620 2672  
                         l2612 2650                           l2604 261C                           l3092 1DD2  
                         l3084 1D90                           l2700 22CA                           l3172 21FA  
                         l3164 21D6                           l3156 21BC                           l3148 21AC  
                         l3180 2236                           l3500 08DA                           l3334 1D56  
                         l3326 1D06                           l3318 1CB0                           l3270 1B2E  
                         l3262 1B00                           l3254 1AD8                           l3238 1A70  
                         l3246 1A9A                           l3350 23AC                           l3430 20FA  
                         l3422 20C0                           l3414 204C                           l3406 2000  
                         l3078 19BC                           l2526 2BAA                           l2550 2B8E  
                         l2534 2B9C                           l2542 2B94                           l2630 26A4  
                         l2622 267A                           l2614 2658                           l2606 262C  
                         l3094 1DE4                           l3086 1DA4                           l2710 22F8  
                         l3190 2266                           l3182 2248                           l3174 2210  
                         l3166 21F2                           l3158 21C0                           l3510 08EE  
                         l3502 08DE                           l3336 1D64                           l3328 1D1C  
                         l3280 1B76                           l3272 1B3E                           l3264 1B00  
                         l3256 1ADC                           l3248 1AAA                           l3360 23FC  
                         l3432 2108                           l3424 20C2                           l3416 2088  
                         l3408 200C                           l2560 2A00                           l2528 2BAC  
                         l2544 2BA2                           l2536 2B7C                           l2632 26AE  
                         l2624 2684                           l2616 2662                           l2608 2636  
                         l2640 2B56                           l2800 250C                           l3096 1DF8  
                         l3088 1DAC                           l3192 226C                           l3176 2216  
                         l3600 0C36                           l3520 097A                           l3512 08F2  
                         l3504 08E2                           l3440 0698                           l3338 1D6A  
                         l3290 1BC4                           l3282 1B8A                           l3274 1B4E  
                         l3370 2426                           l3362 2400                           l3354 23C0  
                         l3434 210A                           l3426 20C6                           l3418 2094  
                         l2570 2A0A                           l2562 2A02                           l2554 29E8  
                         l2546 2BA4                           l2538 2B80                           l2634 2A9A  
                         l2626 268C                           l2618 2668                           l2650 2B4C  
                         l2642 2B5E                           l2810 2538                           l2802 2512  
                         l3098 1EB2                           l2722 2320                           l2706 22DE  
                         l3194 2270                           l3178 221A                           l3610 0C7A  
                         l3602 0C42                           l3530 09C0                           l3514 0916  
                         l3506 08E6                           l3522 0986                           l3450 072C  
                         l3442 06AA                           l3292 1BD4                           l3284 1B98  
                         l3276 1B5E                           l3268 1B14                           l3380 244E  
                         l3372 2430                           l3364 240E                           l3356 23EA  
                         l3348 2396                           l3428 20EA                           l2572 2A0C  
                         l2564 2A04                           l2556 29FA                           l2548 2B86  
                         l2636 2AAE                           l2628 2696                           l2580 2AEA  
                         l2660 28E6                           l2652 2B4E                           l2644 2B60  
                         l2804 2528                           l2812 253E                           l2820 2560  
                         l3196 2880                           l2732 2350                           l2716 230C  
                         l3188 2250                           l3700 1140                           l3620 0CE4  
                         l3612 0C8C                           l3604 0C4E                           l3540 0A24  
                         l3532 09D4                           l3524 099A                           l3516 0942  
                         l3508 08EA                           l3460 075A                           l3452 0734  
                         l3444 06AE                           l3294 1BE6                           l3286 1BA4  
                         l3278 1B66                           l3382 245A                           l3374 243A  
                         l3358 23EC                           l2566 2A06                           l2558 29FE  
                         l2590 2A5C                           l2638 2AB6                           l2582 2AF0  
                         l2574 2ADA                           l2662 28F2                           l2654 2B50  
                         l2646 2B40                           l2670 2AD2                           l2814 254E  
                         l2806 2530                           l2830 258C                           l2822 2564  
                         l3198 2884                           l2750 238C                           l2910 2774  
                         l2902 273C                           l3710 11E6                           l3702 1176  
                         l3630 0D78                           l3622 0CFE                           l3614 0C9E  
                         l3606 0C5A                           l3550 0A96                           l3542 0A44  
                         l3534 09DE                           l3526 09A4                           l3518 095C  
                         l3470 07A0                           l3462 0764                           l3454 073C  
                         l3446 06BC                           l3438 0694                           l3296 1BFC  
                         l3288 1BC2                           l3384 246A                           l3392 1F6A  
                         l2568 2A08                           l2592 2A60                           l2584 2A4C  
                         l2576 2ADE                           l2664 2906                           l2656 2B52  
                         l2648 2B44                           l2816 2556                           l2808 2532  
                         l2840 25C4                           l2832 2594                           l2824 2572  
                         l2744 2378                           l2728 2334                           l2904 274C  
                         l2920 2796                           l2680 2A36                           l2672 2A22  
                         l2760 2972                           l3712 121A                           l3704 118A  
                         l3632 0D96                           l3640 0E20                           l3624 0D0E  
                         l3616 0CB2                           l3560 0AF8                           l3552 0AA8  
                         l3608 0C66                           l3544 0A58                           l3536 09F0  
                         l3528 09B6                           l3480 07DC                           l3472 07AC  
                         l3464 0774                           l3456 0742                           l3448 070E  
                         l3298 1C02                           l3386 247A                           l3394 1F7A  
                         l2930 14E0                           l2594 2A6C                           l2586 2A50  
                         l2578 2AE4                           l2666 2910                           l2658 28DE  
                         l2850 25FE                           l2842 25DA                           l2834 25A6  
                         l2826 257A                           l2754 2392                           l2738 2364  
                         l2922 27A6                           l2906 2754                           l2682 2A42  
                         l2674 2A26                           l2770 2990                           l2762 2978  
                         l3730 12DC                           l3714 1222                           l3706 119E  
                         l3722 1266                           l3650 0ED8                           l3642 0E36  
                         l3634 0DB6                           l3626 0D22                           l3618 0CDC  
                         l3570 0B64                           l3562 0B20                           l3554 0ABA  
                         l3538 0A10                           l3546 0A78                           l3490 085C  
                         l3482 07E8                           l3474 07B8                           l3466 0784  
                         l3458 0748                           l3388 248A                           l3396 1F88  
                         l2860 27E8                           l2940 152A                           l2932 14F0  
                         l2588 2A56                           l2668 2ABA                           l2780 24AE  
                         l2852 2606                           l2844 25E2                           l2836 25AE  
                         l2828 257E                           l2772 2B12                           l2908 2764  
                         l2916 277E                           l2676 2A2C                           l2764 297E  
                         l3740 1338                           l3732 12EE                           l3724 1290  
                         l3716 1258                           l3708 11D4                           l3660 0F8C  
                         l3652 0EF6                           l3644 0E76                           l3636 0DE0  
                         l3628 0D34                           l3580 0BAE                           l3572 0B6A  
                         l3556 0ACE                           l3564 0B3C                           l3548 0A8C  
                         l3492 087E                           l3484 07F4                           l3476 07C4  
                         l3468 0794                           l3398 1FCE                           l2862 27EC  
                         l2942 1546                           l2934 1502                           l2950 1596  
                         l2598 2610                           l2870 2AFE                           l2790 24D4  
                         l2782 24B6                           l2846 25E8                           l2838 25B6  
                         l2774 2B22                           l2694 22B6                           l2686 228E  
                         l2918 278E                           l2926 27AE                           l2678 2A32  
                         l2766 2984                           l2758 296E                           l3750 1396  
                         l3742 1344                           l3734 12FA                           l3718 125E  
                         l3726 1296                           l3670 0FF4                           l3662 0F96  
                         l3654 0F16                           l3646 0E80                           l3638 0E00  
                         l3590 0BFC                           l3582 0BCE                           l3574 0B6E  
                         l3566 0B44                           l3558 0AEE                           l3494 089E  
                         l3486 081C                           l3478 07D0                           l2856 27B2  
                         l2864 2B2A                           l2960 1602                           l2952 15A6  
                         l2944 154E                           l2936 1514                           l2880 26E4  
                         l2872 2B06                           l2792 24DC                           l2784 24BA  
                         l2776 249C                           l2848 25EE                           l2688 22A2  
                         l2768 2988                           l3760 1430                           l3752 13B0  
                         l3744 134A                           l3736 1306                           l3728 12CA  
                         l3680 1088                           l3672 1038                           l3664 0FB6  
                         l3648 0E94                           l3656 0F36                           l3592 0C08  
                         l3584 0BDA                           l3576 0B98                           l3568 0B50  
                         l3488 083C                           l3496 08BE                           l2858 27C0  
                         l2970 1656                           l2962 160A                           l2954 15BA  
                         l2946 156A                           l2938 1526                           l2890 2722  
                         l2882 26FA                           l2874 2B0A                           l2866 2AF6  
                         l2794 24EE                           l2786 24C8                           l2778 24A0  
                         l3770 14B4                           l3762 143A                           l3754 13D8  
                         l3738 1314                           l3746 137E                           l3682 109A  
                         l3666 0FD6                           l3658 0F4C                           l3674 104C  
                         l3594 0C12                           l3586 0BE6                           l3578 0BA8  
                         l3498 08D2                           l2980 16A6                           l2972 166A  
                         l2964 161E                           l2956 15CC                           l2948 1576  
                         l2884 270C                           l2876 26B8                           l2868 2AFA  
                         l2796 24F6                           l2788 24D0                           l2892 2928  
                         l3772 14C0                           l3764 144A                           l3692 10F2  
                         l3684 10AE                           l3748 1386                           l3756 1408  
                         l3676 1060                           l3668 0FE0                           l3596 0C1E  
                         l3588 0BF0                           l2990 16E6                           l2982 16AA  
                         l2974 166E                           l2966 1630                           l2958 15DE  
                         l2886 2710                           l2878 26D6                           l2798 24FE  
                         l2894 293C                           l3774 14CA                           l3766 1464  
                         l3758 141C                           l3694 1104                           l3686 10CA  
                         l3678 1074                           l3598 0C2A                           l2992 1702  
                         l2984 16C6                           l2976 168A                           l2968 1642  
                         l2888 271A                           l2896 294C                           l3768 148C  
                         l3696 1118                           l3688 10D2                           l2986 16CE  
                         l2978 1692                           l2994 170A                           l2898 2962  
                         l3698 112C                           l2996 171A                           l2988 16E2  
                         l2998 172E                           _ADFM 7E07                           _ADON 7E10  
                         STR_1 0662                           STR_2 068F                           STR_3 068C  
                         STR_4 0667                           STR_5 065E                           STR_6 065E  
                         STR_7 0647                           STR_8 0647                           STR_9 0654  
                         _BRGH 7D62                           _CREN 7D5C                           u2100 22DE  
                         u2101 22DA                           u2030 2B76                           u2110 22F8  
                         u2031 2B72                           u2111 22F4                           u2040 29F8  
                         u3000 1F1A                           u2200 2B20                           u2120 230C  
                         u2041 29F2                           u3001 1F16                           u2201 2B1C  
                         u2121 2308                           u2210 24AE                           u3010 1F2E  
                         u2130 2320                           u2211 24AA                           u3011 1F2A  
                         u2131 231C                           u2060 2A1A                           u2220 24C8  
                         u2300 25C4                           u3020 1F5E                           u2140 2334  
                         u3100 228C                           u2061 2A16                           u2221 24C4  
                         u2301 25C0                           u3021 1F5A                           u2141 2330  
                         u3101 2288                           u2230 24EE                           u2310 25DA  
                         u3110 28A4                           u2150 2350                           u2070 22A2  
                         u3030 2138                           u2055 29FA                           u2231 24EA  
                         u2311 25D6                           u2151 234C                           u2071 229E  
                         u3031 2134                           u3200 1AC0                           u2240 250C  
                         u2320 25FE                           u3120 28CC                           u2160 2364  
                         u2080 22B6                           u2400 2774                           u3040 2172  
                         u4000 13D8                           u3201 1ABC                           u2241 2508  
                         u2321 25FA                           u2161 2360                           u2081 22B2  
                         u2401 2770                           u3041 216E                           u4001 13D4  
                         u3210 1B00                           u2330 27E4                           u2250 2528  
                         u3130 28DC                           u2170 2378                           u2090 22CA  
                         u2410 278E                           u3050 2188                           u4010 141C  
                         u3211 1AFC                           u2251 2524                           u3131 28D8  
                         u2171 2374                           u2091 22C6                           u2411 278A  
                         u3051 2184                           u4011 1418                           u3300 1C7A  
                         u3220 1B76                           u3140 19F8                           u2340 280C  
                         u2500 15CC                           u2260 254E                           u2180 238C  
                         u2420 27A6                           u3060 21AC                           u4020 1430  
                         u3301 1C76                           u3221 1B72                           u3141 19F4  
                         u2501 15C8                           u2261 254A                           u3117 289A  
                         u2181 2388                           u2421 27A2                           u3061 21A8  
                         u4021 142C                           u3310 1C90                           u3230 1B98  
                         u3150 1A0A                           u2350 281C                           u2510 15DE  
                         u2430 14F0                           u2270 2572                           u2190 29AA  
                         u3070 21F2                           u4030 148C                           u3311 1C8C  
                         u3231 1B94                           u3151 1A06                           u2351 2818  
                         u2511 15DA                           u2431 14EC                           u2271 256E  
                         u3127 28C2                           u2191 29A6                           u3071 21EE  
                         u4031 1488                           u3320 1CA4                           u3240 1BC2  
                         u3160 1A1A                           u3400 2422                           u2600 16C6  
                         u2520 1602                           u2440 1502                           u2360 26E4  
                         u2280 258C                           u3080 2236                           u3321 1CA0  
                         u3241 1BBE                           u3161 1A16                           u3401 241E  
                         u2337 27DA                           u2601 16C2                           u2521 15FE  
                         u2441 14FE                           u2361 26E0                           u2281 2588  
                         u3081 2232                           u3330 1CBE                           u3250 1BE6  
                         u3170 1A5E                           u3410 244A                           u2610 16E2  
                         u2530 161E                           u2450 1526                           u2290 25A6  
                         u2370 294C                           u3090 2248                           u3331 1CBA  
                         u3251 1BE2                           u3171 1A5A                           u3411 2446  
                         u2347 2802                           u2611 16DE                           u2531 161A  
                         u2451 1522                           u4107 26B0                           u2291 25A2  
                         u2371 2948                           u3091 2244                           u3340 1D06  
                         u3260 1BFC                           u3180 1A70                           u3420 246A  
                         u3500 20B2                           u2700 17BC                           u2620 1702  
                         u2540 1630                           u2460 1546                           u2380 274C  
                         u3341 1D02                           u3261 1BF8                           u3181 1A6C  
                         u3421 2466                           u3501 20AE                           u2701 17B8  
                         u2621 16FE                           u2541 162C                           u2461 1542  
                         u2381 2748                           u3350 1D36                           u3270 1C1A  
                         u3190 1A80                           u3430 247A                           u3510 20C0  
                         u2710 17CE                           u2630 171A                           u2550 1642  
                         u2470 156A                           u2390 2764                           u3351 1D32  
                         u3271 1C16                           u3191 1A7C                           u3431 2476  
                         u3511 20BC                           u2711 17CA                           u2631 1716  
                         u2551 163E                           u2471 1566                           u4047 2622  
                         u2391 2760                           u3360 1D64                           u3280 1C3A  
                         u3520 20FA                           u3440 1F7A                           u2800 18CA  
                         u2720 17E0                           u2640 172E                           u2560 1656  
                         u2480 15A6                           u3600 09D4                           u3361 1D60  
                         u3281 1C36                           u3521 20F6                           u3441 1F76  
                         u2801 18C6                           u2721 17DC                           u2641 172A  
                         u2561 1652                           u2481 15A2                           u4057 263C  
                         u3601 09D0                           u3290 1C4C                           u3370 23AC  
                         u3530 2108                           u3450 1F88                           u2810 18DC  
                         u2730 17F4                           u2650 1746                           u2570 166A  
                         u2490 15BA                           u3610 09F0          ?_read_external_eeprom 0001  
                         u3291 1C48                           u3371 23A8                           u3531 2104  
                         u3451 1F84                           u2811 18D8                           u2731 17F0  
                         u2651 1742                           u2571 1666                           u2491 15B6  
                         u4067 2652                           u3611 09EC                           u3380 23E0  
                         u3460 1FE4                           u2900 19BC                           u2820 18EE  
                         u2740 180E                           u2660 1766                           u2580 168A  
                         u3700 0C7A                           u3620 0A24                           u3461 1FE0  
                         u2901 19B8                           u2821 18EA                           u2741 180A  
                         u2661 1762                           u2581 1686                           u4077 2674  
                         u3701 0C76                           u3621 0A20                           u3541 06A2  
                         u3390 240E                           u3470 203A                           u2830 1902  
                         u2750 1848                           u2670 1782                           u2590 16A6  
                         u2910 1D8C                           u3710 0C8C                           u3630 0A58  
                         u3550 072C                           u3391 240A                           u3471 2036  
                         u2831 18FE                           u2751 1844                           u2671 177E  
                         u2591 16A2                           u4087 2686                           u2911 1D88  
                         u3711 0C88                           u3631 0A54                           u3551 0728  
                         u3480 2084                           u2840 1922                           u2760 185C  
                         u2680 1796                           u2920 1DA4                           u3800 0E94  
                         u3720 0C9E                           u3640 0A8C                           u3560 075A  
                         u3385 23D6                           u3481 2080                           u2841 191E  
                         u2761 1858                           u2681 1792                           u4097 269C  
                         u2921 1DA0                           u3801 0E90                           u3721 0C9A  
                         u3641 0A88                           u3561 0756                           u3490 20A2  
                         u2850 1940                           u2770 186E                           u2690 17AA  
                         u2930 1DC0                           u3810 0F4C                           u3730 0CB2  
                         u3650 0AA8                           u3570 08D2                           u3491 209E  
                         u2851 193C                           u2771 186A                           u2691 17A6  
                         u2931 1DBC                           u3811 0F48                           u3731 0CAE  
                         u3651 0AA4                           u3571 08CE                           u2860 1954  
                         u2780 1880                           u2940 1DD2                           u3900 1118  
                         u3820 0FF4                           u3740 0CDC                           u3660 0ABA  
                         u3580 099A                           u2861 1950                           u2781 187C  
                         u2941 1DCE                           u3901 1114                           u3821 0FF0  
                         u3741 0CD8                           u3661 0AB6                           u3581 0996  
                         u2870 196C                           u2790 18AA                           u2950 1DE4  
                         u3910 112C                           u3830 1060                           u3750 0CF8  
                         u3670 0ACE                           u3590 09B6                           u2871 1968  
                         u2791 18A6                           u2951 1DE0                           u3911 1128  
                         u3831 105C                           u3751 0CF2                           u3671 0ACA  
                         u3591 09B2                           u2880 198C                           u2960 1DF8  
                         u3920 1140                           u3840 1074                           u3760 0CFA  
                         u3680 0B20                           u2881 1988                           u2961 1DF4  
                         u3921 113C                           u3841 1070                           u3681 0B1C  
                         u2890 19AA                           u2970 1ED6                           u3930 118A  
                         u3850 1088                           u3770 0D22                           u3690 0B98  
                         u2891 19A6                           u2971 1ED2                           u3931 1186  
                         u3851 1084                           u3771 0D1E                           u3691 0B94  
                         u2980 1EEA                           u3940 119E                           u3860 109A  
                         u3780 0D34                           _RCEN 7E2B                           _RCIF 7CF5  
                         u2981 1EE6                           u3941 119A                           u3861 1096  
                         u3781 0D30                           u2990 1EFE                           u3950 11E6  
                         u3870 10AE                           u3790 0E36                           u2991 1EFA  
                         u3951 11E2                           u3871 10AA                           u3791 0E32  
                         u3960 12CA                           u3880 10EE                           u3961 12C6  
                         u3881 10EA                           u3970 12DC                           u3890 1104  
                         u3971 12D8                           u3891 1100                           u3981 12E6  
                         u3990 137E                           u3991 137A                           _RBPU 7F8F  
                         _SPEN 7D5F                           _RSEN 7E29                           _TXEN 7D65  
                         _TXIF 7CF4                           _SYNC 7D64                           _main 0694  
                         _time 00CF                           fsr0h 0FEA                           _star 005A  
                         indf0 0FEF                           fsr0l 0FE9                           indf2 0FDF  
                         fsr1l 0FE1                           fsr2l 0FD9                           _puts 2880  
                         _stop 0093                           prodh 0FF4                           prodl 0FF3  
                         start 0000                ___fldiv@new_exp 0020           ??_init_matrix_keypad 0001  
                 ___param_bank 0000                 clcd_write@byte 0002                  _i2c_rep_start 2BA2  
                ??_i2c_rx_mode 0001                   ?_init_ds1307 0001                  ___fltol@sign1 0030  
                        _ABDEN 7DC0                          _ADCS0 7E00                          _ADCS1 7E01  
                        _ADCS2 7E02                          ?_main 0001                   ?_read_ds1307 0001  
                        _ACKEN 7E2C                          _ACKDT 7E2D                          _BCLIF 7D0B  
              __end_of___fldiv 1D78                          _ACQT0 7E03                          _ACQT1 7E04  
                        _ACQT2 7E05                __end_of___awdiv 2560                          STR_10 0681  
                        STR_11 0610                          STR_12 061E                          STR_13 0670  
                        STR_14 0689                          STR_15 0689                          STR_16 063A  
                        _BRG16 7DC3                          STR_17 0679                          STR_18 062C  
                        STR_19 0601                __end_of___awmod 2610                __end_of___fltol 249C  
                        ?_puts 0007                ___awdiv@divisor 0003                   ?_init_config 0001  
              ___awdiv@counter 0005                          _VCFG0 7E0C                          _VCFG1 7E0D  
                        _RCREG 0FAE                          _SENDB 7D63                          _SPBRG 0FAF  
                        _PORTB 0F81                   main@download 0100                          _PORTD 0F83  
                        _TRISB 0F93                          _TRISC 0F94                          _TRISD 0F95  
                        _SSPIF 7CF3                          _TXREG 0FAD      write_external_eeprom@data 0002  
    write_external_eeprom@wait 0003                          _flag1 005E                          _flag2 00E5  
                        _flag3 005C                          _flag4 0097                          _clear 00E3  
                        _count 00E7                          _hours 0058                          _putch 2B10  
                        main@a 00C1                          main@b 00C3                          main@i 00C5  
                        main@j 00BF                          tablat 0FF5                          plusw1 0FE3  
                        plusw2 0FDB                          puts@s 0007                          status 0FD8  
             init_ds1307@dummy 000B                     _i2c_no_ack 2BB8                __initialization 281E  
               ?_i2c_rep_start 0001         ?_write_external_eeprom 0002                   __end_of_main 14DE  
                 __end_of_puts 28DE               __end_of_i2c_idle 2B7A               __end_of_i2c_read 2B92  
             __end_of_i2c_stop 2B9A                         ??_main 0032                         ??_puts 0009  
                 _storing_data 00E1                  __activetblptr 0002            __end_of_i2c_rx_mode 2BB2  
                       _ADCON0 0FC2                         _ADCON1 0FC1               read_switches@key 00EB  
       ??_read_external_eeprom 0002                         _ADRESH 0FC4                         _ADRESL 0FC3  
             ___awdiv@dividend 0001                store_data@i_321 000D                store_data@i_322 000F  
                       ?_putch 0001                         _GODONE 7E11                   _write_ds1307 2AD8  
                main@download1 0035                         _SSPADD 0FC8                         _TRISC3 7CA3  
                       _TRISC4 7CA4                         _TRISC6 7CA6                         _TRISC7 7CA7  
                       _TRISD7 7CAF                         _SSPBUF 0FC9               __end_of___xxtofl 211C  
              store_data@write 0006               __end_of_get_time 273A                         ___wmul 2A74  
                    ??___fldiv 0017                      ??___awdiv 0005                      ??___awmod 0005  
                    ??___fltol 002C               __end_of_init_i2c 2B56               __end_of_init_adc 2ABA  
             __end_of_read_adc 296C                         clear_0 2864               ___awdiv@quotient 0007  
              ___awmod@divisor 0003                         isa$std 0001               __end_of_scan_key 2396  
              ___awmod@counter 0005                   main_menu@key 000D                   __pdataCOMRAM 005A  
                 __mediumconst 0000                         tblptrh 0FF7                         tblptrl 0FF6  
                       tblptru 0FF8                   ___xxtofl@arg 000B                   ___xxtofl@exp 000A  
                 ___xxtofl@val 0001                     __accesstop 0060        __end_of__initialization 2876  
                ___rparam_used 0001                     ___fltol@f1 0028                ??_i2c_rep_start 0001  
                  ?_i2c_no_ack 0001                 __pcstackCOMRAM 0001                   __pidataBANK0 29AC  
                  _i2c_rx_mode 2BAA                  __end_of_putch 2B28              __end_of_i2c_start 2BA2  
            __end_of_i2c_write 2B86                        ??_putch 0001                     __pbssBANK0 00CF  
                    ?_i2c_idle 0001                      ?_i2c_read 0001                      ?_i2c_stop 0001  
                   _dash_board 14DE                     _clcd_print 27B2                     _clcd_putch 2B28  
                   _clcd_write 29E6   write_external_eeprom@address 0005                read_ds1307@data 0003  
                      ?___wmul 0001                   _clearing_log 00DF              read_switches@once 0099  
                      _ACKSTAT 7E2E                      ?___xxtofl 0001                        _SSPCON1 0FC6  
                    ?_get_time 0001                  _read_switches 273A                     ??_i2c_idle 0001  
                   ??_i2c_read 0001                     ??_i2c_stop 0001                      ?_init_i2c 0001  
                    ?_init_adc 0001                      ?_read_adc 0001                      ?_scan_key 0001  
      ??_write_external_eeprom 0003                        __Hparam 0000                        __Lparam 0000  
                      ___fldiv 19DE                        ___awdiv 249C                        ___awmod 2560  
                      ___fltol 2396                   __psmallconst 0600              __end_of_main_menu 1F68  
                      __pcinit 281E                        __ramtop 0600                        __ptext0 0694  
                      __ptext1 211C                        __ptext2 296C                        __ptext3 2A20  
                      __ptext4 273A                        __ptext5 228E                        __ptext6 2926  
                      __ptext7 2880                        __ptext8 2B10                        __ptext9 1D78  
            __end_of_init_clcd 26B8                     ??___xxtofl 0005              __end_of_init_uart 2AD8  
             ___awmod@dividend 0001                  dash_board@key 0002                 ?_read_switches 0001  
                      main@adc 00C9                        main@key 0053                     ??_get_time 0004  
         end_of_initialization 2876                     ??_init_i2c 0001                     ??_init_adc 0001  
                __Lmediumconst 0000                     ??_read_adc 0003                    ?_dash_board 0001  
                   ??_scan_key 0001                    ?_clcd_print 0007                    ?_clcd_putch 0009  
                  ?_clcd_write 0001                        postdec1 0FE5                        postinc0 0FEE  
                   main@F10508 0060                     main@F10534 007B                main@adc_reg_val 0047  
                    _PORTBbits 0F81                read_adc@channel 0007                  i2c_write@data 0001  
                ___xxtofl@sign 0009                read_adc@reg_val 0005                    ___fldiv@grs 0022  
                  ___fldiv@rem 001B       read_external_eeprom@data 0003            dash_board@start_dec 00DB  
                 ??_i2c_no_ack 0001                     _store_data 211C                   ?_i2c_rx_mode 0001  
               __end_of___wmul 2A9A                  __pidataCOMRAM 2BB2            start_initialization 281E  
              ??_read_switches 0001                      _i2c_start 2B9A                      _i2c_write 2B7A  
           __end_of_i2c_no_ack 2BBE                 store_data@temp 000A          __end_of_i2c_rep_start 2BAA  
                     ??___wmul 0005                  ??_init_ds1307 000B                    __pdataBANK0 0060  
                ??_read_ds1307 0002    read_switches@detection_type 0001                  ??_init_config 000C  
                    ___fldiv@a 0013                      ___fldiv@b 000F                    __pbssCOMRAM 0054  
                __pcstackBANK0 009A                  __pcstackBANK1 0100                     ?_i2c_start 0001  
                   ?_i2c_write 0001                    ?_store_data 0006  __end_of_write_external_eeprom 29AC  
                     ?___fldiv 000F                       ?___awdiv 0001                       ?___awmod 0001  
                     ?___fltol 0028             read_ds1307@address 0002                      _clock_reg 00D8  
                  __smallconst 0600                      _main_menu 1D78            __end_of_init_ds1307 2926  
                  store_data@i 000B            __end_of_read_ds1307 2A74                      _init_clcd 2610  
          __end_of_init_config 2B10                      _init_uart 2ABA                  ?_write_ds1307 0009  
               ___wmul@product 0005    read_external_eeprom@address 0002                   ??_dash_board 0001  
                 ??_clcd_print 000A                   ??_clcd_putch 000A     __end_of_init_matrix_keypad 2B68  
                 ??_clcd_write 0002          clcd_write@control_bit 0001                      main@i_170 00CB  
                    main@i_175 00C7                      main@j_171 00CD              ___wmul@multiplier 0001  
                    main@delay 00DD                      main@blink 008F                     ?_main_menu 0001  
           __end_of_dash_board 19DE                      main@store 00B5                      main@write 0049  
                  ??_i2c_start 0001             __end_of_clcd_print 281E                    ??_i2c_write 0001  
           __end_of_clcd_putch 2B40             __end_of_clcd_write 2A20                     ?_init_clcd 0001  
                   ?_init_uart 0001                      copy_data0 2832                      copy_data1 2852  
               ??_write_ds1307 000A                       _i2c_idle 2B68                       _i2c_read 2B86  
                     _i2c_stop 2B92                  store_data@clr 0011                       __Hrparam 0000  
                     __Lrparam 0000   __end_of_read_external_eeprom 2A4A                    _init_ds1307 28DE  
                  _read_ds1307 2A4A                    _init_config 2AF6                       ___xxtofl 1F68  
                     _data_lim 00E9            write_ds1307@address 000A                       __ptext10 2560  
                     __ptext11 249C                       __ptext20 26B8                       __ptext12 2AF6  
                     __ptext21 2A4A                       __ptext13 2ABA                       __ptext30 14DE  
                     __ptext22 2B7A                       __ptext14 2B56                       __ptext31 2B28  
                     __ptext23 2B92                       __ptext15 2B40                       __ptext32 27B2  
                     __ptext24 2B9A                       __ptext16 28DE                       __ptext33 29E6  
                     __ptext25 2BA2                       __ptext17 2AD8                       __ptext34 1F68  
                     __ptext26 2B86                       __ptext18 2610                       __ptext35 2A74  
                     __ptext27 2BAA                       __ptext19 2A9A                       __ptext36 2396  
                     __ptext28 2B68                       __ptext37 19DE                       __ptext29 2BB8  
                     _get_time 26B8                       _init_i2c 2B40                       _init_adc 2A9A  
                     _read_adc 2926                       _scan_key 228E                 dash_board@flag 008D  
                     isa$xinst 0000                       main@gear 009A                    ??_main_menu 000B  
                    putch@byte 0001                    ??_init_clcd 0003          __end_of_read_switches 27B2  
                  ??_init_uart 0001          store_data@shift_index 0008                   ??_store_data 0008  
         __end_of_write_ds1307 2AF6             __end_of_store_data 228E               write_ds1307@data 0009  
         _read_external_eeprom 2A20              main@stop_download 0091  
